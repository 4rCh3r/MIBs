#-MIBFILE: zsmp.mib

SNMP-AGENT-PUBLIC-MIB DEFINITIONS ::= BEGIN


DisplayString ::=
	OCTET STRING

PhysAddress ::=
	OCTET STRING

DateAndTime ::=
	OCTET STRING (SIZE(8|11))

tandem OBJECT IDENTIFIER ::= { enterprises 169 }

nonstopsystems OBJECT IDENTIFIER ::= { tandem 3 }

zsmp OBJECT IDENTIFIER ::= { nonstopsystems 155 }

zsmpagent OBJECT IDENTIFIER ::= { zsmp 1 }

zagInternal OBJECT IDENTIFIER ::= { zsmpagent 7 }

zagInProcess OBJECT IDENTIFIER ::= { zagInternal 1 }

zagInEndpoint OBJECT IDENTIFIER ::= { zagInternal 2 }

zagInProfile OBJECT IDENTIFIER ::= { zagInternal 3 }

zagInTrapdest OBJECT IDENTIFIER ::= { zagInternal 4 }

zagInProcCurrTime OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "String showing the current time.
('month day, year  hours:minutes:seconds.hundreths')"
	::= { zagInProcess 1 }


zagInProcVersion OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "String showing the version of the agent."
	::= { zagInProcess 2 }


zagInProcName OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "String showing the agent's process name."
	::= { zagInProcess 3 }


zagInProcPAID OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "String showing the process access id ('group,user')."
	::= { zagInProcess 4 }


zagInProcPrimPID OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "String showing the primary process PID ('cpu,pin')."
	::= { zagInProcess 5 }


zagInProcBkupPID OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "String showing the backup process PID ('cpu,pin')."
	::= { zagInProcess 6 }


zagInProcCreatTime OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "String showing the process creation time
('month day, year  hours:minutes:seconds.hundreths')"
	::= { zagInProcess 7 }


zagInProcCpuTime OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Process CPU time ('hours:minutes:seconds.hundreths')"
	::= { zagInProcess 8 }


zagInProcPri OBJECT-TYPE
	SYNTAX INTEGER (1..199)
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Current process priority. Valid range 1-199"
	::= { zagInProcess 9 }


zagInProcHomeTerm OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "String showing the process home terminal name."
	::= { zagInProcess 10 }


zagInProcMaxOpeners OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The maximum number of openers the agent can support at one time."
	::= { zagInProcess 11 }


zagInProcCurrentOpeners OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The current number of agent openers."
	::= { zagInProcess 12 }


zagInEndpointTable OBJECT-TYPE
	SYNTAX SEQUENCE OF ZagInEndpointEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A list of endpoint entries, accessible via the SNMP
protocol."
	::= { zagInEndpoint 1 }


zagInEndpointEntry OBJECT-TYPE
	SYNTAX ZagInEndpointEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "An endpoint entry containing objects defining
a socket on which SNMP manager messages will
be received and replied to."
	INDEX { zagInEpName  }

	::= { zagInEndpointTable 1 }

zagInEndpointEntry ::=
	SEQUENCE {
		zagInEpRowStatus INTEGER,
		zagInEpName DisplayString,
		zagInEpState INTEGER,
		zagInEpHostAddr DisplayString,
		zagInEpNetwork DisplayString
		}

zagInEpRowStatus OBJECT-TYPE
	SYNTAX INTEGER {
	active(1),
	notInService(2),
	notReady(3),
	createAndGo(4),
	createAndWait(5),
	destroy(6)
	}
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Used to manage the creation, alteration and deletion of
table rows.  The row must be in the 'notReady' or the
'notInService' state for any row object to be modified."
	::= { zagInEndpointEntry 1 }


zagInEpName OBJECT-TYPE
	SYNTAX DisplayString (SIZE(2..8))
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The name assigned to this endpoint.  This object is created
by the agent by extracting the index value from the initial
row creation varbind.  For compatibility with Tandem's
Subsystem Control Facility (SCF):
1. The name must be capitalized.
2. The name must start with '#'.
3. Valid characters are 'A' to 'Z' and '0' to '9'."
	::= { zagInEndpointEntry 2 }


zagInEpState OBJECT-TYPE
	SYNTAX INTEGER {
	defined(1),
	started(3),
	starting(4),
	stopped(5)
	}
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The current operational state of the endpoint."
	::= { zagInEndpointEntry 3 }


zagInEpHostAddr OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The local host address the agent is to monitor for
incoming messages.  For IP addresses, this value must be
either 0.0.0.0 or a fully specified address (e.g.,
103.252.12.3).  The default value is 0.0.0.0."
	::= { zagInEndpointEntry 4 }


zagInEpNetwork OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The name of the process the agent must use to establish
the socket session.  The default value is $ZTC0."
	::= { zagInEndpointEntry 5 }


zagInProfileTable OBJECT-TYPE
	SYNTAX SEQUENCE OF ZagInProfileEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A list of profile entries, accessible via the SNMP and
snmpIPC protocols."
	::= { zagInProfile 1 }


zagInProfileEntry OBJECT-TYPE
	SYNTAX ZagInProfileEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A profile entry containing objects used for
authenticating a network management station request."
	INDEX { zagInPfName  }

	::= { zagInProfileTable 1 }

zagInProfileEntry ::=
	SEQUENCE {
		zagInPfRowStatus INTEGER,
		zagInPfName DisplayString,
		zagInPfState INTEGER,
		zagInPfHostAddr DisplayString,
		zagInPfCommunity DisplayString,
		zagInPfAccess INTEGER
		}

zagInPfRowStatus OBJECT-TYPE
	SYNTAX INTEGER {
	active(1),
	notInService(2),
	notReady(3),
	createAndGo(4),
	createAndWait(5),
	destroy(6)
	}
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Used to manage the creation, alteration and deletion of
table rows.  The row must in the 'notReady' or the
'notInService' state for any row object to be modified.

This object is accessible only via the #MGR interface."
	::= { zagInProfileEntry 1 }


zagInPfName OBJECT-TYPE
	SYNTAX DisplayString (SIZE(2..8))
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The name assigned to this profile.  This object is created
by the agent by extracting the index value from the initial
row creation varbind.  For compatibility with Tandem's
Subsystem Control Facility (SCF):
1. The name must be capitalized.
2. The name must start with '#'.
3. Valid characters are 'A' to 'Z' and '0' to '9'.

This object is accessible only via the #MGR interface."
	::= { zagInProfileEntry 2 }


zagInPfState OBJECT-TYPE
	SYNTAX INTEGER {
	defined(1),
	started(3),
	starting(4),
	stopped(5)
	}
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The current operational state of the profile.

This object is accessible only via the #MGR interface."
	::= { zagInProfileEntry 3 }


zagInPfHostAddr OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The address of the host sending the message.  In
conjunction with the community name, provides the
authentication attributes for validating received
messages.  If the value of this attribute is 0.0.0.0,
messages with the correct commuinty string will be
accepted without regard to the originating host's
address.  The default value is 0.0.0.0.

This object is accessible only via the #MGR interface."
	::= { zagInProfileEntry 4 }


zagInPfCommunity OBJECT-TYPE
	SYNTAX DisplayString (SIZE(0..255))
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A data string to be compared with the community string
of received messages for the purpose of authenticating
the message.  The default value is 'public'.

The community string can be divided into two sections,
with syntax:

{<agent community string>}[::<subagent community string>]

The agent community string length can be 0 to 50 bytes.
The total community string length can be 0 to 255 bytes.
Since the agent knows only its own community strings,
only its community strings will be returned in response
to queries, whether via SCF, the SNMP protocol, or the
#MGR service point.

The following rules apply to setting the agent's
community string:

1. The length must be 0 to 50 characters.
2. The community string must not contain successive
colons ('::').
3. The community string must consist entirely of
printable characters.

If any of these rules is violated, the set is rejected
with a 'badValue' errorStatus.

The agent does not look at the subagent portion of the
community string.  Therefore, the subagent portion is
defined as OCTET STRING, rather than DisplayString; i.e.,
it is not restricted to printable characters.

This object is accessible only via the #MGR interface."
	::= { zagInProfileEntry 5 }


zagInPfAccess OBJECT-TYPE
	SYNTAX INTEGER {
	readOnly(1),
	readWrite(2)
	}
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Access defines the authority of the community members
to retrieve and alter network management information.
The default value is read-only.

This object is accessible only via the #MGR interface."
	::= { zagInProfileEntry 6 }


zagInDirectedTrapdestName OBJECT-TYPE
	SYNTAX DisplayString (SIZE(2..8))
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "This object is used by the subagent to specify a trap
destination name (zagInTdName) in the agent's trapDest
table to which a directed trap is to be sent.  To issue a
directed trap, varbinds with this object identifier
must appear first in an snmpIPC-Trap-PDU's varbind list.

For compatibility with Tandem's Subsystem Control Facility
(SCF):
1. The name must be capitalized.
2. The name must start with '#'.
3. Valid characters are 'A' to 'Z' and '0' to '9'."
	::= { zagInTrapdest 1 }


zagInTrapdestTable OBJECT-TYPE
	SYNTAX SEQUENCE OF ZagInTrapdestEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A list of trap destination entries."
	::= { zagInTrapdest 2 }


zagInTrapdestEntry OBJECT-TYPE
	SYNTAX ZagInTrapdestEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A trap destination entry containing objects defining
the attributes of a trap destination."
	INDEX { zagInTdName  }

	::= { zagInTrapdestTable 1 }

zagInTrapdestEntry ::=
	SEQUENCE {
		zagInTdRowStatus INTEGER,
		zagInTdName DisplayString,
		zagInTdState INTEGER,
		zagInTdHostAddr DisplayString,
		zagInTdCommunity DisplayString,
		zagInTdNetwork DisplayString,
		zagInTdType INTEGER,
		zagInTdPort INTEGER
		}

zagInTdRowStatus OBJECT-TYPE
	SYNTAX INTEGER {
	active(1),
	notInService(2),
	notReady(3),
	createAndGo(4),
	createAndWait(5),
	destroy(6)
	}
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Used to manage the creation, alteration and deletion of
table rows.  The row must in the 'notReady' or the
'notInService' state for any row object to be modified."
	::= { zagInTrapdestEntry 1 }


zagInTdName OBJECT-TYPE
	SYNTAX DisplayString (SIZE(2..8))
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The name assigned to this trapDest.  This object is created
by the agent by extracting the index value from the initial
row creation varbind.  For compatibility with Tandem's
Subsystem Control Facility (SCF):
1. The name must be capitalized.
2. The name must start with '#'.
3. Valid characters are 'A' to 'Z' and '0' to '9'."
	::= { zagInTrapdestEntry 2 }


zagInTdState OBJECT-TYPE
	SYNTAX INTEGER {
	defined(1),
	started(3),
	starting(4),
	stopped(5)
	}
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The current operational state of the trapdest."
	::= { zagInTrapdestEntry 3 }


zagInTdHostAddr OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The address of the host which is to receive trap
messages.  There is no default value."
	::= { zagInTrapdestEntry 4 }


zagInTdCommunity OBJECT-TYPE
	SYNTAX DisplayString (SIZE(0..50))
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A data string to be compared with the community string
of received messages for the purpose of authenticating
the message.  The default value is 'Tandem'."
	::= { zagInTrapdestEntry 5 }


zagInTdNetwork OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The name of the process the agent must use to establish
the socket session.  The default value is $ZTC0."
	::= { zagInTrapdestEntry 6 }


zagInTdType OBJECT-TYPE
	SYNTAX INTEGER {
	broadcast(1),
	directed(2)
	}
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Broadcast trapDests are sent all trap messages except
directed ones.  Directed trapDests receive only directed
traps."
	::= { zagInTrapdestEntry 7 }


zagInTdPort OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The port of the host which is to receive trap
messages.  The default value is 162."
	::= { zagInTrapdestEntry 8 }


END

