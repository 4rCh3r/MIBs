#-MIBFILE: LEFTHAND-NETWORKS-NSM-INFO-MIB.mib

LEFTHAND-NETWORKS-NSM-INFO-MIB DEFINITIONS ::= BEGIN


DisplayString ::=
	OCTET STRING (SIZE(0..255))

PhysAddress ::=
	OCTET STRING

MacAddress ::=
	OCTET STRING (SIZE(6))

TruthValue ::=
	INTEGER {
	true(1),
	false(2)
	}

TestAndIncr ::=
	INTEGER (0..2147483647)

AutonomousType ::=
	OBJECT IDENTIFIER

InstancePointer ::=
	OBJECT IDENTIFIER

VariablePointer ::=
	OBJECT IDENTIFIER

RowPointer ::=
	OBJECT IDENTIFIER

RowStatus ::=
	INTEGER {
	active(1),
	notInService(2),
	notReady(3),
	createAndGo(4),
	createAndWait(5),
	destroy(6)
	}

TimeStamp ::=
	TimeTicks

TimeInterval ::=
	INTEGER (0..2147483647)

DateAndTime ::=
	OCTET STRING (SIZE(8|11))

StorageType ::=
	INTEGER {
	other(1),
	volatile(2),
	nonVolatile(3),
	permanent(4),
	readOnly(5)
	}

TDomain ::=
	OBJECT IDENTIFIER

TAddress ::=
	OCTET STRING (SIZE(1..255))

lefthandnetworks OBJECT IDENTIFIER ::= { enterprises 9804 }
lefthandnetworksRegistrations OBJECT IDENTIFIER ::= { lefthandnetworks 2 }
lhnModules OBJECT IDENTIFIER ::= { lefthandnetworksRegistrations 1 }
lefthandnetworksProducts OBJECT IDENTIFIER ::= { lefthandnetworks 3 }
lhnNsm OBJECT IDENTIFIER ::= { lefthandnetworksProducts 1 }
lefthandnetworksRegistrations OBJECT IDENTIFIER ::= { lefthandnetworks 2 }
lhnNsmDevices OBJECT IDENTIFIER ::= { lhnNsm 1 }
lhnNsmObjects OBJECT IDENTIFIER ::= { lhnNsmDevices 2 }
lhnNsmInfo OBJECT IDENTIFIER ::= { lhnNsmObjects 1 }
lhnNsmInfoModule OBJECT IDENTIFIER ::= { lhnModules 2 }

lhnNsmInfoModuleConformance OBJECT IDENTIFIER ::= { lhnNsmInfoModule 1 }

lhnNsmInfoModuleCompliances OBJECT IDENTIFIER ::= { lhnNsmInfoModuleConformance 1 }

lhnNsmInfoModuleGroups OBJECT IDENTIFIER ::= { lhnNsmInfoModuleConformance 2 }

lefthandNetworksNsmInfoGroup OBJECT IDENTIFIER ::= { lhnNsmInfoModuleGroups 1 }

lefthandNetworksNsmInfoGroupObsolete OBJECT IDENTIFIER ::= { lhnNsmInfoModuleGroups 2 }

infoSerialNumberOld OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS obsolete
	DESCRIPTION "The storage serial number. Obsolete in SAN/iQ 8.5."
	::= { lhnNsmInfo 1 }


infoModelOld OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS obsolete
	DESCRIPTION "The storage node model name. Obsolete in SAN/iQ 8.5."
	::= { lhnNsmInfo 2 }


infoSoftwareVersionOld OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS obsolete
	DESCRIPTION "The software version. Obsolete in SAN/iQ 8.5."
	::= { lhnNsmInfo 3 }


infoEnclosureFirmwareVersionOld OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS obsolete
	DESCRIPTION "The enclosure firmware version. Obsolete in SAN/iQ 8.5."
	::= { lhnNsmInfo 4 }


infoMotherboardTemperature OBJECT-TYPE
	SYNTAX Gauge
	ACCESS read-only
	STATUS obsolete
	DESCRIPTION "The motherboard temperature. Obsolete in SAN/iQ 8.5. Use 'infoTemperatureSensorTable'."
	::= { lhnNsmInfo 5 }


infoCPUCount OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS obsolete
	DESCRIPTION "The number of CPU's. Obsolete in SAN/iQ 8.5."
	::= { lhnNsmInfo 14 }


infoCPUTable OBJECT-TYPE
	SYNTAX SEQUENCE OF InfoCPUEntry
	ACCESS read-only
	STATUS obsolete
	DESCRIPTION "A table of CPU's in the system. The number of
entries is given by infoCPUCount. Obsolete in SAN/iQ 8.5."
	::= { lhnNsmInfo 15 }


infoCPUEntry OBJECT-TYPE
	SYNTAX InfoCPUEntry
	ACCESS read-only
	STATUS obsolete
	DESCRIPTION "A row of CPU information. Obsolete in SAN/iQ 8.5."
	INDEX { infoCPUIndex  }

	::= { infoCPUTable 1 }

infoCPUEntry ::=
	SEQUENCE {
		infoCPUIndex Unsigned32,
		infoCPUTemperature Gauge32,
		infoCPUFanSpeed Gauge32
		}

infoCPUIndex OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS obsolete
	DESCRIPTION "The index for the infoCPUTable table. Obsolete in SAN/iQ 8.5."
	::= { infoCPUEntry 1 }


infoCPUTemperature OBJECT-TYPE
	SYNTAX Gauge
	ACCESS read-only
	STATUS obsolete
	DESCRIPTION "The CPU temperature. Obsolete in SAN/iQ 8.5. Use 'infoTemperatureSensorTable'."
	::= { infoCPUEntry 2 }


infoCPUFanSpeed OBJECT-TYPE
	SYNTAX Gauge
	ACCESS read-only
	STATUS obsolete
	DESCRIPTION "The CPU fan speed. Obsolete in SAN/iQ 8.5. Use 'infoFanTable'."
	::= { infoCPUEntry 3 }


infoObsoletePowerSupplyCount OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS obsolete
	DESCRIPTION "The number of power supplies. Obsolete in SAN/iQ 8.5. Use 'infoPowerSupplyCount'."
	::= { lhnNsmInfo 16 }


infoObsoletePowerSupplyTable OBJECT-TYPE
	SYNTAX SEQUENCE OF InfoObsoletePowerSupplyEntry
	ACCESS read-only
	STATUS obsolete
	DESCRIPTION "A table of power supplies in the system. The number
of entries is given by infoObsoletePowerSupplyCount. Obsolete in SAN/iQ 8.5. Use 'infoPowerSupplyTable'."
	::= { lhnNsmInfo 17 }


infoObsoletePowerSupplyEntry OBJECT-TYPE
	SYNTAX InfoObsoletePowerSupplyEntry
	ACCESS read-only
	STATUS obsolete
	DESCRIPTION "A row of power supply information. Obsolete in SAN/iQ 8.5."
	INDEX { infoObsoletePowerSupplyIndex  }

	::= { infoObsoletePowerSupplyTable 1 }

infoObsoletePowerSupplyEntry ::=
	SEQUENCE {
		infoObsoletePowerSupplyIndex Unsigned32,
		infoObsoletePowerSupplyState DisplayString
		}

infoObsoletePowerSupplyIndex OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS obsolete
	DESCRIPTION "The index for the infoObsoletePowerSupplyTable table. Obsolete in SAN/iQ 8.5."
	::= { infoObsoletePowerSupplyEntry 1 }


infoObsoletePowerSupplyState OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS obsolete
	DESCRIPTION "The power supply state. Obsolete in SAN/iQ 8.5. Use 'infoPowerSupplyState'."
	::= { infoObsoletePowerSupplyEntry 3 }


infoObsoleteFanCount OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS obsolete
	DESCRIPTION "The number of fans. Obsolete in SAN/iQ 8.5. Use 'infoFanCount'."
	::= { lhnNsmInfo 18 }


infoObsoleteFanTable OBJECT-TYPE
	SYNTAX SEQUENCE OF InfoObsoleteFanEntry
	ACCESS read-only
	STATUS obsolete
	DESCRIPTION "A table of fans in the system. The number of entries
is given by infoObsoleteFanCount. Obsolete in SAN/iQ 8.5. Use 'infoFanTable'."
	::= { lhnNsmInfo 19 }


infoObsoleteFanEntry OBJECT-TYPE
	SYNTAX InfoObsoleteFanEntry
	ACCESS read-only
	STATUS obsolete
	DESCRIPTION "A row of fan information. Obsolete in SAN/iQ 8.5."
	INDEX { infoObsoleteFanIndex  }

	::= { infoObsoleteFanTable 1 }

infoObsoleteFanEntry ::=
	SEQUENCE {
		infoObsoleteFanIndex Unsigned32,
		infoObsoleteFanState DisplayString
		}

infoObsoleteFanIndex OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS obsolete
	DESCRIPTION "The index for infoObsoleteFanTable table. Obsolete in SAN/iQ 8.5."
	::= { infoObsoleteFanEntry 1 }


infoObsoleteFanState OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS obsolete
	DESCRIPTION "The fan state. Obsolete in SAN/iQ 8.5. Use 'infoFanState'."
	::= { infoObsoleteFanEntry 3 }


infoFlashCount OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS obsolete
	DESCRIPTION "The number of flash cards. Obsolete in SAN/iQ 8.5."
	::= { lhnNsmInfo 20 }


infoFlashTable OBJECT-TYPE
	SYNTAX SEQUENCE OF InfoFlashEntry
	ACCESS read-only
	STATUS obsolete
	DESCRIPTION "A table of flash cards in the system. The number
of entries is given by infoFlashCount. Obsolete in SAN/iQ 8.5."
	::= { lhnNsmInfo 21 }


infoFlashEntry OBJECT-TYPE
	SYNTAX InfoFlashEntry
	ACCESS read-only
	STATUS obsolete
	DESCRIPTION "A row of flash card information. Obsolete in SAN/iQ 8.5."
	INDEX { infoFlashIndex  }

	::= { infoFlashTable 1 }

infoFlashEntry ::=
	SEQUENCE {
		infoFlashIndex Unsigned32,
		infoFlashState DisplayString
		}

infoFlashIndex OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS obsolete
	DESCRIPTION "The index for the infoFlashTable table. Obsolete in SAN/iQ 8.5."
	::= { infoFlashEntry 1 }


infoFlashState OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS obsolete
	DESCRIPTION "The flash card state. Obsolete in SAN/iQ 8.5."
	::= { infoFlashEntry 2 }


infoDriveCardCount OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS obsolete
	DESCRIPTION "The number of drive interface cards. Obsolete in SAN/iQ 8.5. Use 'infoControllerCount'."
	::= { lhnNsmInfo 24 }


infoDriveCardTable OBJECT-TYPE
	SYNTAX SEQUENCE OF InfoDriveCardEntry
	ACCESS read-only
	STATUS obsolete
	DESCRIPTION "A table of drive interface cards in the system.
The number of entries is given by infoDriveCardCount. Obsolete in SAN/iQ 8.5. Use 'infoControllerTable'."
	::= { lhnNsmInfo 25 }


infoDriveCardEntry OBJECT-TYPE
	SYNTAX InfoDriveCardEntry
	ACCESS read-only
	STATUS obsolete
	DESCRIPTION "A row of drive card information. Obsolete in SAN/iQ 8.5."
	INDEX { infoDriveCardIndex  }

	::= { infoDriveCardTable 1 }

infoDriveCardEntry ::=
	SEQUENCE {
		infoDriveCardIndex Unsigned32,
		infoDriveCardModel DisplayString,
		infoDriveCardBiosVersion DisplayString,
		infoDriveCardFirmwareVersion DisplayString
		}

infoDriveCardIndex OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS obsolete
	DESCRIPTION "The index for the infoDriveCardTable table. Obsolete in SAN/iQ 8.5."
	::= { infoDriveCardEntry 1 }


infoDriveCardModel OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS obsolete
	DESCRIPTION "The drive interface card model. Obsolete in SAN/iQ 8.5. Use 'infoControllerModelNumber'."
	::= { infoDriveCardEntry 2 }


infoDriveCardBiosVersion OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS obsolete
	DESCRIPTION "The drive interface card BIOS version. Obsolete in SAN/iQ 8.5. Use 'infoControllerBiosVersion'."
	::= { infoDriveCardEntry 3 }


infoDriveCardFirmwareVersion OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS obsolete
	DESCRIPTION "The drive interface card firmware version. Obsolete in SAN/iQ 8.5. Use 'infoControllerFirmwareVersion'."
	::= { infoDriveCardEntry 4 }


infoCacheBatteryCount OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS obsolete
	DESCRIPTION "The number of cache batteries. Obsolete in SAN/iQ 8.5. Use 'infoCacheCount'."
	::= { lhnNsmInfo 28 }


infoCacheBatteryTable OBJECT-TYPE
	SYNTAX SEQUENCE OF InfoCacheBatteryEntry
	ACCESS read-only
	STATUS obsolete
	DESCRIPTION "A table of cache batteries in the system. The
number of entries is given by infoCacheBatteryCount. Obsolete in SAN/iQ 8.5. Use 'infoCacheTable'."
	::= { lhnNsmInfo 29 }


infoCacheBatteryEntry OBJECT-TYPE
	SYNTAX InfoCacheBatteryEntry
	ACCESS read-only
	STATUS obsolete
	DESCRIPTION "A row of cache battery information. Obsolete in SAN/iQ 8.5."
	INDEX { infoCacheBatteryIndex  }

	::= { infoCacheBatteryTable 1 }

infoCacheBatteryEntry ::=
	SEQUENCE {
		infoCacheBatteryIndex Unsigned32,
		infoCacheBatteryState DisplayString
		}

infoCacheBatteryIndex OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS obsolete
	DESCRIPTION "The index for the infoBatteryTable. Obsolete in SAN/iQ 8.5."
	::= { infoCacheBatteryEntry 1 }


infoCacheBatteryState OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS obsolete
	DESCRIPTION "The cache battery state. Obsolete in SAN/iQ 8.5. Use 'infoCacheBpsState'."
	::= { infoCacheBatteryEntry 2 }


infoModel OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The NSM model name."
	::= { lhnNsmInfo 30 }


infoHostname OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The hostname for the NSM."
	::= { lhnNsmInfo 31 }


infoIP OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The IP address of the primary network interface."
	::= { lhnNsmInfo 32 }


infoMAC OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The MAC address for the primary network interface."
	::= { lhnNsmInfo 33 }


infoSerialNumber OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The chassis serial number."
	::= { lhnNsmInfo 34 }


infoChassisUUID OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The chassis UUID (universally unique identifier). This may not be the same as the UUID the vendor uses."
	::= { lhnNsmInfo 35 }


infoProductName OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The chassis product name."
	::= { lhnNsmInfo 36 }


infoProductID OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The chassis product ID."
	::= { lhnNsmInfo 37 }


infoSupportKey OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The support key."
	::= { lhnNsmInfo 38 }


infoHardwareDescription OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A description of the hardware platform."
	::= { lhnNsmInfo 39 }


infoSoftwareType OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The software type."
	::= { lhnNsmInfo 50 }


infoSoftwareVersion OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The software version."
	::= { lhnNsmInfo 51 }


infoHPsmhdVersion OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The HP System Management Home Page version."
	::= { lhnNsmInfo 52 }


infoHPSNMPAgent OBJECT-TYPE
	SYNTAX TruthValue
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The HP SNMP Agent installation state."
	::= { lhnNsmInfo 53 }


infoBIOSVersion OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The chassis BIOS version."
	::= { lhnNsmInfo 70 }


infoControllerCount OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The number of RAID controllers."
	::= { lhnNsmInfo 80 }


infoControllerTable OBJECT-TYPE
	SYNTAX SEQUENCE OF InfoControllerEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A table of RAID controllers in the system. The number of entries
is given by infoControllerCount."
	::= { lhnNsmInfo 81 }


infoControllerEntry OBJECT-TYPE
	SYNTAX InfoControllerEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A row of RAID controller information."
	INDEX { infoControllerIndex  }

	::= { infoControllerTable 1 }

infoControllerEntry ::=
	SEQUENCE {
		infoControllerIndex Unsigned32,
		infoControllerName DisplayString,
		infoControllerModelNumber DisplayString,
		infoControllerSerialNumber DisplayString,
		infoControllerFirmwareVersion DisplayString,
		infoControllerBiosVersion DisplayString,
		infoControllerDriverVersion DisplayString,
		infoControllerRowStatus RowStatus
		}

infoControllerIndex OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The index for the infoControllerTable table."
	::= { infoControllerEntry 1 }


infoControllerName OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The RAID controller name."
	::= { infoControllerEntry 2 }


infoControllerModelNumber OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The RAID controller model number."
	::= { infoControllerEntry 3 }


infoControllerSerialNumber OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The RAID controller serial number."
	::= { infoControllerEntry 4 }


infoControllerFirmwareVersion OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The RAID controller firmware version."
	::= { infoControllerEntry 5 }


infoControllerBiosVersion OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The RAID controller BIOS version."
	::= { infoControllerEntry 6 }


infoControllerDriverVersion OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The RAID controller driver version."
	::= { infoControllerEntry 7 }


infoControllerRowStatus OBJECT-TYPE
	SYNTAX RowStatus
	ACCESS read-only
	STATUS obsolete
	DESCRIPTION "The table row status. Obsolete in SAN/iQ 8.5."
	::= { infoControllerEntry 99 }


infoCacheCount OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The number of RAID controller caches."
	::= { lhnNsmInfo 90 }


infoCacheTable OBJECT-TYPE
	SYNTAX SEQUENCE OF InfoCacheEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A table of RAID controller caches in the system. The number of entries
is given by infoCacheCount."
	::= { lhnNsmInfo 91 }


infoCacheEntry OBJECT-TYPE
	SYNTAX InfoCacheEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A row of RAID controller cache information."
	INDEX { infoCacheIndex  }

	::= { infoCacheTable 1 }

infoCacheEntry ::=
	SEQUENCE {
		infoCacheIndex Unsigned32,
		infoCacheName DisplayString,
		infoCacheModel DisplayString,
		infoCacheSize Integer32,
		infoCacheSerialNumber DisplayString,
		infoCacheHardwareVersion DisplayString,
		infoCacheFirmwareVersion DisplayString,
		infoCacheDriverVersion DisplayString,
		infoCacheBpsVoltage DisplayString,
		infoCacheBpsTestOverdue TruthValue,
		infoCacheBpsState DisplayString,
		infoCacheBpsStatus INTEGER,
		infoCacheEnabled TruthValue,
		infoCacheMode DisplayString,
		infoCacheState DisplayString,
		infoCacheStatus INTEGER,
		infoCacheRowStatus RowStatus
		}

infoCacheIndex OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Index for the infoCacheTable table."
	::= { infoCacheEntry 1 }


infoCacheName OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The RAID controller cach name."
	::= { infoCacheEntry 2 }


infoCacheModel OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The RAID controller cache model."
	::= { infoCacheEntry 3 }


infoCacheSize OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The RAID controller cache size."
	::= { infoCacheEntry 4 }


infoCacheSerialNumber OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The RAID controller cache serial number."
	::= { infoCacheEntry 5 }


infoCacheHardwareVersion OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The RAID controller hardware version."
	::= { infoCacheEntry 6 }


infoCacheFirmwareVersion OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The RAID controller firmware version."
	::= { infoCacheEntry 7 }


infoCacheDriverVersion OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The RAID controller driver version."
	::= { infoCacheEntry 8 }


infoCacheBpsVoltage OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The RAID controller BPS (Backup Power Source) voltage."
	::= { infoCacheEntry 20 }


infoCacheBpsTestOverdue OBJECT-TYPE
	SYNTAX TruthValue
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The BPS (Backup Power Source) test due state."
	::= { infoCacheEntry 21 }


infoCacheBpsState OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The BPS (Backup Power Source) state."
	::= { infoCacheEntry 22 }


infoCacheBpsStatus OBJECT-TYPE
	SYNTAX INTEGER {
	pass(1),
	fail(2)
	}
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The BPS (Backup Power Source) status."
	::= { infoCacheEntry 23 }


infoCacheEnabled OBJECT-TYPE
	SYNTAX TruthValue
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The BPS (Backup Power Source) write cache enabled state."
	::= { infoCacheEntry 50 }


infoCacheMode OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The BPS (Backup Power Source) cache mode."
	::= { infoCacheEntry 51 }


infoCacheState OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The RAID controller cache state."
	::= { infoCacheEntry 90 }


infoCacheStatus OBJECT-TYPE
	SYNTAX INTEGER {
	pass(1),
	fail(2)
	}
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The RAID controller cache status."
	::= { infoCacheEntry 91 }


infoCacheRowStatus OBJECT-TYPE
	SYNTAX RowStatus
	ACCESS read-only
	STATUS obsolete
	DESCRIPTION "The table row status. Obsolete in SAN/iQ 8.5."
	::= { infoCacheEntry 99 }


infoBackplaneCount OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The number of chassis backplanes."
	::= { lhnNsmInfo 100 }


infoBackplaneTable OBJECT-TYPE
	SYNTAX SEQUENCE OF InfoBackplaneEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A table of backplanes in the system. The number of entries
is given by infoBackplaneCount."
	::= { lhnNsmInfo 101 }


infoBackplaneEntry OBJECT-TYPE
	SYNTAX InfoBackplaneEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A row of backplane information."
	INDEX { infoBackplaneIndex  }

	::= { infoBackplaneTable 1 }

infoBackplaneEntry ::=
	SEQUENCE {
		infoBackplaneIndex Unsigned32,
		infoBackplaneName DisplayString,
		infoBackplaneSerialNumber DisplayString,
		infoBackplaneFirmwareVersion DisplayString,
		infoBackplaneIDLed DisplayString,
		infoBackplaneRowStatus RowStatus
		}

infoBackplaneIndex OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The index for the infoBackplaneTable table."
	::= { infoBackplaneEntry 1 }


infoBackplaneName OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The backplane name."
	::= { infoBackplaneEntry 2 }


infoBackplaneSerialNumber OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The backplane serial number."
	::= { infoBackplaneEntry 3 }


infoBackplaneFirmwareVersion OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The backplane firmware version."
	::= { infoBackplaneEntry 4 }


infoBackplaneIDLed OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The backplane LED state."
	::= { infoBackplaneEntry 5 }


infoBackplaneRowStatus OBJECT-TYPE
	SYNTAX RowStatus
	ACCESS read-only
	STATUS obsolete
	DESCRIPTION "The table row status. Obsolete in SAN/iQ 8.5."
	::= { infoBackplaneEntry 99 }


infoFanCount OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The number of fans."
	::= { lhnNsmInfo 110 }


infoFanTable OBJECT-TYPE
	SYNTAX SEQUENCE OF InfoFanEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A table of fans in the system. The number of entries
is given by infoFanCount."
	::= { lhnNsmInfo 111 }


infoFanEntry OBJECT-TYPE
	SYNTAX InfoFanEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A row of fan information."
	INDEX { infoFanIndex  }

	::= { infoFanTable 1 }

infoFanEntry ::=
	SEQUENCE {
		infoFanIndex Unsigned32,
		infoFanName DisplayString,
		infoFanSpeed Gauge32,
		infoFanMinSpeed Integer32,
		infoFanState DisplayString,
		infoFanStatus INTEGER,
		infoFanRowStatus RowStatus
		}

infoFanIndex OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The index for the infoFanTable table."
	::= { infoFanEntry 1 }


infoFanName OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The fan name."
	::= { infoFanEntry 2 }


infoFanSpeed OBJECT-TYPE
	SYNTAX Gauge
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The current fan speed."
	::= { infoFanEntry 3 }


infoFanMinSpeed OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The minimum fan speed of a functional fan."
	::= { infoFanEntry 4 }


infoFanState OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The fan state."
	::= { infoFanEntry 90 }


infoFanStatus OBJECT-TYPE
	SYNTAX INTEGER {
	pass(1),
	fail(2)
	}
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The fan status."
	::= { infoFanEntry 91 }


infoFanRowStatus OBJECT-TYPE
	SYNTAX RowStatus
	ACCESS read-only
	STATUS obsolete
	DESCRIPTION "The table row status. Obsolete in SAN/iQ 8.5."
	::= { infoFanEntry 99 }


infoTemperatureSensorCount OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The number of temperature sensors."
	::= { lhnNsmInfo 120 }


infoTemperatureSensorTable OBJECT-TYPE
	SYNTAX SEQUENCE OF InfoTemperatureSensorEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A table of temperature sensors in the system. The number of entries
is given by infoTemperatureSensorCount."
	::= { lhnNsmInfo 121 }


infoTemperatureSensorEntry OBJECT-TYPE
	SYNTAX InfoTemperatureSensorEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A row of temperature sensor information."
	INDEX { infoTemperatureSensorIndex  }

	::= { infoTemperatureSensorTable 1 }

infoTemperatureSensorEntry ::=
	SEQUENCE {
		infoTemperatureSensorIndex Unsigned32,
		infoTemperatureSensorName DisplayString,
		infoTemperatureSensorValue Gauge32,
		infoTemperatureSensorCritical Integer32,
		infoTemperatureSensorLimit Integer32,
		infoTemperatureSensorState DisplayString,
		infoTemperatureSensorStatus INTEGER,
		infoTemperatureSensorRowStatus RowStatus
		}

infoTemperatureSensorIndex OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The index for the infoTemperatureSensorTable table."
	::= { infoTemperatureSensorEntry 1 }


infoTemperatureSensorName OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The temperature sensor name."
	::= { infoTemperatureSensorEntry 2 }


infoTemperatureSensorValue OBJECT-TYPE
	SYNTAX Gauge
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The temperature sensor value."
	::= { infoTemperatureSensorEntry 3 }


infoTemperatureSensorCritical OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The value where the temperature becomes critical."
	::= { infoTemperatureSensorEntry 4 }


infoTemperatureSensorLimit OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The maximum temperature that can be tolerated."
	::= { infoTemperatureSensorEntry 5 }


infoTemperatureSensorState OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The temperature sensor state."
	::= { infoTemperatureSensorEntry 90 }


infoTemperatureSensorStatus OBJECT-TYPE
	SYNTAX INTEGER {
	pass(1),
	fail(2)
	}
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The temperature sensor status."
	::= { infoTemperatureSensorEntry 91 }


infoTemperatureSensorRowStatus OBJECT-TYPE
	SYNTAX RowStatus
	ACCESS read-only
	STATUS obsolete
	DESCRIPTION "The table row status. Obsolete in SAN/iQ 8.5."
	::= { infoTemperatureSensorEntry 99 }


infoPowerSupplyCount OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The number of power supplies."
	::= { lhnNsmInfo 130 }


infoPowerSupplyTable OBJECT-TYPE
	SYNTAX SEQUENCE OF InfoPowerSupplyEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A table of power supplies in the system. The number
of entries is given by infoPowerSupplyCount."
	::= { lhnNsmInfo 131 }


infoPowerSupplyEntry OBJECT-TYPE
	SYNTAX InfoPowerSupplyEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A row of power supply information."
	INDEX { infoPowerSupplyIndex  }

	::= { infoPowerSupplyTable 1 }

infoPowerSupplyEntry ::=
	SEQUENCE {
		infoPowerSupplyIndex Unsigned32,
		infoPowerSupplyName DisplayString,
		infoPowerSupplyState DisplayString,
		infoPowerSupplyStatus INTEGER,
		infoPowerSupplyRowStatus RowStatus
		}

infoPowerSupplyIndex OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The index for the infoPowerSupplyTable table."
	::= { infoPowerSupplyEntry 1 }


infoPowerSupplyName OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The power supply name."
	::= { infoPowerSupplyEntry 2 }


infoPowerSupplyState OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The power supply state."
	::= { infoPowerSupplyEntry 90 }


infoPowerSupplyStatus OBJECT-TYPE
	SYNTAX INTEGER {
	pass(1),
	fail(2)
	}
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The power supply status."
	::= { infoPowerSupplyEntry 91 }


infoPowerSupplyRowStatus OBJECT-TYPE
	SYNTAX RowStatus
	ACCESS read-only
	STATUS obsolete
	DESCRIPTION "The table row status. Obsolete in SAN/iQ 8.5."
	::= { infoPowerSupplyEntry 99 }


infoPowerSupplyMode OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The power supply mode."
	::= { lhnNsmInfo 132 }


infoVoltageSensorCount OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The number of voltage sensors."
	::= { lhnNsmInfo 140 }


infoVoltageSensorTable OBJECT-TYPE
	SYNTAX SEQUENCE OF InfoVoltageSensorEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A table of voltage sensors in the system. The number
of entries is given by infoVoltageSensorCount."
	::= { lhnNsmInfo 141 }


infoVoltageSensorEntry OBJECT-TYPE
	SYNTAX InfoVoltageSensorEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A row of power supply information."
	INDEX { infoVoltageSensorIndex  }

	::= { infoVoltageSensorTable 1 }

infoVoltageSensorEntry ::=
	SEQUENCE {
		infoVoltageSensorIndex Unsigned32,
		infoVoltageSensorName DisplayString,
		infoVoltageSensorValue DisplayString,
		infoVoltageSensorLowLimit DisplayString,
		infoVoltageSensorHighLimit DisplayString,
		infoVoltageSensorState DisplayString,
		infoVoltageSensorStatus INTEGER,
		infoVoltageSensorRowStatus RowStatus
		}

infoVoltageSensorIndex OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The index for the voltageSensorTable table."
	::= { infoVoltageSensorEntry 1 }


infoVoltageSensorName OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The voltage sensor name."
	::= { infoVoltageSensorEntry 2 }


infoVoltageSensorValue OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The voltage sensor value."
	::= { infoVoltageSensorEntry 3 }


infoVoltageSensorLowLimit OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The lower limit for proper voltage."
	::= { infoVoltageSensorEntry 4 }


infoVoltageSensorHighLimit OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The upper limit for proper voltage."
	::= { infoVoltageSensorEntry 5 }


infoVoltageSensorState OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The voltage sensor state."
	::= { infoVoltageSensorEntry 90 }


infoVoltageSensorStatus OBJECT-TYPE
	SYNTAX INTEGER {
	pass(1),
	fail(2)
	}
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The voltage sensor status."
	::= { infoVoltageSensorEntry 91 }


infoVoltageSensorRowStatus OBJECT-TYPE
	SYNTAX RowStatus
	ACCESS read-only
	STATUS obsolete
	DESCRIPTION "The table row status. Obsolete in SAN/iQ 8.5."
	::= { infoVoltageSensorEntry 99 }


infoBootControllerName OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The boot controller name. Only available if storage
node has a dedicated boot controller."
	::= { lhnNsmInfo 150 }


infoBootControllerModelNumber OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The boot controller model number. Only available if
storage node has a dedicated boot controller."
	::= { lhnNsmInfo 151 }


infoBootControllerSerialNumber OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The boot controller serial number. Only available if
storage node has a dedicated boot controller.z"
	::= { lhnNsmInfo 152 }


infoBootControllerFirmwareVersion OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The boot controller firmware version. Only available
storage node has a dedicated boot controller."
	::= { lhnNsmInfo 153 }


infoBootControllerBiosVersion OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The boot controller BIOS version. Only available if
storage node has a dedicated boot controller."
	::= { lhnNsmInfo 154 }


infoBootControllerDriverVersion OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The boot controller driver version. Only available if
storage node has a dedicated boot controller."
	::= { lhnNsmInfo 155 }


infoWarrantyPartNumber OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The storage node warranty part number."
	::= { lhnNsmInfo 156 }


infoWarrantySerialNumber OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The storage node warranty serial number."
	::= { lhnNsmInfo 157 }


infoWarrantyLicenseNumber OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The storage node warranty license number."
	::= { lhnNsmInfo 158 }


END

