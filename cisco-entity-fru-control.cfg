#-MIBFILE: cisco-entity-fru-control.mib

CISCO-ENTITY-FRU-CONTROL-MIB DEFINITIONS ::= BEGIN


DisplayString ::=
	OCTET STRING (SIZE(0..255))

PhysAddress ::=
	OCTET STRING

MacAddress ::=
	OCTET STRING (SIZE(6))

TruthValue ::=
	INTEGER {
	true(1),
	false(2)
	}

TestAndIncr ::=
	INTEGER (0..2147483647)

AutonomousType ::=
	OBJECT IDENTIFIER

InstancePointer ::=
	OBJECT IDENTIFIER

VariablePointer ::=
	OBJECT IDENTIFIER

RowPointer ::=
	OBJECT IDENTIFIER

RowStatus ::=
	INTEGER {
	active(1),
	notInService(2),
	notReady(3),
	createAndGo(4),
	createAndWait(5),
	destroy(6)
	}

TimeStamp ::=
	TimeTicks

TimeInterval ::=
	INTEGER (0..2147483647)

DateAndTime ::=
	OCTET STRING (SIZE(8|11))

StorageType ::=
	INTEGER {
	other(1),
	volatile(2),
	nonVolatile(3),
	permanent(4),
	readOnly(5)
	}

TDomain ::=
	OBJECT IDENTIFIER

TAddress ::=
	OCTET STRING (SIZE(1..255))

PhysicalIndex ::=
	INTEGER (1..2147483647)

PhysicalIndexOrZero ::=
	INTEGER (0..2147483647)

PhysicalClass ::=
	INTEGER {
	other(1),
	unknown(2),
	chassis(3),
	backplane(4),
	container(5),
	powerSupply(6),
	fan(7),
	sensor(8),
	module(9),
	port(10),
	stack(11),
	cpu(12)
	}

SnmpEngineIdOrNone ::=
	OCTET STRING (SIZE(0..32))

mib-2 OBJECT IDENTIFIER ::= { mgmt 1 }
entityMIB OBJECT IDENTIFIER ::= { mib-2 47 }
entityMIBObjects OBJECT IDENTIFIER ::= { entityMIB 1 }
entityPhysical OBJECT IDENTIFIER ::= { entityMIBObjects 1 }
entPhysicalTable OBJECT IDENTIFIER ::= { entityPhysical 1 }
entPhysicalEntry OBJECT IDENTIFIER ::= { entPhysicalTable 1 }
entPhysicalIndex OBJECT IDENTIFIER ::= { entPhysicalEntry 1 }
entityMIB OBJECT IDENTIFIER ::= { mib-2 47 }
entPhysicalContainedIn OBJECT IDENTIFIER ::= { entPhysicalEntry 4 }
entPhysicalModelName OBJECT IDENTIFIER ::= { entPhysicalEntry 13 }
entPhysicalClass OBJECT IDENTIFIER ::= { entPhysicalEntry 5 }
entPhysicalVendorType OBJECT IDENTIFIER ::= { entPhysicalEntry 3 }
entPhysicalName OBJECT IDENTIFIER ::= { entPhysicalEntry 7 }
cisco OBJECT IDENTIFIER ::= { enterprises 9 }
ciscoMgmt OBJECT IDENTIFIER ::= { cisco 9 }
InetAddressType ::=
	INTEGER {
	unknown(0),
	ipv4(1),
	ipv6(2),
	ipv4z(3),
	ipv6z(4),
	dns(16)
	}

InetAddress ::=
	OCTET STRING (SIZE(0..255))

InetAddressIPv4 ::=
	OCTET STRING (SIZE(4))

InetAddressIPv6 ::=
	OCTET STRING (SIZE(16))

InetAddressIPv4z ::=
	OCTET STRING (SIZE(8))

InetAddressIPv6z ::=
	OCTET STRING (SIZE(20))

InetAddressDNS ::=
	OCTET STRING (SIZE(1..255))

InetAddressPrefixLength ::=
	OCTET STRING

InetPortNumber ::=
	OCTET STRING

InetAutonomousSystemNumber ::=
	OCTET STRING

InetScopeType ::=
	INTEGER {
	interfaceLocal(1),
	linkLocal(2),
	subnetLocal(3),
	adminLocal(4),
	siteLocal(5),
	organizationLocal(8),
	global(14)
	}

InetZoneIndex ::=
	OCTET STRING

InetVersion ::=
	INTEGER {
	unknown(0),
	ipv4(1),
	ipv6(2)
	}

PowerRedundancyType ::=
	INTEGER {
	notsupported(1),
	redundant(2),
	combined(3)
	}

PowerAdminType ::=
	INTEGER {
	on(1),
	off(2),
	inlineAuto(3),
	inlineOn(4),
	powerCycle(5)
	}

PowerOperType ::=
	INTEGER {
	offEnvOther(1),
	on(2),
	offAdmin(3),
	offDenied(4),
	offEnvPower(5),
	offEnvTemp(6),
	offEnvFan(7),
	failed(8),
	onButFanFail(9),
	offCooling(10),
	offConnectorRating(11)
	}

FRUCurrentType ::=
	INTEGER (-1000000000..1000000000)

ModuleAdminType ::=
	INTEGER {
	enabled(1),
	disabled(2),
	reset(3),
	outOfServiceAdmin(4)
	}

ModuleOperType ::=
	INTEGER {
	unknown(1),
	ok(2),
	disabled(3),
	okButDiagFailed(4),
	boot(5),
	selfTest(6),
	failed(7),
	missing(8),
	mismatchWithParent(9),
	mismatchConfig(10),
	diagFailed(11),
	dormant(12),
	outOfServiceAdmin(13),
	outOfServiceEnvTemp(14),
	poweredDown(15),
	poweredUp(16),
	powerDenied(17),
	powerCycled(18),
	okButPowerOverWarning(19),
	okButPowerOverCritical(20),
	syncInProgress(21)
	}

ModuleResetReasonType ::=
	INTEGER {
	unknown(1),
	powerUp(2),
	parityError(3),
	clearConfigReset(4),
	manualReset(5),
	watchDogTimeoutReset(6),
	resourceOverflowReset(7),
	missingTaskReset(8),
	lowVoltageReset(9),
	controllerReset(10),
	systemReset(11),
	switchoverReset(12),
	upgradeReset(13),
	downgradeReset(14),
	cacheErrorReset(15),
	deviceDriverReset(16),
	softwareExceptionReset(17),
	restoreConfigReset(18),
	abortRevReset(19),
	burnBootReset(20),
	standbyCdHealthierReset(21),
	nonNativeConfigClearReset(22),
	memoryProtectionErrorReset(23)
	}

FRUTimeSeconds ::=
	OCTET STRING

ciscoEntityFRUControlMIB OBJECT IDENTIFIER ::= { ciscoMgmt 117 }

cefcMIBObjects OBJECT IDENTIFIER ::= { ciscoEntityFRUControlMIB 1 }

cefcFRUMIBNotificationPrefix OBJECT IDENTIFIER ::= { ciscoEntityFRUControlMIB 2 }

cefcMIBConformance OBJECT IDENTIFIER ::= { ciscoEntityFRUControlMIB 3 }

cefcFRUPower OBJECT IDENTIFIER ::= { cefcMIBObjects 1 }

cefcModule OBJECT IDENTIFIER ::= { cefcMIBObjects 2 }

cefcMIBNotificationEnables OBJECT IDENTIFIER ::= { cefcMIBObjects 3 }

cefcFRUFan OBJECT IDENTIFIER ::= { cefcMIBObjects 4 }

cefcPhysical OBJECT IDENTIFIER ::= { cefcMIBObjects 5 }

cefcPowerCapacity OBJECT IDENTIFIER ::= { cefcMIBObjects 6 }

cefcCooling OBJECT IDENTIFIER ::= { cefcMIBObjects 7 }

cefcConnector OBJECT IDENTIFIER ::= { cefcMIBObjects 8 }

cefcFRUPowerSupplyGroupTable OBJECT-TYPE
	SYNTAX SEQUENCE OF CefcFRUPowerSupplyGroupEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "This table lists the redundancy mode and the 
operational status of the power supply groups
in the system."
	::= { cefcFRUPower 1 }


cefcFRUPowerSupplyGroupEntry OBJECT-TYPE
	SYNTAX CefcFRUPowerSupplyGroupEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "An cefcFRUPowerSupplyGroupTable entry lists the desired 
redundancy mode, the units of the power outputs and the 
available and drawn current for the power supply group.

Entries are created by the agent when a power supply group
is added to the entPhysicalTable. Entries are deleted by 
the agent at power supply group removal.
"
	INDEX { entPhysicalIndex  }

	::= { cefcFRUPowerSupplyGroupTable 1 }

cefcFRUPowerSupplyGroupEntry ::=
	SEQUENCE {
		cefcPowerRedundancyMode PowerRedundancyType,
		cefcPowerUnits DisplayString,
		cefcTotalAvailableCurrent FRUCurrentType,
		cefcTotalDrawnCurrent FRUCurrentType,
		cefcPowerRedundancyOperMode PowerRedundancyType
		}

cefcPowerRedundancyMode OBJECT-TYPE
	SYNTAX INTEGER {
	notsupported(1),
	redundant(2),
	combined(3)
	}
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The administratively desired power supply redundancy 
mode."
	::= { cefcFRUPowerSupplyGroupEntry 1 }


cefcPowerUnits OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The units of primary supply to interpret
cefcTotalAvailableCurrent and cefcTotalDrawnCurrent
as power.

For example, one 1000-watt power supply could 
deliver 100 amperes at 10 volts DC.  So the value
of cefcPowerUnits would be 'at 10 volts DC'.

cefcPowerUnits is for display purposes only.
"
	::= { cefcFRUPowerSupplyGroupEntry 2 }


cefcTotalAvailableCurrent OBJECT-TYPE
	SYNTAX INTEGER (-1000000000..1000000000)
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Total current available for FRU usage."
	::= { cefcFRUPowerSupplyGroupEntry 3 }


cefcTotalDrawnCurrent OBJECT-TYPE
	SYNTAX INTEGER (-1000000000..1000000000)
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Total current drawn by powered-on FRUs."
	::= { cefcFRUPowerSupplyGroupEntry 4 }


cefcPowerRedundancyOperMode OBJECT-TYPE
	SYNTAX INTEGER {
	notsupported(1),
	redundant(2),
	combined(3)
	}
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The power supply redundancy operational mode."
	::= { cefcFRUPowerSupplyGroupEntry 5 }


cefcFRUPowerStatusTable OBJECT-TYPE
	SYNTAX SEQUENCE OF CefcFRUPowerStatusEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "This table lists the power-related administrative status 
and operational status of the manageable components
in the system."
	::= { cefcFRUPower 2 }


cefcFRUPowerStatusEntry OBJECT-TYPE
	SYNTAX CefcFRUPowerStatusEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "An cefcFRUPowerStatusTable entry lists the desired 
administrative status, the operational status of the 
power manageable component, and the current required by 
the component for operation.

Entries are created by the agent at system power-up or 
the insertion of the component.  Entries are deleted by
the agent at the removal of the component.

Only components with power control are listed in the 
table."
	INDEX { entPhysicalIndex  }

	::= { cefcFRUPowerStatusTable 1 }

cefcFRUPowerStatusEntry ::=
	SEQUENCE {
		cefcFRUPowerAdminStatus PowerAdminType,
		cefcFRUPowerOperStatus PowerOperType,
		cefcFRUCurrent FRUCurrentType
		}

cefcFRUPowerAdminStatus OBJECT-TYPE
	SYNTAX INTEGER {
	on(1),
	off(2),
	inlineAuto(3),
	inlineOn(4),
	powerCycle(5)
	}
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Administratively desired FRU power state."
	::= { cefcFRUPowerStatusEntry 1 }


cefcFRUPowerOperStatus OBJECT-TYPE
	SYNTAX INTEGER {
	offEnvOther(1),
	on(2),
	offAdmin(3),
	offDenied(4),
	offEnvPower(5),
	offEnvTemp(6),
	offEnvFan(7),
	failed(8),
	onButFanFail(9),
	offCooling(10),
	offConnectorRating(11)
	}
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Operational FRU power state."
	::= { cefcFRUPowerStatusEntry 2 }


cefcFRUCurrent OBJECT-TYPE
	SYNTAX INTEGER (-1000000000..1000000000)
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Current supplied by the FRU (positive values)
or current required to operate the FRU (negative values)."
	::= { cefcFRUPowerStatusEntry 3 }


cefcMaxDefaultInLinePower OBJECT-TYPE
	SYNTAX INTEGER (0..12500)
	ACCESS read-only
	STATUS optional
	DESCRIPTION "The system will provide power to the device connecting
to the FRU if the device needs power, like an IP Phone.
We call the providing power inline power.

This MIB object controls the maximum default inline power
for the device connecting to the FRU in the system. If the
maximum default inline power of the device is greater than
the maximum value reportable by this object, then this
object should report its maximum reportable value (12500)
and cefcMaxDefaultHighInLinePower must be used to report
the actual maximum default inline power."
	::= { cefcFRUPower 3 }


cefcFRUPowerSupplyValueTable OBJECT-TYPE
	SYNTAX SEQUENCE OF CefcFRUPowerSupplyValueEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "This table lists the power capacity of a power FRU in the 
system if it provides variable power. Power supplies usually
provide either system or inline power. They cannot be 
controlled by software to dictate how they distribute power.
We can also have what are known as variable power supplies.
They can provide both system and inline power and can be 
varied within hardware defined ranges for system and inline
limited by a total maximum combined output. They could be
configured by the user via CLI or SNMP or be controlled by
software internally.
This table supplements the information in the
cefcFRUPowerStatusTable for power supply FRUs. The 
cefcFRUCurrent attribute in that table provides the overall
current the power supply FRU can provide while this table 
gives us the individual contribution towards system and 
inline power.
"
	::= { cefcFRUPower 4 }


cefcFRUPowerSupplyValueEntry OBJECT-TYPE
	SYNTAX CefcFRUPowerSupplyValueEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "An cefcFRUPowerSupplyValueTable entry lists the current 
provided by the FRU for operation.

Entries are created by the agent at system power-up or 
FRU insertion.  Entries are deleted by the agent at FRU
removal.

Only power supply FRUs are listed in the table.
"
	INDEX { entPhysicalIndex  }

	::= { cefcFRUPowerSupplyValueTable 1 }

cefcFRUPowerSupplyValueEntry ::=
	SEQUENCE {
		cefcFRUTotalSystemCurrent FRUCurrentType,
		cefcFRUDrawnSystemCurrent FRUCurrentType,
		cefcFRUTotalInlineCurrent FRUCurrentType,
		cefcFRUDrawnInlineCurrent FRUCurrentType
		}

cefcFRUTotalSystemCurrent OBJECT-TYPE
	SYNTAX INTEGER (-1000000000..1000000000)
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Total current that could be supplied by the FRU (positive
values) for system operations."
	::= { cefcFRUPowerSupplyValueEntry 1 }


cefcFRUDrawnSystemCurrent OBJECT-TYPE
	SYNTAX INTEGER (-1000000000..1000000000)
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Amount of current drawn by the FRU's in the system towards 
system operations from this FRU"
	::= { cefcFRUPowerSupplyValueEntry 2 }


cefcFRUTotalInlineCurrent OBJECT-TYPE
	SYNTAX INTEGER (-1000000000..1000000000)
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Total current supplied by the FRU (positive values) for
inline operations."
	::= { cefcFRUPowerSupplyValueEntry 3 }


cefcFRUDrawnInlineCurrent OBJECT-TYPE
	SYNTAX INTEGER (-1000000000..1000000000)
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Amount of current that is being drawn from this FRU for inline 
operation."
	::= { cefcFRUPowerSupplyValueEntry 4 }


cefcMaxDefaultHighInLinePower OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The system will provide power to the device connecting
to the FRU if the device needs power, like an IP Phone.
We call the providing power inline power.

This MIB object controls the maximum default inline power
for the device connecting to the FRU in the system."
	::= { cefcFRUPower 5 }


cefcModuleTable OBJECT-TYPE
	SYNTAX SEQUENCE OF CefcModuleEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A cefcModuleTable entry lists the operational and 
administrative status information for ENTITY-MIB
entPhysicalTable entries for manageable components
of type PhysicalClass module(9).
"
	::= { cefcModule 1 }


cefcModuleEntry OBJECT-TYPE
	SYNTAX CefcModuleEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A cefcModuleStatusTable entry lists the operational and 
administrative status information for ENTITY-MIB
entPhysicalTable entries for manageable components 
of type PhysicalClass module(9).

Entries are created by the agent at the system power-up or
module insertion.

Entries are deleted by the agent upon module removal.
"
	INDEX { entPhysicalIndex  }

	::= { cefcModuleTable 1 }

cefcModuleEntry ::=
	SEQUENCE {
		cefcModuleAdminStatus ModuleAdminType,
		cefcModuleOperStatus ModuleOperType,
		cefcModuleResetReason ModuleResetReasonType,
		cefcModuleStatusLastChangeTime TimeStamp,
		cefcModuleLastClearConfigTime TimeStamp,
		cefcModuleResetReasonDescription DisplayString,
		cefcModuleStateChangeReasonDescr DisplayString,
		cefcModuleUpTime FRUTimeSeconds
		}

cefcModuleAdminStatus OBJECT-TYPE
	SYNTAX INTEGER {
	enabled(1),
	disabled(2),
	reset(3),
	outOfServiceAdmin(4)
	}
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "This object provides administrative control of the 
module. 
"
	::= { cefcModuleEntry 1 }


cefcModuleOperStatus OBJECT-TYPE
	SYNTAX INTEGER {
	unknown(1),
	ok(2),
	disabled(3),
	okButDiagFailed(4),
	boot(5),
	selfTest(6),
	failed(7),
	missing(8),
	mismatchWithParent(9),
	mismatchConfig(10),
	diagFailed(11),
	dormant(12),
	outOfServiceAdmin(13),
	outOfServiceEnvTemp(14),
	poweredDown(15),
	poweredUp(16),
	powerDenied(17),
	powerCycled(18),
	okButPowerOverWarning(19),
	okButPowerOverCritical(20),
	syncInProgress(21)
	}
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "This object shows the module's operational state."
	::= { cefcModuleEntry 2 }


cefcModuleResetReason OBJECT-TYPE
	SYNTAX INTEGER {
	unknown(1),
	powerUp(2),
	parityError(3),
	clearConfigReset(4),
	manualReset(5),
	watchDogTimeoutReset(6),
	resourceOverflowReset(7),
	missingTaskReset(8),
	lowVoltageReset(9),
	controllerReset(10),
	systemReset(11),
	switchoverReset(12),
	upgradeReset(13),
	downgradeReset(14),
	cacheErrorReset(15),
	deviceDriverReset(16),
	softwareExceptionReset(17),
	restoreConfigReset(18),
	abortRevReset(19),
	burnBootReset(20),
	standbyCdHealthierReset(21),
	nonNativeConfigClearReset(22),
	memoryProtectionErrorReset(23)
	}
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "This object identifies the reason for the last reset performed
on the module.
"
	::= { cefcModuleEntry 3 }


cefcModuleStatusLastChangeTime OBJECT-TYPE
	SYNTAX TimeStamp
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The value of sysUpTime at the time the cefcModuleOperStatus
is changed.
"
	::= { cefcModuleEntry 4 }


cefcModuleLastClearConfigTime OBJECT-TYPE
	SYNTAX TimeStamp
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The value of sysUpTime when the 
configuration was most recently cleared.
"
	::= { cefcModuleEntry 5 }


cefcModuleResetReasonDescription OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A description qualifying the module reset reason 
specified in cefcModuleResetReason. 

Examples:
command xyz              
missing task
switch over
watchdog timeout    
etc.

cefcModuleResetReasonDescription is for display purposes only.
NMS applications must not parse.
"
	::= { cefcModuleEntry 6 }


cefcModuleStateChangeReasonDescr OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "This object displays human-readable textual string which
describes the cause of the last state change of the
module. This object contains zero length string
if no meaningful reason could be provided.

Examples:
'Invalid software version'
'Software download failed'
'Software version mismatch'
'Module is in standby state'
etc.

This object is for display purposes only.
NMS applications must not parse this object
and take any decision based on its value."
	::= { cefcModuleEntry 7 }


cefcModuleUpTime OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "This object provides the up time for the module
since it was last re-initialized.

This object is not persistent; if a module reset,
restart, power off, the up time starts from zero."
	::= { cefcModuleEntry 8 }


cefcIntelliModuleTable OBJECT-TYPE
	SYNTAX SEQUENCE OF CefcIntelliModuleEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "This table sparsely augments the
cefcModuleTable (i.e., every row in
this table corresponds to a row in
the cefcModuleTable but not necessarily
vice-versa).

A cefcIntelliModuleTable entry lists the
information specific to intelligent
modules which cannot be provided by the
cefcModuleTable."
	::= { cefcModule 2 }


cefcIntelliModuleEntry OBJECT-TYPE
	SYNTAX CefcIntelliModuleEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A cefcIntelliModuleTable entry lists the
information specific to an intelligent
module which cannot be provided by
this module's corresponding instance in
the cefcModuleTable. Only an intelligent
module with Internet address configured has
its entry here.

An entry of this table is created if an 
intelligent module is detected by the 
managed system and its management Internet
address is configured on the intelligent 
module.

An entry of this table is deleted if the 
removal of Internet address configuration of 
this module or the module itself."
	INDEX { entPhysicalIndex  }

	::= { cefcIntelliModuleTable 1 }

cefcIntelliModuleEntry ::=
	SEQUENCE {
		cefcIntelliModuleIPAddrType InetAddressType,
		cefcIntelliModuleIPAddr InetAddress
		}

cefcIntelliModuleIPAddrType OBJECT-TYPE
	SYNTAX InetAddressType
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The type of Internet address by which the
intelligent module is reachable."
	::= { cefcIntelliModuleEntry 1 }


cefcIntelliModuleIPAddr OBJECT-TYPE
	SYNTAX InetAddress
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The Internet address configured 
for the intelligent module.
The type of this address is 
determined by the value of the object 
cefcIntelliModuleIPAddrType."
	::= { cefcIntelliModuleEntry 2 }


cefcFanTrayStatusTable OBJECT-TYPE
	SYNTAX SEQUENCE OF CefcFanTrayStatusEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "This table contains the operational status information 
for all ENTITY-MIB entPhysicalTable entries which have 
an entPhysicalClass of 'fan'; specifically, all  
entPhysicalTable entries which represent either: one 
physical fan, or a single physical 'fan tray' which is a
manufactured (inseparable in the field) combination of 
multiple fans."
	::= { cefcFRUFan 1 }


cefcFanTrayStatusEntry OBJECT-TYPE
	SYNTAX CefcFanTrayStatusEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "An cefcFanTrayStatusTable entry lists the operational 
status information for the ENTITY-MIB entPhysicalTable 
entry which is identified by the value of entPhysicalIndex.
The value of entPhysicalClass for the identified entry will
be 'fan', and the represented physical entity will be 
either: one physical fan, or a single physical 'fan tray' 
which is a manufactured (inseparable in the field) 
combination of multiple fans.

Entries are created by the agent at system power-up or 
fan or fan tray insertion.  Entries are deleted 
by the agent at the fan or fan tray removal. "
	INDEX { entPhysicalIndex  }

	::= { cefcFanTrayStatusTable 1 }

cefcFanTrayStatusEntry ::=
	SEQUENCE {
		cefcFanTrayOperStatus INTEGER
		}

cefcFanTrayOperStatus OBJECT-TYPE
	SYNTAX INTEGER {
	unknown(1),
	up(2),
	down(3),
	warning(4)
	}
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The operational state of the fan or fan tray.
unknown(1) - unknown.
up(2) - powered on.
down(3) - powered down.
warning(4) - partial failure, needs replacement 
as soon as possible."
	::= { cefcFanTrayStatusEntry 1 }


cefcPhysicalTable OBJECT-TYPE
	SYNTAX SEQUENCE OF CefcPhysicalEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "This table contains one row per physical entity. "
	::= { cefcPhysical 1 }


cefcPhysicalEntry OBJECT-TYPE
	SYNTAX CefcPhysicalEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Information about a particular physical entity. "
	INDEX { entPhysicalIndex  }

	::= { cefcPhysicalTable 1 }

cefcPhysicalEntry ::=
	SEQUENCE {
		cefcPhysicalStatus INTEGER
		}

cefcPhysicalStatus OBJECT-TYPE
	SYNTAX INTEGER {
	other(1),
	supported(2),
	unsupported(3),
	incompatible(4)
	}
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The status of this physical entity.
other(1) - the status is not any of the listed below.
supported(2) - this entity is supported.
unsupported(3) - this entity is unsupported.
incompatible(4) - this entity is incompatible.
It would be unsupported(3), if the ID read from Serial
EPROM is not supported. It would be incompatible(4), if
in the present configuration this FRU is not supported.
"
	::= { cefcPhysicalEntry 1 }


cefcPowerSupplyInputTable OBJECT-TYPE
	SYNTAX SEQUENCE OF CefcPowerSupplyInputEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "This table contains the power input information 
for all the power supplies that have entPhysicalTable
entries with 'powerSupply' in the entPhysicalClass. 

The entries are created by the agent at the system
power-up or power supply insertion.

Entries are deleted by the agent upon power supply
removal.

The number of entries is determined by the number of
power supplies and number of power inputs on the power 
supply."
	::= { cefcPowerCapacity 1 }


cefcPowerSupplyInputEntry OBJECT-TYPE
	SYNTAX CefcPowerSupplyInputEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "An entry containing power input management information 
applicable to a particular power supply and input."
	INDEX { entPhysicalIndex , cefcPowerSupplyInputIndex }

	::= { cefcPowerSupplyInputTable 1 }

cefcPowerSupplyInputEntry ::=
	SEQUENCE {
		cefcPowerSupplyInputIndex Unsigned32,
		cefcPowerSupplyInputType INTEGER
		}

cefcPowerSupplyInputIndex OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A unique value, greater than zero, for each input on
a power supply."
	::= { cefcPowerSupplyInputEntry 1 }


cefcPowerSupplyInputType OBJECT-TYPE
	SYNTAX INTEGER {
	unknown(1),
	acLow(2),
	acHigh(3),
	dcLow(4),
	dcHigh(5)
	}
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The type of an input power detected on the power
supply.

unknown(1): No input power is detected.

acLow(2): Lower rating AC input power is detected.

acHigh(3): Higher rating AC input power is detected.

dcLow(4): Lower rating DC input power is detected.

dcHigh(5): Higher rating DC input power is detected."
	::= { cefcPowerSupplyInputEntry 2 }


cefcPowerSupplyOutputTable OBJECT-TYPE
	SYNTAX SEQUENCE OF CefcPowerSupplyOutputEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "This table contains a list of possible output
mode for the power supplies, whose ENTITY-MIB
entPhysicalTable entries have an entPhysicalClass
of 'powerSupply'. It also indicate which mode
is the operational mode within the system."
	::= { cefcPowerCapacity 2 }


cefcPowerSupplyOutputEntry OBJECT-TYPE
	SYNTAX CefcPowerSupplyOutputEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A cefcPowerSupplyOutputTable entry lists the
power output capacity and its operational status
for manageable components of type PhysicalClass
'powerSupply'.

Entries are created by the agent at the system
power-up or power supply insertion.

Entries are deleted by the agent upon power supply
removal.

The number of entries of a power supply is determined
by the power supply."
	INDEX { entPhysicalIndex , cefcPSOutputModeIndex }

	::= { cefcPowerSupplyOutputTable 1 }

cefcPowerSupplyOutputEntry ::=
	SEQUENCE {
		cefcPSOutputModeIndex Unsigned32,
		cefcPSOutputModeCurrent FRUCurrentType,
		cefcPSOutputModeInOperation TruthValue
		}

cefcPSOutputModeIndex OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A unique value, greater than zero, for each 
possible output mode on a power supply."
	::= { cefcPowerSupplyOutputEntry 1 }


cefcPSOutputModeCurrent OBJECT-TYPE
	SYNTAX INTEGER (-1000000000..1000000000)
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The output capacity of the power supply."
	::= { cefcPowerSupplyOutputEntry 2 }


cefcPSOutputModeInOperation OBJECT-TYPE
	SYNTAX TruthValue
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A value of 'true' indicates that this mode is the
operational mode of the power supply output
capacity.

A value of 'false' indicates that this mode is not
the operational mode of the power supply output
capacity.

For a given power supply's entPhysicalIndex, 
at most one instance of this object can have the
value of true(1)."
	::= { cefcPowerSupplyOutputEntry 3 }


cefcChassisCoolingTable OBJECT-TYPE
	SYNTAX SEQUENCE OF CefcChassisCoolingEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "This table contains the cooling capacity
information of the chassis whose ENTITY-MIB
entPhysicalTable entries have an
entPhysicalClass of 'chassis'."
	::= { cefcCooling 1 }


cefcChassisCoolingEntry OBJECT-TYPE
	SYNTAX CefcChassisCoolingEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A cefcChassisCoolingEntry lists the maximum 
cooling capacity that could be provided 
for one slot on the manageable components of type
PhysicalClass 'chassis'.

Entries are created by the agent if the corresponding
entry is created in ENTITY-MIB entPhysicalTable.

Entries are deleted by the agent if the corresponding
entry is deleted in ENTITY-MIB entPhysicalTable."
	INDEX { entPhysicalIndex  }

	::= { cefcChassisCoolingTable 1 }

cefcChassisCoolingEntry ::=
	SEQUENCE {
		cefcChassisPerSlotCoolingCap Unsigned32
		}

cefcChassisPerSlotCoolingCap OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The maximum cooling capacity in the unit of CFM
that could be provided for any slot in this 
chassis."
	::= { cefcChassisCoolingEntry 1 }


cefcFanCoolingTable OBJECT-TYPE
	SYNTAX SEQUENCE OF CefcFanCoolingEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "This table contains the cooling capacity
information of the fans whose ENTITY-MIB
entPhysicalTable entries have an
entPhysicalClass of 'fan'."
	::= { cefcCooling 2 }


cefcFanCoolingEntry OBJECT-TYPE
	SYNTAX CefcFanCoolingEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A cefcFanCoolingEntry lists the cooling 
capacity that could be provided by the 
manageable components of type PhysicalClass 
'fan'.

Entries are created by the agent if the corresponding
entry is created in ENTITY-MIB entPhysicalTable.

Entries are deleted by the agent if the corresponding
entry is deleted in ENTITY-MIB entPhysicalTable."
	INDEX { entPhysicalIndex  }

	::= { cefcFanCoolingTable 1 }

cefcFanCoolingEntry ::=
	SEQUENCE {
		cefcFanCoolingCapacity Unsigned32
		}

cefcFanCoolingCapacity OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The cooling capacity in the unit of CFM
that could be provided by this fan."
	::= { cefcFanCoolingEntry 1 }


cefcModuleCoolingTable OBJECT-TYPE
	SYNTAX SEQUENCE OF CefcModuleCoolingEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "This table contains the cooling requirement for
all the manageable components of type entPhysicalClass
'module'."
	::= { cefcCooling 3 }


cefcModuleCoolingEntry OBJECT-TYPE
	SYNTAX CefcModuleCoolingEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A cefcModuleCoolingEntry lists the cooling
requirement for a manageable components of type
entPhysicalClass 'module'.

Entries are created by the agent at the system
power-up or module insertion.

Entries are deleted by the agent upon module
removal."
	INDEX { entPhysicalIndex  }

	::= { cefcModuleCoolingTable 1 }

cefcModuleCoolingEntry ::=
	SEQUENCE {
		cefcModuleCooling Unsigned32
		}

cefcModuleCooling OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The cooling requirement in the unit of CFM 
of the module and its daughter cards."
	::= { cefcModuleCoolingEntry 1 }


cefcConnectorRatingTable OBJECT-TYPE
	SYNTAX SEQUENCE OF CefcConnectorRatingEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "This table contains the connector power 
ratings of FRUs. 

Only components with power connector rating 
management are listed in this table."
	::= { cefcConnector 1 }


cefcConnectorRatingEntry OBJECT-TYPE
	SYNTAX CefcConnectorRatingEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A cefcConnectorRatingEntry lists the 
power connector rating information of a 
component in the system.

An entry or entries are created by the agent
when an physical entity with connector rating 
management is added to the ENTITY-MIB 
entPhysicalTable. An entry is deleted 
by the agent at the entity removal."
	INDEX { entPhysicalIndex  }

	::= { cefcConnectorRatingTable 1 }

cefcConnectorRatingEntry ::=
	SEQUENCE {
		cefcConnectorRating FRUCurrentType
		}

cefcConnectorRating OBJECT-TYPE
	SYNTAX INTEGER (-1000000000..1000000000)
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The maximum power that the component's
connector can withdraw."
	::= { cefcConnectorRatingEntry 1 }


cefcModulePowerConsumptionTable OBJECT-TYPE
	SYNTAX SEQUENCE OF CefcModulePowerConsumptionEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "This table contains the total power consumption
information for modules whose ENTITY-MIB 
entPhysicalTable entries have an entPhysicalClass 
of 'module'."
	::= { cefcConnector 2 }


cefcModulePowerConsumptionEntry OBJECT-TYPE
	SYNTAX CefcModulePowerConsumptionEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A cefcModulePowerConsumptionEntry lists the total
power consumption of a manageable components of type
entPhysicalClass 'module'.

Entries are created by the agent at the system
power-up or module insertion.

Entries are deleted by the agent upon module
removal."
	INDEX { entPhysicalIndex  }

	::= { cefcModulePowerConsumptionTable 1 }

cefcModulePowerConsumptionEntry ::=
	SEQUENCE {
		cefcModulePowerConsumption FRUCurrentType
		}

cefcModulePowerConsumption OBJECT-TYPE
	SYNTAX INTEGER (-1000000000..1000000000)
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The combined power consumption to operate the module 
and its submodule(s) and inline-power device(s)."
	::= { cefcModulePowerConsumptionEntry 1 }


cefcMIBEnableStatusNotification OBJECT-TYPE
	SYNTAX TruthValue
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "This variable indicates whether the system
produces the following notifications:
cefcModuleStatusChange, cefcPowerStatusChange, 
cefcFRUInserted, cefcFRURemoved, 
cefcUnrecognizedFRU and cefcFanTrayStatusChange.

A false value will prevent these notifications
from being generated."
	::= { cefcMIBNotificationEnables 1 }


cefcEnablePSOutputChangeNotif OBJECT-TYPE
	SYNTAX TruthValue
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "This variable indicates whether the system
produces the cefcPowerSupplyOutputChange 
notifications when the output capacity of 
a power supply has changed. A false value 
will prevent this notification to generated."
	::= { cefcMIBNotificationEnables 2 }


cefcMIBNotifications OBJECT IDENTIFIER ::= { cefcFRUMIBNotificationPrefix 0 }

cefcMIBCompliances OBJECT IDENTIFIER ::= { cefcMIBConformance 1 }

cefcMIBGroups OBJECT IDENTIFIER ::= { cefcMIBConformance 2 }

cefcMIBPowerModeGroup OBJECT IDENTIFIER ::= { cefcMIBGroups 1 }

cefcMIBPowerFRUControlGroup OBJECT IDENTIFIER ::= { cefcMIBGroups 2 }

cefcMIBModuleGroup OBJECT IDENTIFIER ::= { cefcMIBGroups 3 }

cefcMIBInLinePowerControlGroup OBJECT IDENTIFIER ::= { cefcMIBGroups 4 }

cefcMIBNotificationEnablesGroup OBJECT IDENTIFIER ::= { cefcMIBGroups 5 }

cefcMgmtNotificationsGroup OBJECT IDENTIFIER ::= { cefcMIBGroups 6 }

cefcModuleGroupRev1 OBJECT IDENTIFIER ::= { cefcMIBGroups 7 }

cefcMIBPowerFRUValueGroup OBJECT IDENTIFIER ::= { cefcMIBGroups 8 }

cefcMIBFanTrayStatusGroup OBJECT IDENTIFIER ::= { cefcMIBGroups 9 }

cefcMIBPhysicalGroup OBJECT IDENTIFIER ::= { cefcMIBGroups 10 }

cefcMgmtNotificationsGroup2 OBJECT IDENTIFIER ::= { cefcMIBGroups 11 }

cefcMIBPowerOperModeGroup OBJECT IDENTIFIER ::= { cefcMIBGroups 12 }

cefcMIBInLinePowerControlGroupRev1 OBJECT IDENTIFIER ::= { cefcMIBGroups 13 }

cefcModuleExtGroup OBJECT IDENTIFIER ::= { cefcMIBGroups 14 }

cefcIntelliModuleGroup OBJECT IDENTIFIER ::= { cefcMIBGroups 15 }

cefcPowerCapacityGroup OBJECT IDENTIFIER ::= { cefcMIBGroups 16 }

cefcCoolingGroup OBJECT IDENTIFIER ::= { cefcMIBGroups 17 }

cefcConnectorRatingGroup OBJECT IDENTIFIER ::= { cefcMIBGroups 18 }

cefcMIBNotificationEnablesGroup2 OBJECT IDENTIFIER ::= { cefcMIBGroups 19 }

cefcMgmtNotificationsGroup3 OBJECT IDENTIFIER ::= { cefcMIBGroups 20 }

cefcModuleStatusChange TRAP-TYPE
	ENTERPRISE cefcFRUMIBNotificationPrefix
	VARIABLES { cefcModuleOperStatus, cefcModuleStatusLastChangeTime }
DESCRIPTION "This notification is generated when the value of
cefcModuleOperStatus changes. It can be utilized by 
an NMS to update the status of the module it is
managing.
"
	::= 1


cefcPowerStatusChange TRAP-TYPE
	ENTERPRISE cefcFRUMIBNotificationPrefix
	VARIABLES { cefcFRUPowerOperStatus, cefcFRUPowerAdminStatus }
DESCRIPTION "The cefcFRUPowerStatusChange notification indicates that
the power status of a FRU has changed. The varbind for this
notification indicates the entPhysicalIndex of the FRU,
and the new operational-status of the FRU."
	::= 2


cefcFRUInserted TRAP-TYPE
	ENTERPRISE cefcFRUMIBNotificationPrefix
	VARIABLES { entPhysicalContainedIn }
DESCRIPTION "The cecfFRUInserted notification indicates that a FRU was
inserted. The varbind for this notification indicates the
entPhysicalIndex of the inserted FRU, and the entPhysicalIndex
of the FRU's container."
	::= 3


cefcFRURemoved TRAP-TYPE
	ENTERPRISE cefcFRUMIBNotificationPrefix
	VARIABLES { entPhysicalContainedIn }
DESCRIPTION "The cefcFRURemoved notification indicates that a FRU was
removed. The varbind for this notification indicates the
entPhysicalIndex of the removed FRU, and the entPhysicalIndex
of the FRU's container."
	::= 4


cefcUnrecognizedFRU TRAP-TYPE
	ENTERPRISE cefcFRUMIBNotificationPrefix
	VARIABLES { entPhysicalClass, entPhysicalVendorType, entPhysicalName, entPhysicalModelName, cefcPhysicalStatus }
DESCRIPTION "The cefcUnrecognizedFRU notification indicates that a FRU was
inserted whose product ID is not supported. The varbind for
this notification indicates the entPhysicalIndex of the 
inserted FRU, the entPhysicalClass this FRU belongs to, the
entPhysicalVendorType of this FRU, the entPhysicalName
of the FRU, the entPhysicalModelName of the inserted FRU, and
the cefcPhysicalStatus telling the reason code for sending this
notification. "
	::= 5


cefcFanTrayStatusChange TRAP-TYPE
	ENTERPRISE cefcFRUMIBNotificationPrefix
	VARIABLES { cefcFanTrayOperStatus }
DESCRIPTION "This notification is generated when the value of
cefcFanTrayOperStatus changes. "
	::= 6


cefcPowerSupplyOutputChange TRAP-TYPE
	ENTERPRISE cefcFRUMIBNotificationPrefix
	VARIABLES { entPhysicalName, entPhysicalModelName, cefcPSOutputModeCurrent }
DESCRIPTION "The notification indicates that the power 
supply's output capacity has changed.

This notification is triggered whenever one instance 
of the power supply's cefcPSOutputModeInOperation 
has transitioned from 'false' to 'true'."
	::= 7


END

