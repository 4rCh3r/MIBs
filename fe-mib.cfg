#-MIBFILE: fe-mib.mib

FIBRE-CHANNEL-FE-MIB DEFINITIONS ::= BEGIN


mib-2 OBJECT IDENTIFIER ::= { mgmt 1 }
DisplayString ::=
	OCTET STRING (SIZE(0..255))

PhysAddress ::=
	OCTET STRING

MacAddress ::=
	OCTET STRING (SIZE(6))

TruthValue ::=
	INTEGER {
	true(1),
	false(2)
	}

TestAndIncr ::=
	INTEGER (0..2147483647)

AutonomousType ::=
	OBJECT IDENTIFIER

InstancePointer ::=
	OBJECT IDENTIFIER

VariablePointer ::=
	OBJECT IDENTIFIER

RowPointer ::=
	OBJECT IDENTIFIER

RowStatus ::=
	INTEGER {
	active(1),
	notInService(2),
	notReady(3),
	createAndGo(4),
	createAndWait(5),
	destroy(6)
	}

TimeStamp ::=
	TimeTicks

TimeInterval ::=
	INTEGER (0..2147483647)

DateAndTime ::=
	OCTET STRING (SIZE(8|11))

StorageType ::=
	INTEGER {
	other(1),
	volatile(2),
	nonVolatile(3),
	permanent(4),
	readOnly(5)
	}

TDomain ::=
	OBJECT IDENTIFIER

TAddress ::=
	OCTET STRING (SIZE(1..255))

SnmpEngineID ::=
	OCTET STRING (SIZE(5..32))

SnmpSecurityModel ::=
	INTEGER (0..2147483647)

SnmpMessageProcessingModel ::=
	INTEGER (0..2147483647)

SnmpSecurityLevel ::=
	INTEGER {
	noAuthNoPriv(1),
	authNoPriv(2),
	authPriv(3)
	}

SnmpAdminString ::=
	OCTET STRING (SIZE(0..255))

MilliSeconds ::=
	OCTET STRING

MicroSeconds ::=
	OCTET STRING

FcNameId ::=
	OCTET STRING (SIZE(8))

FcAddressId ::=
	OCTET STRING (SIZE(3))

FcRxDataFieldSize ::=
	INTEGER (128..2112)

FcBbCredit ::=
	INTEGER (0..32767)

FcphVersion ::=
	INTEGER (0..255)

FcStackedConnMode ::=
	INTEGER {
	none(1),
	transparent(2),
	lockedDown(3)
	}

FcCosCap ::=
	OCTET STRING {
	classF(0),
	class1(1),
	class2(2),
	class3(3),
	class4(4),
	class5(5),
	class6(6)
	}

FcFeModuleCapacity ::=
	OCTET STRING

FcFeFxPortCapacity ::=
	OCTET STRING

FcFeModuleIndex ::=
	OCTET STRING

FcFeFxPortIndex ::=
	OCTET STRING

FcFeNxPortIndex ::=
	INTEGER (1..126)

FcBbCreditModel ::=
	INTEGER {
	regular(1),
	alternate(2)
	}

fcFeMIB OBJECT IDENTIFIER ::= { mib-2 75 }

fcFeMIBObjects OBJECT IDENTIFIER ::= { fcFeMIB 1 }

fcFeConfig OBJECT IDENTIFIER ::= { fcFeMIBObjects 1 }

fcFeStatus OBJECT IDENTIFIER ::= { fcFeMIBObjects 2 }

fcFeError OBJECT IDENTIFIER ::= { fcFeMIBObjects 3 }

fcFeAccounting OBJECT IDENTIFIER ::= { fcFeMIBObjects 4 }

fcFeCapabilities OBJECT IDENTIFIER ::= { fcFeMIBObjects 5 }

fcFeFabricName OBJECT-TYPE
	SYNTAX OCTET STRING (SIZE(8))
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The Name_Identifier of the Fabric to which this Fabric
Element belongs."
	::= { fcFeConfig 1 }


fcFeElementName OBJECT-TYPE
	SYNTAX OCTET STRING (SIZE(8))
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The Name_Identifier of the Fabric Element."
	::= { fcFeConfig 2 }


fcFeModuleCapacity OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The maximum number of modules in the Fabric Element,
regardless of their current state."
	::= { fcFeConfig 3 }


fcFeModuleTable OBJECT-TYPE
	SYNTAX SEQUENCE OF FcFeModuleEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A table that contains, one entry for each module in the
Fabric Element, information of the modules."
	::= { fcFeConfig 4 }


fcFeModuleEntry OBJECT-TYPE
	SYNTAX FcFeModuleEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "An entry containing the configuration parameters of a
module."
	INDEX { fcFeModuleIndex  }

	::= { fcFeModuleTable 1 }

fcFeModuleEntry ::=
	SEQUENCE {
		fcFeModuleIndex FcFeModuleIndex,
		fcFeModuleDescr SnmpAdminString,
		fcFeModuleObjectID OBJECT IDENTIFIER,
		fcFeModuleOperStatus INTEGER,
		fcFeModuleLastChange TimeStamp,
		fcFeModuleFxPortCapacity FcFeFxPortCapacity,
		fcFeModuleName FcNameId
		}

fcFeModuleIndex OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "This object identifies the module within the Fabric Element
for which this entry contains information. This value is
never greater than fcFeModuleCapacity."
	::= { fcFeModuleEntry 1 }


fcFeModuleDescr OBJECT-TYPE
	SYNTAX SnmpAdminString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A textual description of the module. This value should
include the full name and version identification of the
module."
	::= { fcFeModuleEntry 2 }


fcFeModuleObjectID OBJECT-TYPE
	SYNTAX OBJECT IDENTIFIER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The vendor's authoritative identification of the module.
This value may be allocated within the SMI enterprises
subtree (1.3.6.1.4.1) and provides a straight-forward and
unambiguous means for determining what kind of module is
being managed.

For example, this object could take the value
1.3.6.1.4.1.99649.3.9 if vendor 'Neufe Inc.' was assigned
the subtree 1.3.6.1.4.1.99649, and had assigned the
identifier 1.3.6.1.4.1.99649.3.9 to its 'FeFiFo-16
PlugInCard.'"
	::= { fcFeModuleEntry 3 }


fcFeModuleOperStatus OBJECT-TYPE
	SYNTAX INTEGER {
	online(1),
	offline(2),
	testing(3),
	faulty(4)
	}
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "This object indicates the operational status of the module:
online(1)   the module is functioning properly;
offline(2)  the module is not available;
testing(3)  the module is under testing; and
faulty(4)   the module is defective in some way."
	::= { fcFeModuleEntry 4 }


fcFeModuleLastChange OBJECT-TYPE
	SYNTAX TimeStamp
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "This object contains the value of sysUpTime when the module
entered its current operational status. A value of zero
indicates that the operational status of the module has not
changed since the agent last restarted."
	::= { fcFeModuleEntry 5 }


fcFeModuleFxPortCapacity OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The number of FxPort that can be contained within the
module. Within each module, the ports are uniquely numbered
in the range from 1 to fcFeModuleFxPortCapacity inclusive.
However, the numbers are not required to be contiguous."
	::= { fcFeModuleEntry 6 }


fcFeModuleName OBJECT-TYPE
	SYNTAX OCTET STRING (SIZE(8))
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The Name_Identifier of the module."
	::= { fcFeModuleEntry 7 }


fcFxPortTable OBJECT-TYPE
	SYNTAX SEQUENCE OF FcFxPortEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A table that contains, one entry for each FxPort in the
Fabric Element, configuration and service parameters of the
FxPorts."
	::= { fcFeConfig 5 }


fcFxPortEntry OBJECT-TYPE
	SYNTAX FcFxPortEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "An entry containing the configuration and service parameters
of a FxPort."
	INDEX { fcFeModuleIndex , fcFxPortIndex }

	::= { fcFxPortTable 1 }

fcFxPortEntry ::=
	SEQUENCE {
		fcFxPortIndex FcFeFxPortIndex,
		fcFxPortName FcNameId,
		fcFxPortFcphVersionHigh FcphVersion,
		fcFxPortFcphVersionLow FcphVersion,
		fcFxPortBbCredit FcBbCredit,
		fcFxPortRxBufSize FcRxDataFieldSize,
		fcFxPortRatov MilliSeconds,
		fcFxPortEdtov MilliSeconds,
		fcFxPortCosSupported FcCosCap,
		fcFxPortIntermixSupported TruthValue,
		fcFxPortStackedConnMode FcStackedConnMode,
		fcFxPortClass2SeqDeliv TruthValue,
		fcFxPortClass3SeqDeliv TruthValue,
		fcFxPortHoldTime MicroSeconds
		}

fcFxPortIndex OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "This object identifies the FxPort within the module.  This
number ranges from 1 to the value of fcFeModulePortCapacity
for the associated module. The value remains constant for
the identified FxPort until the module is re-initialized."
	::= { fcFxPortEntry 1 }


fcFxPortName OBJECT-TYPE
	SYNTAX OCTET STRING (SIZE(8))
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The World_wide Name of this FxPort.  Each FxPort has a
unique Port World_wide Name within the Fabric."
	::= { fcFxPortEntry 2 }


fcFxPortFcphVersionHigh OBJECT-TYPE
	SYNTAX INTEGER (0..255)
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The highest or most recent version of FC-PH that the FxPort
is configured to support."
	::= { fcFxPortEntry 3 }


fcFxPortFcphVersionLow OBJECT-TYPE
	SYNTAX INTEGER (0..255)
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The lowest or earliest version of FC-PH that the FxPort is
configured to support."
	::= { fcFxPortEntry 4 }


fcFxPortBbCredit OBJECT-TYPE
	SYNTAX INTEGER (0..32767)
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The total number of receive buffers available for holding
Class 1 connect-request, Class 2 or 3 frames from the
attached NxPort.  It is for buffer-to-buffer flow control
in the direction from the attached NxPort (if applicable)
to FxPort."
	::= { fcFxPortEntry 5 }


fcFxPortRxBufSize OBJECT-TYPE
	SYNTAX INTEGER (128..2112)
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The largest Data_Field Size (in octets) for an FT_1 frame
that can be received by the FxPort."
	::= { fcFxPortEntry 6 }


fcFxPortRatov OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The Resource_Allocation_Timeout Value configured for the
FxPort.  This is used as the timeout value for determining
when to reuse an NxPort resource such as a
Recovery_Qualifier.  It represents E_D_TOV (see next
object) plus twice the maximum time that a frame may be
delayed within the Fabric and still be delivered."
	::= { fcFxPortEntry 7 }


fcFxPortEdtov OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The E_D_TOV value configured for the FxPort. The
Error_Detect_Timeout Value is used as the timeout value for
detecting an error condition."
	::= { fcFxPortEntry 8 }


fcFxPortCosSupported OBJECT-TYPE
	SYNTAX OCTET STRING {
	classF(0),
	class1(1),
	class2(2),
	class3(3),
	class4(4),
	class5(5),
	class6(6)
	}
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A value indicating the set of Classes of Service supported
by the FxPort."
	::= { fcFxPortEntry 9 }


fcFxPortIntermixSupported OBJECT-TYPE
	SYNTAX TruthValue
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A flag indicating whether or not the FxPort supports an
Intermixed Dedicated Connection."
	::= { fcFxPortEntry 10 }


fcFxPortStackedConnMode OBJECT-TYPE
	SYNTAX INTEGER {
	none(1),
	transparent(2),
	lockedDown(3)
	}
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A value indicating the mode of Stacked Connect supported by
the FxPort."
	::= { fcFxPortEntry 11 }


fcFxPortClass2SeqDeliv OBJECT-TYPE
	SYNTAX TruthValue
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A flag indicating whether or not Class 2 Sequential
Delivery is supported by the FxPort."
	::= { fcFxPortEntry 12 }


fcFxPortClass3SeqDeliv OBJECT-TYPE
	SYNTAX TruthValue
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A flag indicating whether or not Class 3 Sequential
Delivery is supported by the FxPort."
	::= { fcFxPortEntry 13 }


fcFxPortHoldTime OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The maximum time (in microseconds) that the FxPort shall
hold a frame before discarding the frame if it is unable to
deliver the frame. The value 0 means that the FxPort does
not support this parameter."
	::= { fcFxPortEntry 14 }


fcFxPortStatusTable OBJECT-TYPE
	SYNTAX SEQUENCE OF FcFxPortStatusEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A table that contains, one entry for each FxPort in the
Fabric Element, operational status and parameters of the
FxPorts."
	::= { fcFeStatus 1 }


fcFxPortStatusEntry OBJECT-TYPE
	SYNTAX FcFxPortStatusEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "An entry containing operational status and parameters of a
FxPort."
	::= { fcFxPortStatusTable 1 }

fcFxPortStatusEntry ::=
	SEQUENCE {
		fcFxPortID FcAddressId,
		fcFxPortBbCreditAvailable Gauge32,
		fcFxPortOperMode INTEGER,
		fcFxPortAdminMode INTEGER
		}

fcFxPortID OBJECT-TYPE
	SYNTAX OCTET STRING (SIZE(3))
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The address identifier by which this FxPort is identified
within the Fabric.  The FxPort may assign its address
identifier to its attached NxPort(s) during Fabric Login."
	::= { fcFxPortStatusEntry 1 }


fcFxPortBbCreditAvailable OBJECT-TYPE
	SYNTAX Gauge
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The number of buffers currently available for receiving
frames from the attached port in the buffer-to-buffer flow
control. The value should be less than or equal to
fcFxPortBbCredit."
	::= { fcFxPortStatusEntry 2 }


fcFxPortOperMode OBJECT-TYPE
	SYNTAX INTEGER {
	unknown(1),
	fPort(2),
	flPort(3)
	}
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The current operational mode of the FxPort."
	::= { fcFxPortStatusEntry 3 }


fcFxPortAdminMode OBJECT-TYPE
	SYNTAX INTEGER {
	fPort(2),
	flPort(3)
	}
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The desired operational mode of the FxPort."
	::= { fcFxPortStatusEntry 4 }


fcFxPortPhysTable OBJECT-TYPE
	SYNTAX SEQUENCE OF FcFxPortPhysEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A table that contains, one entry for each FxPort in the
Fabric Element, physical level status and parameters of the
FxPorts."
	::= { fcFeStatus 2 }


fcFxPortPhysEntry OBJECT-TYPE
	SYNTAX FcFxPortPhysEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "An entry containing physical level status and parameters of
a FxPort."
	::= { fcFxPortPhysTable 1 }

fcFxPortPhysEntry ::=
	SEQUENCE {
		fcFxPortPhysAdminStatus INTEGER,
		fcFxPortPhysOperStatus INTEGER,
		fcFxPortPhysLastChange TimeStamp,
		fcFxPortPhysRttov MilliSeconds
		}

fcFxPortPhysAdminStatus OBJECT-TYPE
	SYNTAX INTEGER {
	online(1),
	offline(2),
	testing(3)
	}
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The desired state of the FxPort.  A management station may
place the FxPort in a desired state by setting this object
accordingly.  The testing(3) state indicates that no
operational frames can be passed.  When a Fabric Element
initializes, all FxPorts start with fcFxPortPhysAdminStatus
in the offline(2) state.  As the result of either explicit
management action or per configuration information
accessible by the Fabric Element, fcFxPortPhysAdminStatus
is then changed to either the online(1) or testing(3)
states, or remains in the offline state."
	::= { fcFxPortPhysEntry 1 }


fcFxPortPhysOperStatus OBJECT-TYPE
	SYNTAX INTEGER {
	online(1),
	offline(2),
	testing(3),
	linkFailure(4)
	}
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The current operational status of the FxPort.  The
testing(3) indicates that no operational frames can be
passed.  If fcFxPortPhysAdminStatus is offline(2) then
fcFxPortPhysOperStatus should be offline(2). If
fcFxPortPhysAdminStatus is changed to online(1) then
fcFxPortPhysOperStatus should change to online(1) if the
FxPort is ready to accept Fabric Login request from the
attached NxPort; it should proceed and remain in the link-
failure(4) state if and only if there is a fault that
prevents it from going to the online(1) state."
	::= { fcFxPortPhysEntry 2 }


fcFxPortPhysLastChange OBJECT-TYPE
	SYNTAX TimeStamp
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The value of sysUpTime at the time the FxPort entered its
current operational status. A value of zero indicates that
the FxPort's operational status has not changed since the
agent last restarted."
	::= { fcFxPortPhysEntry 3 }


fcFxPortPhysRttov OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The Receiver_Transmitter_Timeout value of the FxPort. This
is used by the receiver logic to detect Loss of
Synchronization."
	::= { fcFxPortPhysEntry 4 }


fcFxLoginTable OBJECT-TYPE
	SYNTAX SEQUENCE OF FcFxLoginEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A table that contains, one entry for each NxPort attached
to a particular FxPort in the Fabric Element, services
parameters established from the most recent Fabric Login,
explicit or implicit. Note that an FxPort may have one or
more NxPort attached to it."
	::= { fcFeStatus 3 }


fcFxLoginEntry OBJECT-TYPE
	SYNTAX FcFxLoginEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "An entry containing service parameters established from a
successful Fabric Login."
	INDEX { fcFeModuleIndex , fcFxPortIndex, fcFxPortNxLoginIndex }

	::= { fcFxLoginTable 1 }

fcFxLoginEntry ::=
	SEQUENCE {
		fcFxPortNxLoginIndex FcFeNxPortIndex,
		fcFxPortFcphVersionAgreed FcphVersion,
		fcFxPortNxPortBbCredit FcBbCredit,
		fcFxPortNxPortRxDataFieldSize FcRxDataFieldSize,
		fcFxPortCosSuppAgreed FcCosCap,
		fcFxPortIntermixSuppAgreed TruthValue,
		fcFxPortStackedConnModeAgreed FcStackedConnMode,
		fcFxPortClass2SeqDelivAgreed TruthValue,
		fcFxPortClass3SeqDelivAgreed TruthValue,
		fcFxPortNxPortName FcNameId,
		fcFxPortConnectedNxPort FcAddressId,
		fcFxPortBbCreditModel FcBbCreditModel
		}

fcFxPortNxLoginIndex OBJECT-TYPE
	SYNTAX INTEGER (1..126)
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The object identifies the associated NxPort in the
attachment for which the entry contains information."
	::= { fcFxLoginEntry 1 }


fcFxPortFcphVersionAgreed OBJECT-TYPE
	SYNTAX INTEGER (0..255)
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The version of FC-PH that the FxPort has agreed to support
from the Fabric Login"
	::= { fcFxLoginEntry 2 }


fcFxPortNxPortBbCredit OBJECT-TYPE
	SYNTAX INTEGER (0..32767)
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The total number of buffers available for holding Class 1
connect-request, Class 2 or Class 3 frames to be
transmitted to the attached NxPort.  It is for buffer-to-
buffer flow control in the direction from FxPort to NxPort.
The buffer-to-buffer flow control mechanism is indicated in
the respective fcFxPortBbCreditModel."
	::= { fcFxLoginEntry 3 }


fcFxPortNxPortRxDataFieldSize OBJECT-TYPE
	SYNTAX INTEGER (128..2112)
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The Receive Data Field Size of the attached NxPort. This
object specifies the largest Data Field Size for an FT_1
frame that can be received by the NxPort."
	::= { fcFxLoginEntry 4 }


fcFxPortCosSuppAgreed OBJECT-TYPE
	SYNTAX OCTET STRING {
	classF(0),
	class1(1),
	class2(2),
	class3(3),
	class4(4),
	class5(5),
	class6(6)
	}
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A variable indicating that the attached NxPort has
requested the FxPort for the support of classes of services
and the FxPort has granted the request."
	::= { fcFxLoginEntry 5 }


fcFxPortIntermixSuppAgreed OBJECT-TYPE
	SYNTAX TruthValue
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A variable indicating that the attached NxPort has
requested the FxPort for the support of Intermix and the
FxPort has granted the request. This flag is only valid if
Class 1 service is supported."
	::= { fcFxLoginEntry 6 }


fcFxPortStackedConnModeAgreed OBJECT-TYPE
	SYNTAX INTEGER {
	none(1),
	transparent(2),
	lockedDown(3)
	}
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A variable indicating whether the FxPort has agreed to
support stacked connect from the Fabric Login. This is only
meaningful if Class 1 service has been agreed."
	::= { fcFxLoginEntry 7 }


fcFxPortClass2SeqDelivAgreed OBJECT-TYPE
	SYNTAX TruthValue
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A variable indicating whether the FxPort has agreed to
support Class 2 sequential delivery from the Fabric Login.
This is only meaningful if Class 2 service has been
agreed."
	::= { fcFxLoginEntry 8 }


fcFxPortClass3SeqDelivAgreed OBJECT-TYPE
	SYNTAX TruthValue
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A flag indicating whether the FxPort has agreed to support
Class 3 sequential delivery from the Fabric Login. This is
only meaningful if Class 3 service has been agreed."
	::= { fcFxLoginEntry 9 }


fcFxPortNxPortName OBJECT-TYPE
	SYNTAX OCTET STRING (SIZE(8))
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The port name of the attached NxPort."
	::= { fcFxLoginEntry 10 }


fcFxPortConnectedNxPort OBJECT-TYPE
	SYNTAX OCTET STRING (SIZE(3))
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The address identifier of the destination NxPort with which
this FxPort is currently engaged in a either a Class 1 or
loop connection. If this FxPort is not engaged in a
connection, then the value of this object is '000000'H."
	::= { fcFxLoginEntry 11 }


fcFxPortBbCreditModel OBJECT-TYPE
	SYNTAX INTEGER {
	regular(1),
	alternate(2)
	}
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "This object identifies the BB_Credit model used by the
FxPort."
	::= { fcFxLoginEntry 12 }


fcFxPortErrorTable OBJECT-TYPE
	SYNTAX SEQUENCE OF FcFxPortErrorEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A table that contains, one entry for each FxPort, counters
that record the numbers of errors detected."
	::= { fcFeError 1 }


fcFxPortErrorEntry OBJECT-TYPE
	SYNTAX FcFxPortErrorEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "An entry containing error counters of a FxPort."
	::= { fcFxPortErrorTable 1 }

fcFxPortErrorEntry ::=
	SEQUENCE {
		fcFxPortLinkFailures Counter32,
		fcFxPortSyncLosses Counter32,
		fcFxPortSigLosses Counter32,
		fcFxPortPrimSeqProtoErrors Counter32,
		fcFxPortInvalidTxWords Counter32,
		fcFxPortInvalidCrcs Counter32,
		fcFxPortDelimiterErrors Counter32,
		fcFxPortAddressIdErrors Counter32,
		fcFxPortLinkResetIns Counter32,
		fcFxPortLinkResetOuts Counter32,
		fcFxPortOlsIns Counter32,
		fcFxPortOlsOuts Counter32
		}

fcFxPortLinkFailures OBJECT-TYPE
	SYNTAX Counter
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The number of link failures detected by this FxPort."
	::= { fcFxPortErrorEntry 1 }


fcFxPortSyncLosses OBJECT-TYPE
	SYNTAX Counter
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The number of loss of synchronization detected by the
FxPort."
	::= { fcFxPortErrorEntry 2 }


fcFxPortSigLosses OBJECT-TYPE
	SYNTAX Counter
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The number of loss of signal detected by the FxPort."
	::= { fcFxPortErrorEntry 3 }


fcFxPortPrimSeqProtoErrors OBJECT-TYPE
	SYNTAX Counter
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The number of primitive sequence protocol errors detected
by the FxPort."
	::= { fcFxPortErrorEntry 4 }


fcFxPortInvalidTxWords OBJECT-TYPE
	SYNTAX Counter
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The number of invalid transmission word detected by the
FxPort."
	::= { fcFxPortErrorEntry 5 }


fcFxPortInvalidCrcs OBJECT-TYPE
	SYNTAX Counter
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The number of invalid CRC detected by this FxPort."
	::= { fcFxPortErrorEntry 6 }


fcFxPortDelimiterErrors OBJECT-TYPE
	SYNTAX Counter
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The number of Delimiter Errors detected by this FxPort."
	::= { fcFxPortErrorEntry 7 }


fcFxPortAddressIdErrors OBJECT-TYPE
	SYNTAX Counter
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The number of address identifier errors detected by this
FxPort."
	::= { fcFxPortErrorEntry 8 }


fcFxPortLinkResetIns OBJECT-TYPE
	SYNTAX Counter
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The number of Link Reset Protocol received by this FxPort
from the attached NxPort."
	::= { fcFxPortErrorEntry 9 }


fcFxPortLinkResetOuts OBJECT-TYPE
	SYNTAX Counter
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The number of Link Reset Protocol issued by this FxPort to
the attached NxPort."
	::= { fcFxPortErrorEntry 10 }


fcFxPortOlsIns OBJECT-TYPE
	SYNTAX Counter
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The number of Offline Sequence received by this FxPort."
	::= { fcFxPortErrorEntry 11 }


fcFxPortOlsOuts OBJECT-TYPE
	SYNTAX Counter
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The number of Offline Sequence issued by this FxPort."
	::= { fcFxPortErrorEntry 12 }


fcFxPortC1AccountingTable OBJECT-TYPE
	SYNTAX SEQUENCE OF FcFxPortC1AccountingEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A table that contains, one entry for each FxPort in the
Fabric Element, Class 1 accounting information recorded
since the management agent has re-initialized."
	::= { fcFeAccounting 1 }


fcFxPortC1AccountingEntry OBJECT-TYPE
	SYNTAX FcFxPortC1AccountingEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "An entry containing Class 1 accounting information for each
FxPort."
	::= { fcFxPortC1AccountingTable 1 }

fcFxPortC1AccountingEntry ::=
	SEQUENCE {
		fcFxPortC1InFrames Counter32,
		fcFxPortC1OutFrames Counter32,
		fcFxPortC1InOctets Counter32,
		fcFxPortC1OutOctets Counter32,
		fcFxPortC1Discards Counter32,
		fcFxPortC1FbsyFrames Counter32,
		fcFxPortC1FrjtFrames Counter32,
		fcFxPortC1InConnections Counter32,
		fcFxPortC1OutConnections Counter32,
		fcFxPortC1ConnTime MilliSeconds
		}

fcFxPortC1InFrames OBJECT-TYPE
	SYNTAX Counter
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The number of Class 1 frames (other than Class 1 connect-
request) received by this FxPort from its attached NxPort."
	::= { fcFxPortC1AccountingEntry 1 }


fcFxPortC1OutFrames OBJECT-TYPE
	SYNTAX Counter
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The number of Class 1 frames (other than Class 1 connect-
request) delivered through this FxPort to its attached
NxPort."
	::= { fcFxPortC1AccountingEntry 2 }


fcFxPortC1InOctets OBJECT-TYPE
	SYNTAX Counter
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The number of Class 1 frame octets, including the frame
delimiters,  received by this FxPort from its attached
NxPort."
	::= { fcFxPortC1AccountingEntry 3 }


fcFxPortC1OutOctets OBJECT-TYPE
	SYNTAX Counter
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The number of Class 1 frame octets, including the frame
delimiters, delivered through this FxPort its attached
NxPort."
	::= { fcFxPortC1AccountingEntry 4 }


fcFxPortC1Discards OBJECT-TYPE
	SYNTAX Counter
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The number of Class 1 frames discarded by this FxPort."
	::= { fcFxPortC1AccountingEntry 5 }


fcFxPortC1FbsyFrames OBJECT-TYPE
	SYNTAX Counter
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The number of F_BSY frames generated by this FxPort against
Class 1 connect-request."
	::= { fcFxPortC1AccountingEntry 6 }


fcFxPortC1FrjtFrames OBJECT-TYPE
	SYNTAX Counter
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The number of F_RJT frames generated by this FxPort against
Class 1 connect-request."
	::= { fcFxPortC1AccountingEntry 7 }


fcFxPortC1InConnections OBJECT-TYPE
	SYNTAX Counter
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The number of Class 1 connections successfully established
in which the attached NxPort is the source of the connect-
request."
	::= { fcFxPortC1AccountingEntry 8 }


fcFxPortC1OutConnections OBJECT-TYPE
	SYNTAX Counter
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The number of Class 1 connections successfully established
in which the attached NxPort is the destination of the
connect-request."
	::= { fcFxPortC1AccountingEntry 9 }


fcFxPortC1ConnTime OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The cumulative time that this FxPort has been engaged in
Class 1 connection.  The amount of time is counted from
after a connect-request has been accepted until the
connection is disengaged, either by an EOFdt or Link
Reset."
	::= { fcFxPortC1AccountingEntry 10 }


fcFxPortC2AccountingTable OBJECT-TYPE
	SYNTAX SEQUENCE OF FcFxPortC2AccountingEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A table that contains, one entry for each FxPort in the
Fabric Element, Class 2 accounting information recorded
since the management agent has re-initialized."
	::= { fcFeAccounting 2 }


fcFxPortC2AccountingEntry OBJECT-TYPE
	SYNTAX FcFxPortC2AccountingEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "An entry containing Class 2 accounting information for each
FxPort."
	::= { fcFxPortC2AccountingTable 1 }

fcFxPortC2AccountingEntry ::=
	SEQUENCE {
		fcFxPortC2InFrames Counter32,
		fcFxPortC2OutFrames Counter32,
		fcFxPortC2InOctets Counter32,
		fcFxPortC2OutOctets Counter32,
		fcFxPortC2Discards Counter32,
		fcFxPortC2FbsyFrames Counter32,
		fcFxPortC2FrjtFrames Counter32
		}

fcFxPortC2InFrames OBJECT-TYPE
	SYNTAX Counter
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The number of Class 2 frames received by this FxPort from
its attached NxPort."
	::= { fcFxPortC2AccountingEntry 1 }


fcFxPortC2OutFrames OBJECT-TYPE
	SYNTAX Counter
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The number of Class 2 frames delivered through this FxPort
to its attached NxPort."
	::= { fcFxPortC2AccountingEntry 2 }


fcFxPortC2InOctets OBJECT-TYPE
	SYNTAX Counter
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The number of Class 2 frame octets, including the frame
delimiters, received by this FxPort from its attached
NxPort."
	::= { fcFxPortC2AccountingEntry 3 }


fcFxPortC2OutOctets OBJECT-TYPE
	SYNTAX Counter
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The number of Class 2 frame octets, including the frame
delimiters, delivered through this FxPort to its attached
NxPort."
	::= { fcFxPortC2AccountingEntry 4 }


fcFxPortC2Discards OBJECT-TYPE
	SYNTAX Counter
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The number of Class 2 frames discarded by this FxPort."
	::= { fcFxPortC2AccountingEntry 5 }


fcFxPortC2FbsyFrames OBJECT-TYPE
	SYNTAX Counter
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The number of F_BSY frames generated by this FxPort against
Class 2 frames."
	::= { fcFxPortC2AccountingEntry 6 }


fcFxPortC2FrjtFrames OBJECT-TYPE
	SYNTAX Counter
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The number of F_RJT frames generated by this FxPort against
Class 2 frames."
	::= { fcFxPortC2AccountingEntry 7 }


fcFxPortC3AccountingTable OBJECT-TYPE
	SYNTAX SEQUENCE OF FcFxPortC3AccountingEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A table that contains, one entry for each FxPort in the
Fabric Element, Class 3 accounting information recorded
since the management agent has re-initialized."
	::= { fcFeAccounting 3 }


fcFxPortC3AccountingEntry OBJECT-TYPE
	SYNTAX FcFxPortC3AccountingEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "An entry containing Class 3 accounting information for each
FxPort."
	::= { fcFxPortC3AccountingTable 1 }

fcFxPortC3AccountingEntry ::=
	SEQUENCE {
		fcFxPortC3InFrames Counter32,
		fcFxPortC3OutFrames Counter32,
		fcFxPortC3InOctets Counter32,
		fcFxPortC3OutOctets Counter32,
		fcFxPortC3Discards Counter32
		}

fcFxPortC3InFrames OBJECT-TYPE
	SYNTAX Counter
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The number of Class 3 frames received by this FxPort from
its attached NxPort."
	::= { fcFxPortC3AccountingEntry 1 }


fcFxPortC3OutFrames OBJECT-TYPE
	SYNTAX Counter
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The number of Class 3 frames delivered through this FxPort
to its attached NxPort."
	::= { fcFxPortC3AccountingEntry 2 }


fcFxPortC3InOctets OBJECT-TYPE
	SYNTAX Counter
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The number of Class 3 frame octets, including the frame
delimiters, received by this FxPort from its attached
NxPort."
	::= { fcFxPortC3AccountingEntry 3 }


fcFxPortC3OutOctets OBJECT-TYPE
	SYNTAX Counter
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The number of Class 3 frame octets, including the frame
delimiters, delivered through this FxPort to its attached
NxPort."
	::= { fcFxPortC3AccountingEntry 4 }


fcFxPortC3Discards OBJECT-TYPE
	SYNTAX Counter
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The number of Class 3 frames discarded by this FxPort."
	::= { fcFxPortC3AccountingEntry 5 }


fcFxPortCapTable OBJECT-TYPE
	SYNTAX SEQUENCE OF FcFxPortCapEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A table that contains, one entry for each FxPort, the
capabilities of the port within the Fabric Element."
	::= { fcFeCapabilities 1 }


fcFxPortCapEntry OBJECT-TYPE
	SYNTAX FcFxPortCapEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "An entry containing the Cap of a FxPort."
	::= { fcFxPortCapTable 1 }

fcFxPortCapEntry ::=
	SEQUENCE {
		fcFxPortCapFcphVersionHigh FcphVersion,
		fcFxPortCapFcphVersionLow FcphVersion,
		fcFxPortCapBbCreditMax FcBbCredit,
		fcFxPortCapBbCreditMin FcBbCredit,
		fcFxPortCapRxDataFieldSizeMax FcRxDataFieldSize,
		fcFxPortCapRxDataFieldSizeMin FcRxDataFieldSize,
		fcFxPortCapCos FcCosCap,
		fcFxPortCapIntermix TruthValue,
		fcFxPortCapStackedConnMode FcStackedConnMode,
		fcFxPortCapClass2SeqDeliv TruthValue,
		fcFxPortCapClass3SeqDeliv TruthValue,
		fcFxPortCapHoldTimeMax MicroSeconds,
		fcFxPortCapHoldTimeMin MicroSeconds
		}

fcFxPortCapFcphVersionHigh OBJECT-TYPE
	SYNTAX INTEGER (0..255)
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The highest or most recent version of FC-PH that the FxPort
is capable of supporting."
	::= { fcFxPortCapEntry 1 }


fcFxPortCapFcphVersionLow OBJECT-TYPE
	SYNTAX INTEGER (0..255)
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The lowest or earliest version of FC-PH that the FxPort is
capable of supporting."
	::= { fcFxPortCapEntry 2 }


fcFxPortCapBbCreditMax OBJECT-TYPE
	SYNTAX INTEGER (0..32767)
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The maximum number of receive buffers available for holding
Class 1 connect-request, Class 2 or Class 3 frames from the
attached NxPort."
	::= { fcFxPortCapEntry 3 }


fcFxPortCapBbCreditMin OBJECT-TYPE
	SYNTAX INTEGER (0..32767)
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The minimum number of receive buffers available for holding
Class 1 connect-request, Class 2 or Class 3 frames from the
attached NxPort."
	::= { fcFxPortCapEntry 4 }


fcFxPortCapRxDataFieldSizeMax OBJECT-TYPE
	SYNTAX INTEGER (128..2112)
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The maximum size in bytes of the Data Field in a frame that
the FxPort is capable of receiving from its attached
NxPort."
	::= { fcFxPortCapEntry 5 }


fcFxPortCapRxDataFieldSizeMin OBJECT-TYPE
	SYNTAX INTEGER (128..2112)
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The minimum size in bytes of the Data Field in a frame that
the FxPort is capable of receiving from its attached
NxPort."
	::= { fcFxPortCapEntry 6 }


fcFxPortCapCos OBJECT-TYPE
	SYNTAX OCTET STRING {
	classF(0),
	class1(1),
	class2(2),
	class3(3),
	class4(4),
	class5(5),
	class6(6)
	}
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A value indicating the set of Classes of Service that the
FxPort is capable of supporting."
	::= { fcFxPortCapEntry 7 }


fcFxPortCapIntermix OBJECT-TYPE
	SYNTAX TruthValue
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A flag indicating whether or not the FxPort is capable of
supporting the intermixing of Class 2 and Class 3 frames
during a Class 1 connection. This flag is only valid if the
port is capable of supporting Class 1 service."
	::= { fcFxPortCapEntry 8 }


fcFxPortCapStackedConnMode OBJECT-TYPE
	SYNTAX INTEGER {
	none(1),
	transparent(2),
	lockedDown(3)
	}
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A value indicating the mode of Stacked Connect request that
the FxPort is capable of supporting."
	::= { fcFxPortCapEntry 9 }


fcFxPortCapClass2SeqDeliv OBJECT-TYPE
	SYNTAX TruthValue
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A flag indicating whether or not the FxPort is capable of
supporting Class 2 Sequential Delivery."
	::= { fcFxPortCapEntry 10 }


fcFxPortCapClass3SeqDeliv OBJECT-TYPE
	SYNTAX TruthValue
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A flag indicating whether or not the FxPort is capable of
supporting Class 3 Sequential Delivery."
	::= { fcFxPortCapEntry 11 }


fcFxPortCapHoldTimeMax OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The maximum holding time (in microseconds) that the FxPort
is capable of supporting."
	::= { fcFxPortCapEntry 12 }


fcFxPortCapHoldTimeMin OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The minimum holding time (in microseconds) that the FxPort
is capable of supporting."
	::= { fcFxPortCapEntry 13 }


fcFeMIBConformance OBJECT IDENTIFIER ::= { fcFeMIB 2 }

fcFeMIBCompliances OBJECT IDENTIFIER ::= { fcFeMIBConformance 1 }

fcFeMIBGroups OBJECT IDENTIFIER ::= { fcFeMIBConformance 2 }

fcFeConfigGroup OBJECT IDENTIFIER ::= { fcFeMIBGroups 1 }

fcFeStatusGroup OBJECT IDENTIFIER ::= { fcFeMIBGroups 2 }

fcFeErrorGroup OBJECT IDENTIFIER ::= { fcFeMIBGroups 3 }

fcFeClass1AccountingGroup OBJECT IDENTIFIER ::= { fcFeMIBGroups 4 }

fcFeClass2AccountingGroup OBJECT IDENTIFIER ::= { fcFeMIBGroups 5 }

fcFeClass3AccountingGroup OBJECT IDENTIFIER ::= { fcFeMIBGroups 6 }

fcFeCapabilitiesGroup OBJECT IDENTIFIER ::= { fcFeMIBGroups 7 }

END

