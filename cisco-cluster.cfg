#-MIBFILE: cisco-cluster.mib

CISCO-CLUSTER-MIB DEFINITIONS ::= BEGIN


DisplayString ::=
	OCTET STRING (SIZE(0..255))

PhysAddress ::=
	OCTET STRING

MacAddress ::=
	OCTET STRING (SIZE(6))

TruthValue ::=
	INTEGER {
	true(1),
	false(2)
	}

TestAndIncr ::=
	INTEGER (0..2147483647)

AutonomousType ::=
	OBJECT IDENTIFIER

InstancePointer ::=
	OBJECT IDENTIFIER

VariablePointer ::=
	OBJECT IDENTIFIER

RowPointer ::=
	OBJECT IDENTIFIER

RowStatus ::=
	INTEGER {
	active(1),
	notInService(2),
	notReady(3),
	createAndGo(4),
	createAndWait(5),
	destroy(6)
	}

TimeStamp ::=
	TimeTicks

TimeInterval ::=
	INTEGER (0..2147483647)

DateAndTime ::=
	OCTET STRING (SIZE(8|11))

StorageType ::=
	INTEGER {
	other(1),
	volatile(2),
	nonVolatile(3),
	permanent(4),
	readOnly(5)
	}

TDomain ::=
	OBJECT IDENTIFIER

TAddress ::=
	OCTET STRING (SIZE(1..255))

SnmpEngineID ::=
	OCTET STRING (SIZE(5..32))

SnmpSecurityModel ::=
	INTEGER (0..2147483647)

SnmpMessageProcessingModel ::=
	INTEGER (0..2147483647)

SnmpSecurityLevel ::=
	INTEGER {
	noAuthNoPriv(1),
	authNoPriv(2),
	authPriv(3)
	}

SnmpAdminString ::=
	OCTET STRING (SIZE(0..255))

cisco OBJECT IDENTIFIER ::= { enterprises 9 }
ciscoMgmt OBJECT IDENTIFIER ::= { cisco 9 }
ciscoClusterMIB OBJECT IDENTIFIER ::= { ciscoMgmt 134 }

ciscoClusterMIBObjects OBJECT IDENTIFIER ::= { ciscoClusterMIB 1 }

ccStatus OBJECT IDENTIFIER ::= { ciscoClusterMIBObjects 1 }

ccMember OBJECT IDENTIFIER ::= { ciscoClusterMIBObjects 2 }

ccCandidate OBJECT IDENTIFIER ::= { ciscoClusterMIBObjects 3 }

ccStatusClusterName OBJECT-TYPE
	SYNTAX SnmpAdminString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The name of the cluster.  Cluster command switch
functionality is only enabled if this object is
a non-NULL string.  Strings containing all blanks
or a NULL string will disable the cluster.
This object and ccStatusClusterMode in this MIB are
the only objects that will be instantiated if the
command switch functionality is not enabled."
	::= { ccStatus 1 }


ccStatusClusterMode OBJECT-TYPE
	SYNTAX INTEGER {
	commandDevice(1),
	memberDevice(2),
	none(3)
	}
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The mode of the device.  A device can become a member
switch only when it is added to the cluster at the command
switch.  For devices that do not belong to any cluster,
the ccStatusClusterMode is set to 'none'."
	::= { ccStatus 2 }


ccStatusCommanderTDomain OBJECT-TYPE
	SYNTAX TDomain
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Indicates the kind of transport service used by the command
switch of the cluster.  Possible values for this object, such
as snmpUDPDomain, are defined in the Transport Mappings for
SNMPv2 document (RFC 1906)."
	::= { ccStatus 3 }


ccStatusCommanderTAddress OBJECT-TYPE
	SYNTAX TAddress
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The transport service address of the command switch
of the cluster.  The address is formatted according to the
corresponding value of ccStatusCommanderTDomain.

For snmpUDPDomain, a TAddress is 6 octets long, the
initial 4 octets containing the IP-address in network-byte
order and the last 2 containing the UDP port in network-byte
order. Consult 'Transport Mappings for Version 2 of the
Simple Network Management Protocol' (RFC 1906) for further
information on snmpUDPDomain."
	::= { ccStatus 4 }


ccStatusCommanderMacAddress OBJECT-TYPE
	SYNTAX MacAddress
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The management MAC address of the command switch of the
cluster."
	::= { ccStatus 5 }


ccStatusTimeOfLastChange OBJECT-TYPE
	SYNTAX TimeStamp
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The value of sysUpTime on the command switch when
the last time the value of an instance of ccMemberOperStatus
changed.  The value 0 indicates that no member's status
has ever changed since commander system initialization."
	::= { ccStatus 6 }


ccStatusLastNMSAddMemberTDomain OBJECT-TYPE
	SYNTAX TDomain
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Indicates the kind of transport service used by the
the last NMS tried to add a member to the cluster."
	::= { ccStatus 7 }


ccStatusLastNMSAddMemberTAddress OBJECT-TYPE
	SYNTAX TAddress
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The transport service address of the last NMS which
tried to add a member to the cluster.  The address is
formatted according to the corresponding value of
ccStatusLastNMSAddMemberTDomain."
	::= { ccStatus 8 }


ccStatusLastFailureAddMember OBJECT-TYPE
	SYNTAX INTEGER {
	none(1),
	password(2),
	overmax(3),
	noncandidate(4),
	memberNumberInUse(5),
	unreachable(6)
	}
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The reason why the last NMS was unable to add a switch
to be a member of the cluster.

password:  The member has an enable password configured.

overmax:   Adding the member exceeds the maximum number of
cluster members supported by the command switch.
See ccStatusMaxNumberOfMembers.

noncandidate:  The member is not a candidate switch, or it
does not show up in the candidate table.

memberNumberInUse:  The member number is used by an existing
member in the cluster.

unreachable:   The member is a candidate but is unreachable or
has no connectivity."
	::= { ccStatus 9 }


ccStatusMaxNumberOfMembers OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The maximum number of cluster members allowed in the
cluster.  The command switch is considered as a cluster
member also."
	::= { ccStatus 10 }


ccStatusMemberOrder OBJECT-TYPE
	SYNTAX SnmpAdminString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The suggested order in which the cluster members are
displayed in network management applications.  The
format of the string is n1,n2,n3,n4, ..., where
is any valid member number in the cluster.  The
member numbers are separated by commas with no spaces
in between.  An example of the object's value is
'3,8,14,0,2' for a cluster containing member numbers
0, 2, 3, 8, and 14."
	::= { ccStatus 11 }


ccMemberTable OBJECT-TYPE
	SYNTAX SEQUENCE OF CcMemberEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "This table contains one row per cluster member,
including the command switch."
	::= { ccMember 1 }


ccMemberEntry OBJECT-TYPE
	SYNTAX CcMemberEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "An entry containing cluster management information
applicable to a particular cluster member."
	INDEX { ccMemberMacAddress  }

	::= { ccMemberTable 1 }

ccMemberEntry ::=
	SEQUENCE {
		ccMemberMacAddress MacAddress,
		ccMemberNumber Unsigned32,
		ccMemberOperStatus INTEGER,
		ccMemberEntityLogicalIndex Integer32,
		ccMemberRowStatus RowStatus
		}

ccMemberMacAddress OBJECT-TYPE
	SYNTAX MacAddress
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The management MAC address of the member device."
	::= { ccMemberEntry 1 }


ccMemberNumber OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "An arbitrary value which uniquely identifies the
cluster member switch number. It ranges from 1 to
ccStatusMaxNumberOfMembers."
	::= { ccMemberEntry 2 }


ccMemberOperStatus OBJECT-TYPE
	SYNTAX INTEGER {
	active(1),
	inactive(2)
	}
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The status of cluster management connectivity between
the command switch and a cluster member. Cluster management
connectivity is determined by the exchange of cluster
management messages between the command switch and a
cluster member. A member that has failed to exchange
cluster management messages with the command switch is
deemed to be inactive. Otherwise, it is deemed to be active."
	::= { ccMemberEntry 3 }


ccMemberEntityLogicalIndex OBJECT-TYPE
	SYNTAX INTEGER (1..2147483647)
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The value of entLogicalIndex in the ENTITY-MIB
corresponding to this cluster member. Creating an
entry in this table creates a corresponding entry
in the entLogicalTable in the ENTITY-MIB."
	::= { ccMemberEntry 4 }


ccMemberRowStatus OBJECT-TYPE
	SYNTAX RowStatus
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The status of this conceptual row. A device
is added to the cluster of a command switch by
creating an entry in this table for the device. The
devices currently eligible to be added into the
cluster are listed in the ccCandidateTable.
An attempt to add a new member may fail.  See
ccStatusLastFailureAddMember for possible reasons
for that failure."
	::= { ccMemberEntry 5 }


ccCandidateTable OBJECT-TYPE
	SYNTAX SEQUENCE OF CcCandidateEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "This table contains one row per cluster candidate,
A cluster candidate is a device that is currently
eligible to be added to the cluster of a command
switch.  A device is eligible if it satisfies the
following conditions:
1. It supports the cluster management protocol.
2. It is directly connected to an existing cluster
member.

The entries in this table and the entries in
ccMemberTable are mutually exclusive at all
times.  That is, any device that is a cluster
member never shows up in the ccCandidateTable
or is never a candidate at the same time .  Also, any
candidate that shows up in ccCandidateTable should not
appear in ccMemberTable."
	::= { ccCandidate 1 }


ccCandidateEntry OBJECT-TYPE
	SYNTAX CcCandidateEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "An entry pertaining to a single candidate device."
	INDEX { ccCandidateMacAddress  }

	::= { ccCandidateTable 1 }

ccCandidateEntry ::=
	SEQUENCE {
		ccCandidateMacAddress MacAddress
		}

ccCandidateMacAddress OBJECT-TYPE
	SYNTAX MacAddress
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The MAC address of a device qualified to
to be a cluster member of the command switch
cluster."
	::= { ccCandidateEntry 1 }


ciscoClusterMIBNotificationsPrefix OBJECT IDENTIFIER ::= { ciscoClusterMIB 2 }

ciscoClusterMIBNotifications OBJECT IDENTIFIER ::= { ciscoClusterMIBNotificationsPrefix 0 }

ciscoClusterMIBConformance OBJECT IDENTIFIER ::= { ciscoClusterMIB 3 }

ciscoClusterMIBCompliances OBJECT IDENTIFIER ::= { ciscoClusterMIBConformance 1 }

ciscoClusterMIBGroups OBJECT IDENTIFIER ::= { ciscoClusterMIBConformance 2 }

ciscoClusterStatusGroup OBJECT IDENTIFIER ::= { ciscoClusterMIBGroups 1 }

ciscoClusterMemberStatusGroup OBJECT IDENTIFIER ::= { ciscoClusterMIBGroups 2 }

ciscoClusterMemberGroup OBJECT IDENTIFIER ::= { ciscoClusterMIBGroups 3 }

ciscoClusterCandidateGroup OBJECT IDENTIFIER ::= { ciscoClusterMIBGroups 4 }

ciscoClusterNotificationGroup OBJECT IDENTIFIER ::= { ciscoClusterMIBGroups 5 }

ccStatusMemberStatusChange TRAP-TYPE
	ENTERPRISE ciscoClusterMIBNotificationsPrefix
	VARIABLES { ccMemberOperStatus }
DESCRIPTION " A cluster member status change notification
is generated whenever the value of any instance
of ccClusterMemberOperStatus changes after the
member is completely added to the cluster."
	::= 1


END

