#-MIBFILE: hpvcmodule-mib.mib

HPVCMODULE-MIB DEFINITIONS ::= BEGIN


mib-2 OBJECT IDENTIFIER ::= { mgmt 1 }
DisplayString ::=
	OCTET STRING (SIZE(0..255))

PhysAddress ::=
	OCTET STRING

MacAddress ::=
	OCTET STRING (SIZE(6))

TruthValue ::=
	INTEGER {
	true(1),
	false(2)
	}

TestAndIncr ::=
	INTEGER (0..2147483647)

AutonomousType ::=
	OBJECT IDENTIFIER

InstancePointer ::=
	OBJECT IDENTIFIER

VariablePointer ::=
	OBJECT IDENTIFIER

RowPointer ::=
	OBJECT IDENTIFIER

RowStatus ::=
	INTEGER {
	active(1),
	notInService(2),
	notReady(3),
	createAndGo(4),
	createAndWait(5),
	destroy(6)
	}

TimeStamp ::=
	TimeTicks

TimeInterval ::=
	INTEGER (0..2147483647)

DateAndTime ::=
	OCTET STRING (SIZE(8|11))

StorageType ::=
	INTEGER {
	other(1),
	volatile(2),
	nonVolatile(3),
	permanent(4),
	readOnly(5)
	}

TDomain ::=
	OBJECT IDENTIFIER

TAddress ::=
	OCTET STRING (SIZE(1..255))

SnmpEngineID ::=
	OCTET STRING (SIZE(5..32))

SnmpSecurityModel ::=
	INTEGER (0..2147483647)

SnmpMessageProcessingModel ::=
	INTEGER (0..2147483647)

SnmpSecurityLevel ::=
	INTEGER {
	noAuthNoPriv(1),
	authNoPriv(2),
	authPriv(3)
	}

SnmpAdminString ::=
	OCTET STRING (SIZE(0..255))

TransportDomain ::=
	OBJECT IDENTIFIER

TransportAddressType ::=
	INTEGER {
	unknown(0),
	udpIpv4(1),
	udpIpv6(2),
	udpIpv4z(3),
	udpIpv6z(4),
	tcpIpv4(5),
	tcpIpv6(6),
	tcpIpv4z(7),
	tcpIpv6z(8),
	sctpIpv4(9),
	sctpIpv6(10),
	sctpIpv4z(11),
	sctpIpv6z(12),
	local(13),
	udpDns(14),
	tcpDns(15),
	sctpDns(16)
	}

TransportAddress ::=
	OCTET STRING (SIZE(0..255))

TransportAddressIPv4 ::=
	OCTET STRING (SIZE(6))

TransportAddressIPv6 ::=
	OCTET STRING (SIZE(18))

TransportAddressIPv4z ::=
	OCTET STRING (SIZE(10))

TransportAddressIPv6z ::=
	OCTET STRING (SIZE(22))

TransportAddressLocal ::=
	OCTET STRING (SIZE(1..255))

TransportAddressDns ::=
	OCTET STRING (SIZE(1..255))

OwnerString ::=
	OCTET STRING (SIZE(0..255))

InterfaceIndex ::=
	INTEGER (1..2147483647)

InterfaceIndexOrZero ::=
	INTEGER (0..2147483647)

interfaces OBJECT IDENTIFIER ::= { mib-2 2 }
ifTable OBJECT IDENTIFIER ::= { interfaces 2 }
ifEntry OBJECT IDENTIFIER ::= { ifTable 1 }
ifIndex OBJECT IDENTIFIER ::= { ifEntry 1 }
ifInErrors OBJECT IDENTIFIER ::= { ifEntry 14 }
ifOutErrors OBJECT IDENTIFIER ::= { ifEntry 20 }
VcModuleRole ::=
	INTEGER {
	unintegrated(1),
	primaryProtected(2),
	primaryUnprotected(3),
	standby(4),
	other(5)
	}

VcEnclosureRole ::=
	INTEGER {
	unknown(1),
	primary(2),
	secondary(3)
	}

VcModuleType ::=
	INTEGER {
	vcModuleEnet(1),
	vcModuleFC(2),
	vcModuleOther(3)
	}

VcModulePortBpduLoopStatus ::=
	INTEGER {
	ok(1),
	loop-dectected(2)
	}

VcModulePortProtectionStatus ::=
	INTEGER {
	ok(1),
	pause-flood-detected(2),
	in-pause-condition(3)
	}

hp OBJECT IDENTIFIER ::= { enterprises 11 }

hpSysMgt OBJECT IDENTIFIER ::= { hp 5 }

hpEmbeddedServerMgt OBJECT IDENTIFIER ::= { hpSysMgt 7 }

hpModuleMgmtProc OBJECT IDENTIFIER ::= { hpEmbeddedServerMgt 5 }

virtualConnect OBJECT IDENTIFIER ::= { hpModuleMgmtProc 2 }

vcModuleMIB OBJECT IDENTIFIER ::= { virtualConnect 3 }

vcModuleMIBObjects OBJECT IDENTIFIER ::= { vcModuleMIB 1 }

vcModuleObjects OBJECT IDENTIFIER ::= { vcModuleMIBObjects 1 }

vcModuleDomainName OBJECT-TYPE
	SYNTAX SnmpAdminString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The administratively assigned name of the Virtual Connect Domain 
associated with this module."
	::= { vcModuleObjects 1 }


vcModuleRole OBJECT-TYPE
	SYNTAX INTEGER {
	unintegrated(1),
	primaryProtected(2),
	primaryUnprotected(3),
	standby(4),
	other(5)
	}
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The VC domain role of this VC module."
	::= { vcModuleObjects 2 }


vcModuleDomainPrimaryAddressType OBJECT-TYPE
	SYNTAX TransportAddressType
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The transport address type used to address the primary VC module."
	::= { vcModuleObjects 3 }


vcModuleDomainPrimaryAddress OBJECT-TYPE
	SYNTAX TransportAddress
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The address of the primary VC module. The address format is determined
by the vcDomainPrimaryAddressType object."
	::= { vcModuleObjects 4 }


vcModuleEnclosureRole OBJECT-TYPE
	SYNTAX INTEGER {
	unknown(1),
	primary(2),
	secondary(3)
	}
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The VC enclosure role of the enclosure  VC module."
	::= { vcModuleObjects 5 }


vcModuleDomainPrimaryAddressIpv6 OBJECT-TYPE
	SYNTAX TransportAddress
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The IPv6 address of the primary VC module."
	::= { vcModuleObjects 7 }


vcSwitchMemParityErrorCount OBJECT-TYPE
	SYNTAX Counter
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Parity errors detected on switch's internal memory. This counter
is incremented whenever switch software detects and corrects
parity error."
	::= { vcModuleObjects 8 }


vcModulePortTable OBJECT-TYPE
	SYNTAX SEQUENCE OF VcModulePortEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A table that contains VC specific information about every
port that is associated with this bridge."
	::= { vcModuleObjects 6 }


vcModulePortEntry OBJECT-TYPE
	SYNTAX VcModulePortEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "VC specific information for each port of the bridge."
	INDEX { vcModulePort  }

	::= { vcModulePortTable 1 }

vcModulePortEntry ::=
	SEQUENCE {
		vcModulePort Integer32,
		vcModulePortIfIndex InterfaceIndex,
		vcModulePortBpduLoopStatus VcModulePortBpduLoopStatus,
		vcModulePortProtectionStatus VcModulePortProtectionStatus
		}

vcModulePort OBJECT-TYPE
	SYNTAX INTEGER (1..65535)
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The port number of the port for which this entry
contains management information."
	::= { vcModulePortEntry 1 }


vcModulePortIfIndex OBJECT-TYPE
	SYNTAX InterfaceIndex
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The value of the instance of the ifIndex object,
defined in IF-MIB, for the interface corresponding
to this port. A zero value indicates ifIndex is not available."
	::= { vcModulePortEntry 2 }


vcModulePortBpduLoopStatus OBJECT-TYPE
	SYNTAX INTEGER {
	ok(1),
	loop-dectected(2)
	}
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The BPDU loop detection status for this port."
	::= { vcModulePortEntry 3 }


vcModulePortProtectionStatus OBJECT-TYPE
	SYNTAX INTEGER {
	ok(1),
	pause-flood-detected(2),
	in-pause-condition(3)
	}
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The port protection status for this port."
	::= { vcModulePortEntry 4 }


vcModuleMIBNotificationPrefix OBJECT IDENTIFIER ::= { vcModuleMIB 2 }

vcModuleMIBNotifications OBJECT IDENTIFIER ::= { vcModuleMIBNotificationPrefix 0 }

vcModuleMIBNotificationObjects OBJECT IDENTIFIER ::= { vcModuleMIBNotificationPrefix 1 }

vcModuleMIBConformance OBJECT IDENTIFIER ::= { vcModuleMIB 3 }

vcModuleMIBCompliances OBJECT IDENTIFIER ::= { vcModuleMIBConformance 1 }

vcModuleMIBGroups OBJECT IDENTIFIER ::= { vcModuleMIBConformance 2 }

vcModuleGroup OBJECT IDENTIFIER ::= { vcModuleMIBGroups 1 }

vcModPortThresholdNotificationsGroup OBJECT IDENTIFIER ::= { vcModuleMIBGroups 2 }

vcModPortStatusNotificationsGroup OBJECT IDENTIFIER ::= { vcModuleMIBGroups 3 }

vcModuleDomainRoleChange TRAP-TYPE
	ENTERPRISE vcModuleMIBNotificationPrefix
	VARIABLES { vcModuleRole }

	--#SEVERITY INFORMATIONAL
DESCRIPTION "The VCM role of the VC module has changed."
	::= 1


vcSwitchMemParityErrorEvent TRAP-TYPE
	ENTERPRISE vcModuleMIBNotificationPrefix
	VARIABLES { vcSwitchMemParityErrorCount }

	--#SEVERITY INFORMATIONAL
DESCRIPTION "The switch hardware has detected a parity error. The parity error
is automatically corrected."
	::= 2


vcModPortInputUtilizationUp TRAP-TYPE
	ENTERPRISE vcModuleMIBNotificationPrefix
	VARIABLES { ifIndex }

	--#SEVERITY WARNING
DESCRIPTION "The port input utilization rate has exceeded high threshold.

The input line utilization on a port has exceeded its threshold
for longer than the threshold averaging period. The ifIndex
is the index of the affected port in ifTable."
	::= 11


vcModPortInputUtilizationDown TRAP-TYPE
	ENTERPRISE vcModuleMIBNotificationPrefix
	VARIABLES { ifIndex }

	--#SEVERITY INFORMATIONAL
DESCRIPTION "The port input utilization rate has dropped below low watermark.

The input line utilization on a port has dropped below its low 
watermark for longer than the threshold averaging period. The ifIndex
is the index of the affected port in ifTable."
	::= 12


vcModPortOutputUtilizationUp TRAP-TYPE
	ENTERPRISE vcModuleMIBNotificationPrefix
	VARIABLES { ifIndex }

	--#SEVERITY WARNING
DESCRIPTION "The port output utilization rate has exceeded high threshold.

The output line utilization on a port has exceeded its high watermark
for longer than the threshold averaging period. The ifIndex
is the index of the affected port in ifTable."
	::= 13


vcModPortOutputUtilizationDown TRAP-TYPE
	ENTERPRISE vcModuleMIBNotificationPrefix
	VARIABLES { ifIndex }

	--#SEVERITY INFORMATIONAL
DESCRIPTION "The port output utilization rate has dropped below low watermark.

The output line utilization on a port has dropped below its low watermark
for longer than the threshold averaging period. The ifIndex
is the index of the affected port in ifTable."
	::= 14


vcModPortInputErrorsUp TRAP-TYPE
	ENTERPRISE vcModuleMIBNotificationPrefix
	VARIABLES { ifIndex, ifInErrors }

	--#SEVERITY WARNING
DESCRIPTION "The input error count on a port has exceeded high watermark.

The input error count on a port has exceeded its high watermark for
longer than the error averaging period. The port is identified by
ifIndex in ifTable."
	::= 15


vcModPortInputErrorsDown TRAP-TYPE
	ENTERPRISE vcModuleMIBNotificationPrefix
	VARIABLES { ifIndex, ifInErrors }

	--#SEVERITY INFORMATIONAL
DESCRIPTION "The input error count on a port has dropped below low watermark.

The input error count on a port has dropped below its low watermark for
longer than the error averaging period. The port is identified by
ifIndex in ifTable."
	::= 16


vcModPortOutputErrorsUp TRAP-TYPE
	ENTERPRISE vcModuleMIBNotificationPrefix
	VARIABLES { ifIndex, ifOutErrors }

	--#SEVERITY WARNING		 
DESCRIPTION "The output error count on a port has exceeded its high watermark.

The output error count on a port has exceeded its high watermark for
longer than the error averaging period. The port is identified by
ifIndex in ifTable."
	::= 17


vcModPortOutputErrorsDown TRAP-TYPE
	ENTERPRISE vcModuleMIBNotificationPrefix
	VARIABLES { ifIndex, ifOutErrors }

	--#SEVERITY INFORMATIONAL
DESCRIPTION "The output error count on a port has dropped below its low watermark.

The output error count on a port has dropped below its low watermark for
longer than the error averaging period. The port is identified by
ifIndex in ifTable."
	::= 18


vcModPortBpduLoopDetected TRAP-TYPE
	ENTERPRISE vcModuleMIBNotificationPrefix
	VARIABLES { ifIndex, vcModulePort, vcModulePortBpduLoopStatus }

	--#SEVERITY CRITICAL
DESCRIPTION "A BPDU loop condition is detected on this port.

If the port is configured for loop protection, the port is 
disabled to protect against network loops. The port remains disabled
until administrative action is taken."
	::= 19


vcModPortBpduLoopCleared TRAP-TYPE
	ENTERPRISE vcModuleMIBNotificationPrefix
	VARIABLES { ifIndex, vcModulePort, vcModulePortBpduLoopStatus }

	--#SEVERITY INFORMATIONAL
DESCRIPTION "A previous BPDU loop condition is cleared.

This trap is only sent when the agent detects transition from 'loop
detected' state to 'ok' state on a given port."
	::= 20


vcModPortProtectionConditionDetected TRAP-TYPE
	ENTERPRISE vcModuleMIBNotificationPrefix
	VARIABLES { ifIndex, vcModulePort, vcModulePortProtectionStatus }

	--#SEVERITY CRITICAL
DESCRIPTION "A port protection condition is detected on this port.

If the new port protection status is a value other than ok,
the port may be disabled to protect the VC module from further
service degradation."
	::= 21


vcModPortProtectionConditionCleared TRAP-TYPE
	ENTERPRISE vcModuleMIBNotificationPrefix
	VARIABLES { ifIndex, vcModulePort, vcModulePortProtectionStatus }

	--#SEVERITY INFORMATIONAL
DESCRIPTION "Port is recovered from port protection codition.

The port is recovered from port protection condition to normal
operational state."
	::= 22


END

