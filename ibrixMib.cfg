#-MIBFILE: ibrixMib.mib

IBRIX-MIB DEFINITIONS ::= BEGIN


DisplayString ::=
	OCTET STRING (SIZE(0..255))

PhysAddress ::=
	OCTET STRING

MacAddress ::=
	OCTET STRING (SIZE(6))

TruthValue ::=
	INTEGER {
	true(1),
	false(2)
	}

TestAndIncr ::=
	INTEGER (0..2147483647)

AutonomousType ::=
	OBJECT IDENTIFIER

InstancePointer ::=
	OBJECT IDENTIFIER

VariablePointer ::=
	OBJECT IDENTIFIER

RowPointer ::=
	OBJECT IDENTIFIER

RowStatus ::=
	INTEGER {
	active(1),
	notInService(2),
	notReady(3),
	createAndGo(4),
	createAndWait(5),
	destroy(6)
	}

TimeStamp ::=
	TimeTicks

TimeInterval ::=
	INTEGER (0..2147483647)

DateAndTime ::=
	OCTET STRING (SIZE(8|11))

StorageType ::=
	INTEGER {
	other(1),
	volatile(2),
	nonVolatile(3),
	permanent(4),
	readOnly(5)
	}

TDomain ::=
	OBJECT IDENTIFIER

TAddress ::=
	OCTET STRING (SIZE(1..255))

YesNoValue ::=
	OCTET STRING (SIZE(0..3))

DataSegregationType ::=
	OCTET STRING (SIZE(0..5))

ibrix OBJECT IDENTIFIER ::= { enterprises 18997 }

ibrixMibs OBJECT IDENTIFIER ::= { ibrix 1 }

ibrixEvents OBJECT IDENTIFIER ::= { ibrix 2 }

ibrixEventsV2 OBJECT IDENTIFIER ::= { ibrixEvents 0 }

ibrixGroups OBJECT IDENTIFIER ::= { ibrix 3 }

ibrixEventsGroups OBJECT IDENTIFIER ::= { ibrix 4 }

fileSystemTable OBJECT-TYPE
	SYNTAX SEQUENCE OF FileSystemEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "IBRIX File Systems"
	::= { ibrixMibs 1 }


fileSystemEntry OBJECT-TYPE
	SYNTAX FileSystemEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Entry for one File System in a cluster"
	INDEX { IMPLIED fsName  }

	::= { fileSystemTable 1 }

fileSystemEntry ::=
	SEQUENCE {
		fsName DisplayString,
		fsSegment Unsigned32,
		fsMount INTEGER,
		fsOriginFsName DisplayString,
		fsTotalBlocks Counter64,
		fsFreeBlocks Counter64,
		fsFreeUserBlocks Counter64,
		fsUsedUserBlocks Counter64,
		fsUsedBlocks Counter64,
		fsMaxFiles Counter64,
		fsUsedFiles Counter64,
		fsFreeFiles Counter64
		}

fsName OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "File System name"
	::= { fileSystemEntry 1 }


fsSegment OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Number of segments in this File System"
	::= { fileSystemEntry 2 }


fsMount OBJECT-TYPE
	SYNTAX INTEGER {
	mounted(1),
	unmounted(2)
	}
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Mount status of the File System"
	::= { fileSystemEntry 3 }


fsOriginFsName OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Origin File System name for snapshot FS"
	::= { fileSystemEntry 4 }


fsTotalBlocks OBJECT-TYPE
	SYNTAX Counter
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Total blocks in KB"
	::= { fileSystemEntry 5 }


fsFreeBlocks OBJECT-TYPE
	SYNTAX Counter
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Total free blocks in KB"
	::= { fileSystemEntry 6 }


fsFreeUserBlocks OBJECT-TYPE
	SYNTAX Counter
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Total free user blocks in KB"
	::= { fileSystemEntry 7 }


fsUsedUserBlocks OBJECT-TYPE
	SYNTAX Counter
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Percent of used user blocks"
	::= { fileSystemEntry 8 }


fsUsedBlocks OBJECT-TYPE
	SYNTAX Counter
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Total used blocks in KB"
	::= { fileSystemEntry 9 }


fsMaxFiles OBJECT-TYPE
	SYNTAX Counter
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Maximum number of files"
	::= { fileSystemEntry 10 }


fsUsedFiles OBJECT-TYPE
	SYNTAX Counter
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Number of used files"
	::= { fileSystemEntry 11 }


fsFreeFiles OBJECT-TYPE
	SYNTAX Counter
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Number of free files"
	::= { fileSystemEntry 12 }


fsGroup OBJECT IDENTIFIER ::= { ibrixGroups 1 }

logicalVolumeTable OBJECT-TYPE
	SYNTAX SEQUENCE OF LogicalVolumeEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Logical Volume (LV) objects"
	::= { ibrixMibs 2 }


logicalVolumeEntry OBJECT-TYPE
	SYNTAX LogicalVolumeEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Entry for one Logical Volume"
	INDEX { lvName  }

	::= { logicalVolumeTable 1 }

logicalVolumeEntry ::=
	SEQUENCE {
		lvName DisplayString,
		lvSize Unsigned32,
		lvFsName DisplayString,
		lvSegment Unsigned32,
		lvVgName DisplayString
		}

lvName OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Logical Volume name"
	::= { logicalVolumeEntry 1 }


lvSize OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Logical Volume size (MB)"
	::= { logicalVolumeEntry 2 }


lvFsName OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "FS name this LV belongs to"
	::= { logicalVolumeEntry 3 }


lvSegment OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Logical Volume segment number"
	::= { logicalVolumeEntry 4 }


lvVgName OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Volume Group name"
	::= { logicalVolumeEntry 5 }


lvGroup OBJECT IDENTIFIER ::= { ibrixGroups 2 }

volumeGroupTable OBJECT-TYPE
	SYNTAX SEQUENCE OF VolumeGroupEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Volume Group objects"
	::= { ibrixMibs 3 }


volumeGroupEntry OBJECT-TYPE
	SYNTAX VolumeGroupEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Entry for one Volume Group"
	INDEX { vgName  }

	::= { volumeGroupTable 1 }

volumeGroupEntry ::=
	SEQUENCE {
		vgName DisplayString,
		vgSize Unsigned32,
		vgFree Unsigned32,
		vgUsed Unsigned32,
		vgLvName DisplayString,
		vgPvName DisplayString
		}

vgName OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Volume Group name"
	::= { volumeGroupEntry 1 }


vgSize OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Volume Group size (MB)"
	::= { volumeGroupEntry 2 }


vgFree OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Volume Group free size (MB)"
	::= { volumeGroupEntry 3 }


vgUsed OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Percent of used storage in VG"
	::= { volumeGroupEntry 4 }


vgLvName OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Logiical Volume name"
	::= { volumeGroupEntry 5 }


vgPvName OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Physical Volume name"
	::= { volumeGroupEntry 6 }


vgGroup OBJECT IDENTIFIER ::= { ibrixGroups 3 }

physicalVolumeTable OBJECT-TYPE
	SYNTAX SEQUENCE OF PhysicalVolumeEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Physical Volume objects"
	::= { ibrixMibs 4 }


physicalVolumeEntry OBJECT-TYPE
	SYNTAX PhysicalVolumeEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Entry for one Physical Volume"
	INDEX { pvNumber  }

	::= { physicalVolumeTable 1 }

physicalVolumeEntry ::=
	SEQUENCE {
		pvNumber Unsigned32,
		pvSize Unsigned32,
		pvVgName DisplayString
		}

pvNumber OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Physical Volume number"
	::= { physicalVolumeEntry 1 }


pvSize OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Physical Volume size (MB)"
	::= { physicalVolumeEntry 2 }


pvVgName OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "VG name this PV belongs to.
This object is not available in IBRIX 1.3"
	::= { physicalVolumeEntry 3 }


pvGroup OBJECT IDENTIFIER ::= { ibrixGroups 4 }

segmentServerTable OBJECT-TYPE
	SYNTAX SEQUENCE OF SegmentServerEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Segment Server objects"
	::= { ibrixMibs 5 }


segmentServerEntry OBJECT-TYPE
	SYNTAX SegmentServerEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Entry for one Segment Server"
	INDEX { IMPLIED ssName  }

	::= { segmentServerTable 1 }

segmentServerEntry ::=
	SEQUENCE {
		ssName DisplayString,
		ssState DisplayString,
		ssUptime DisplayString,
		ssFsVersion DisplayString,
		ssIadIasVersion DisplayString,
		ssIadFsVersion DisplayString,
		ssKernelVersion DisplayString,
		ssCpuUtilization Gauge32,
		ssLoad DisplayString,
		ssDiskIo Unsigned32,
		ssNetworkIo Unsigned32,
		ssLoadAvg1 Gauge32,
		ssLoadAvg5 Gauge32,
		ssLoadAvg15 Gauge32
		}

ssName OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Segment Server name"
	::= { segmentServerEntry 1 }


ssState OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Segment Server state"
	::= { segmentServerEntry 2 }


ssUptime OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Segment Server uptime"
	::= { segmentServerEntry 3 }


ssFsVersion OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Segment Server FS version"
	::= { segmentServerEntry 4 }


ssIadIasVersion OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Segment Server Iad/Ias version"
	::= { segmentServerEntry 5 }


ssIadFsVersion OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Segment Server Iad/Fs version"
	::= { segmentServerEntry 6 }


ssKernelVersion OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Segment Server kernel version"
	::= { segmentServerEntry 7 }


ssCpuUtilization OBJECT-TYPE
	SYNTAX Gauge
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Segment Server percent CPU utilization"
	::= { segmentServerEntry 8 }


ssLoad OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Segment Server load average in 1, 5, 15 minutes"
	::= { segmentServerEntry 9 }


ssDiskIo OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Segment Server disk IO in KBits"
	::= { segmentServerEntry 10 }


ssNetworkIo OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Segment Server network IO in KBits"
	::= { segmentServerEntry 11 }


ssLoadAvg1 OBJECT-TYPE
	SYNTAX Gauge
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Segment Server load average for a minute"
	::= { segmentServerEntry 12 }


ssLoadAvg5 OBJECT-TYPE
	SYNTAX Gauge
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Segment Server load average for a 5 minutes"
	::= { segmentServerEntry 13 }


ssLoadAvg15 OBJECT-TYPE
	SYNTAX Gauge
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Segment Server load average for 15 minutes"
	::= { segmentServerEntry 14 }


segmentServerGroup OBJECT IDENTIFIER ::= { ibrixGroups 5 }

ssIOStatsTable OBJECT-TYPE
	SYNTAX SEQUENCE OF SsIOStatsEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Segment server I/O statistics objects"
	::= { ibrixMibs 6 }


ssIOStatsEntry OBJECT-TYPE
	SYNTAX SsIOStatsEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Entry of I/O statistics for a segment server"
	INDEX { IMPLIED ssName  }

	::= { ssIOStatsTable 1 }

ssIOStatsEntry ::=
	SEQUENCE {
		ssIOBytesRead Gauge32,
		ssIONumReads Counter64,
		ssIOAvgMsReads Gauge32,
		ssIOBytesWrite Gauge32,
		ssIONumWrites Counter64,
		ssIOAvgMsWrites Gauge32
		}

ssIOBytesRead OBJECT-TYPE
	SYNTAX Gauge
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Number of bytes read in KB"
	::= { ssIOStatsEntry 1 }


ssIONumReads OBJECT-TYPE
	SYNTAX Counter
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Number of reads issued"
	::= { ssIOStatsEntry 2 }


ssIOAvgMsReads OBJECT-TYPE
	SYNTAX Gauge
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Average number of milliseconds per read multipled by 100. Ex: 0.14 * 100 = 14"
	::= { ssIOStatsEntry 3 }


ssIOBytesWrite OBJECT-TYPE
	SYNTAX Gauge
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Number of bytes written in KB"
	::= { ssIOStatsEntry 4 }


ssIONumWrites OBJECT-TYPE
	SYNTAX Counter
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Number of writes issued"
	::= { ssIOStatsEntry 5 }


ssIOAvgMsWrites OBJECT-TYPE
	SYNTAX Gauge
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Average number of milliseconds per write multipled by 100. Ex: 0.14 * 100 = 14"
	::= { ssIOStatsEntry 6 }


ssIOStatsGroup OBJECT IDENTIFIER ::= { ibrixGroups 6 }

ssNetStatsTable OBJECT-TYPE
	SYNTAX SEQUENCE OF SsNetStatsEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Segment server network statistics objects"
	::= { ibrixMibs 7 }


ssNetStatsEntry OBJECT-TYPE
	SYNTAX SsNetStatsEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Entry of network statistics for a segment server"
	INDEX { IMPLIED ssName  }

	::= { ssNetStatsTable 1 }

ssNetStatsEntry ::=
	SEQUENCE {
		ssNetInBytes Gauge32,
		ssNetInIOs Gauge32,
		ssNetOutBytes Gauge32,
		ssNetOutIOs Gauge32
		}

ssNetInBytes OBJECT-TYPE
	SYNTAX Gauge
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Number of network bytes read in KB"
	::= { ssNetStatsEntry 1 }


ssNetInIOs OBJECT-TYPE
	SYNTAX Gauge
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Number of network input I/Os in KB"
	::= { ssNetStatsEntry 2 }


ssNetOutBytes OBJECT-TYPE
	SYNTAX Gauge
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Number of network bytes written in KB"
	::= { ssNetStatsEntry 3 }


ssNetOutIOs OBJECT-TYPE
	SYNTAX Gauge
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Number of network output I/Os in KB"
	::= { ssNetStatsEntry 4 }


ssNetStatsGroup OBJECT IDENTIFIER ::= { ibrixGroups 7 }

ssMemStatsTable OBJECT-TYPE
	SYNTAX SEQUENCE OF SsMemStatsEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Segment server memory statistics objects"
	::= { ibrixMibs 8 }


ssMemStatsEntry OBJECT-TYPE
	SYNTAX SsMemStatsEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Entry of memory statistics for a segment server"
	INDEX { IMPLIED ssName  }

	::= { ssMemStatsTable 1 }

ssMemStatsEntry ::=
	SEQUENCE {
		ssMemTotal Unsigned32,
		ssMemUsed Gauge32,
		ssMemFree Gauge32,
		ssMemSwapTotal Unsigned32,
		ssMemSwapUsed Gauge32,
		ssMemSwapFree Gauge32,
		ssMemBuffers Gauge32,
		ssMemCached Gauge32
		}

ssMemTotal OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Segment Server total memory in KBytes"
	::= { ssMemStatsEntry 1 }


ssMemUsed OBJECT-TYPE
	SYNTAX Gauge
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Segment Server used memory in KBytes"
	::= { ssMemStatsEntry 2 }


ssMemFree OBJECT-TYPE
	SYNTAX Gauge
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Segment Server free memory in KBytes"
	::= { ssMemStatsEntry 3 }


ssMemSwapTotal OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Segment Server total swap memory in KBytes"
	::= { ssMemStatsEntry 4 }


ssMemSwapUsed OBJECT-TYPE
	SYNTAX Gauge
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Segment Server used swap memory in KBytes"
	::= { ssMemStatsEntry 5 }


ssMemSwapFree OBJECT-TYPE
	SYNTAX Gauge
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Segment Server free swap memory in KBytes"
	::= { ssMemStatsEntry 6 }


ssMemBuffers OBJECT-TYPE
	SYNTAX Gauge
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Segment Server memory in buffer cache in KBytes"
	::= { ssMemStatsEntry 7 }


ssMemCached OBJECT-TYPE
	SYNTAX Gauge
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Segment Server memory in pagecache minus SwapCache in KBytes"
	::= { ssMemStatsEntry 8 }


ssMemStatsGroup OBJECT IDENTIFIER ::= { ibrixGroups 8 }

ssCpuStatsTable OBJECT-TYPE
	SYNTAX SEQUENCE OF SsCpuStatsEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Segment server memory statistics objects"
	::= { ibrixMibs 9 }


ssCpuStatsEntry OBJECT-TYPE
	SYNTAX SsCpuStatsEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Entry of memory statistics for a segment server"
	INDEX { IMPLIED ssName  }

	::= { ssCpuStatsTable 1 }

ssCpuStatsEntry ::=
	SEQUENCE {
		ssCpuStatsSystem Gauge32,
		ssCpuStatsUser Gauge32,
		ssCpuStatsNice Gauge32,
		ssCpuStatsIdle Gauge32,
		ssCpuStatsIOWait Gauge32,
		ssCpuStatsIOIrq Gauge32,
		ssCpuStatsIOSIrq Gauge32
		}

ssCpuStatsSystem OBJECT-TYPE
	SYNTAX Gauge
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Segment Server percent system CPU"
	::= { ssCpuStatsEntry 1 }


ssCpuStatsUser OBJECT-TYPE
	SYNTAX Gauge
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Segment Server percent user CPU"
	::= { ssCpuStatsEntry 2 }


ssCpuStatsNice OBJECT-TYPE
	SYNTAX Gauge
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Segment Server percent nice CPU"
	::= { ssCpuStatsEntry 3 }


ssCpuStatsIdle OBJECT-TYPE
	SYNTAX Gauge
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Segment Server percent idle time"
	::= { ssCpuStatsEntry 4 }


ssCpuStatsIOWait OBJECT-TYPE
	SYNTAX Gauge
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Segment Server percent time waiting for I/O"
	::= { ssCpuStatsEntry 5 }


ssCpuStatsIOIrq OBJECT-TYPE
	SYNTAX Gauge
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Segment Server percent time servicing interupts"
	::= { ssCpuStatsEntry 6 }


ssCpuStatsIOSIrq OBJECT-TYPE
	SYNTAX Gauge
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Segment Server percent time servicing soft irqs"
	::= { ssCpuStatsEntry 7 }


ssCpuStatsGroup OBJECT IDENTIFIER ::= { ibrixGroups 9 }

ssNfsStatsTable OBJECT-TYPE
	SYNTAX SEQUENCE OF SsNfsStatsEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Segment server memory statistics objects"
	::= { ibrixMibs 10 }


ssNfsStatsEntry OBJECT-TYPE
	SYNTAX SsNfsStatsEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Entry of memory statistics for a segment server"
	INDEX { IMPLIED ssName  }

	::= { ssNfsStatsTable 1 }

ssNfsStatsEntry ::=
	SEQUENCE {
		ssNfsStatsNull Gauge32,
		ssNfsStatsGetattr Gauge32,
		ssNfsStatsSetattr Gauge32,
		ssNfsStatsLookup Gauge32,
		ssNfsStatsAccess Gauge32,
		ssNfsStatsReadlink Gauge32,
		ssNfsStatsRead Gauge32,
		ssNfsStatsWrite Gauge32,
		ssNfsStatsCreate Gauge32,
		ssNfsStatsMakedir Gauge32,
		ssNfsStatsSymlink Gauge32,
		ssNfsStatsMknod Gauge32,
		ssNfsStatsRemove Gauge32,
		ssNfsStatsRmdir Gauge32,
		ssNfsStatsRename Gauge32,
		ssNfsStatsLink Gauge32,
		ssNfsStatsReaddir Gauge32,
		ssNfsStatsReaddirPl Gauge32,
		ssNfsStatsFsstat Gauge32,
		ssNfsStatsFsinfo Gauge32,
		ssNfsStatsPathconf Gauge32,
		ssNfsStatsCommit Gauge32
		}

ssNfsStatsNull OBJECT-TYPE
	SYNTAX Gauge
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Segment Server nfs null"
	::= { ssNfsStatsEntry 1 }


ssNfsStatsGetattr OBJECT-TYPE
	SYNTAX Gauge
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Segment Server nfs getattr"
	::= { ssNfsStatsEntry 2 }


ssNfsStatsSetattr OBJECT-TYPE
	SYNTAX Gauge
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Segment Server nfs setattr"
	::= { ssNfsStatsEntry 3 }


ssNfsStatsLookup OBJECT-TYPE
	SYNTAX Gauge
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Segment Server nfs lookup"
	::= { ssNfsStatsEntry 4 }


ssNfsStatsAccess OBJECT-TYPE
	SYNTAX Gauge
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Segment Server nfs access"
	::= { ssNfsStatsEntry 5 }


ssNfsStatsReadlink OBJECT-TYPE
	SYNTAX Gauge
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Segment Server nfs readlink"
	::= { ssNfsStatsEntry 6 }


ssNfsStatsRead OBJECT-TYPE
	SYNTAX Gauge
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Segment Server nfs read"
	::= { ssNfsStatsEntry 7 }


ssNfsStatsWrite OBJECT-TYPE
	SYNTAX Gauge
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Segment Server nfs write"
	::= { ssNfsStatsEntry 8 }


ssNfsStatsCreate OBJECT-TYPE
	SYNTAX Gauge
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Segment Server nfs create"
	::= { ssNfsStatsEntry 9 }


ssNfsStatsMakedir OBJECT-TYPE
	SYNTAX Gauge
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Segment Server nfs makedir"
	::= { ssNfsStatsEntry 10 }


ssNfsStatsSymlink OBJECT-TYPE
	SYNTAX Gauge
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Segment Server nfs symlink"
	::= { ssNfsStatsEntry 11 }


ssNfsStatsMknod OBJECT-TYPE
	SYNTAX Gauge
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Segment Server nfs mknod"
	::= { ssNfsStatsEntry 12 }


ssNfsStatsRemove OBJECT-TYPE
	SYNTAX Gauge
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Segment Server nfs remove"
	::= { ssNfsStatsEntry 13 }


ssNfsStatsRmdir OBJECT-TYPE
	SYNTAX Gauge
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Segment Server nfs rmdir"
	::= { ssNfsStatsEntry 14 }


ssNfsStatsRename OBJECT-TYPE
	SYNTAX Gauge
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Segment Server nfs rename"
	::= { ssNfsStatsEntry 15 }


ssNfsStatsLink OBJECT-TYPE
	SYNTAX Gauge
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Segment Server nfs link"
	::= { ssNfsStatsEntry 16 }


ssNfsStatsReaddir OBJECT-TYPE
	SYNTAX Gauge
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Segment Server nfs readdir"
	::= { ssNfsStatsEntry 17 }


ssNfsStatsReaddirPl OBJECT-TYPE
	SYNTAX Gauge
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Segment Server nfs readdirplus"
	::= { ssNfsStatsEntry 18 }


ssNfsStatsFsstat OBJECT-TYPE
	SYNTAX Gauge
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Segment Server nfs fsstat"
	::= { ssNfsStatsEntry 19 }


ssNfsStatsFsinfo OBJECT-TYPE
	SYNTAX Gauge
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Segment Server nfs fsinfo"
	::= { ssNfsStatsEntry 20 }


ssNfsStatsPathconf OBJECT-TYPE
	SYNTAX Gauge
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Segment Server nfs pathconf"
	::= { ssNfsStatsEntry 21 }


ssNfsStatsCommit OBJECT-TYPE
	SYNTAX Gauge
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Segment Server nfs commit"
	::= { ssNfsStatsEntry 22 }


ssNfsStatsGroup OBJECT IDENTIFIER ::= { ibrixGroups 10 }

fsSegmentTable OBJECT-TYPE
	SYNTAX SEQUENCE OF FsSegmentEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "File system segment objects"
	::= { ibrixMibs 11 }


fsSegmentEntry OBJECT-TYPE
	SYNTAX FsSegmentEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Entry of file system segments. 
One entry exists per file system and segment"
	INDEX { fsSegmentNum , IMPLIED fsSegmentFsname }

	::= { fsSegmentTable 1 }

fsSegmentEntry ::=
	SEQUENCE {
		fsSegmentFsname DisplayString,
		fsSegmentNum Unsigned32,
		fsSegmentOwner DisplayString,
		fsSegmentLvName DisplayString,
		fsSegmentBlkSize Unsigned32,
		fsSegmentBlksTot Unsigned32,
		fsSegmentBlksFree Gauge32,
		fsSegmentBlksAvail Gauge32,
		fsSegmentFilesMax Unsigned32,
		fsSegmentFilesFree Gauge32,
		fsSegmentPctUsed Gauge32,
		fsSegmentType DataSegregationType,
		fsSegmentBackupOwner DisplayString,
		fsSegmentOnBackup YesNoValue,
		fsSegmentInFsck YesNoValue,
		fsSegmentInReplicate YesNoValue,
		fsSegmentInRebalance YesNoValue
		}

fsSegmentFsname OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "File system name the segment belongs to"
	::= { fsSegmentEntry 1 }


fsSegmentNum OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Number of segments in file system"
	::= { fsSegmentEntry 2 }


fsSegmentOwner OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Segment owner"
	::= { fsSegmentEntry 3 }


fsSegmentLvName OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Segment logical volume name"
	::= { fsSegmentEntry 4 }


fsSegmentBlkSize OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "File system block size"
	::= { fsSegmentEntry 5 }


fsSegmentBlksTot OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Number of blocks in segment in 4K"
	::= { fsSegmentEntry 6 }


fsSegmentBlksFree OBJECT-TYPE
	SYNTAX Gauge
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Nummber of free blocks in segment in 4K"
	::= { fsSegmentEntry 7 }


fsSegmentBlksAvail OBJECT-TYPE
	SYNTAX Gauge
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Numer of available blocks in segment in 4K"
	::= { fsSegmentEntry 8 }


fsSegmentFilesMax OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Maximum number of files that can be allocated in segment in 1K"
	::= { fsSegmentEntry 9 }


fsSegmentFilesFree OBJECT-TYPE
	SYNTAX Gauge
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Number of free files in segment in 1K"
	::= { fsSegmentEntry 10 }


fsSegmentPctUsed OBJECT-TYPE
	SYNTAX Gauge
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Percentage of segment used"
	::= { fsSegmentEntry 11 }


fsSegmentType OBJECT-TYPE
	SYNTAX OCTET STRING (SIZE(0..5))
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Segment data segregation type"
	::= { fsSegmentEntry 12 }


fsSegmentBackupOwner OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Segment backup owner"
	::= { fsSegmentEntry 13 }


fsSegmentOnBackup OBJECT-TYPE
	SYNTAX OCTET STRING (SIZE(0..3))
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Segment is currently on its backup server"
	::= { fsSegmentEntry 14 }


fsSegmentInFsck OBJECT-TYPE
	SYNTAX OCTET STRING (SIZE(0..3))
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Segment is currently in fsck"
	::= { fsSegmentEntry 15 }


fsSegmentInReplicate OBJECT-TYPE
	SYNTAX OCTET STRING (SIZE(0..3))
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Segment is part of a file system being replicated"
	::= { fsSegmentEntry 16 }


fsSegmentInRebalance OBJECT-TYPE
	SYNTAX OCTET STRING (SIZE(0..3))
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Segment is being rebalanced"
	::= { fsSegmentEntry 17 }


fsSegmentGroup OBJECT IDENTIFIER ::= { ibrixGroups 11 }

cfrJobTable OBJECT-TYPE
	SYNTAX SEQUENCE OF CfrJobEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A CFR job"
	::= { ibrixMibs 13 }


cfrJobEntry OBJECT-TYPE
	SYNTAX CfrJobEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Entry of a CFR job"
	INDEX { IMPLIED cfrJobName  }

	::= { cfrJobTable 1 }

cfrJobEntry ::=
	SEQUENCE {
		cfrJobName DisplayString,
		cfrJobId Counter64,
		cfrJobSrcCluster DisplayString,
		cfrJobSrcFsName DisplayString,
		cfrJobSrcPath DisplayString,
		cfrJobTgtCluster DisplayString,
		cfrJobTgtFsName DisplayString,
		cfrJobTgtPath DisplayString,
		cfrJobRunOnce YesNoValue,
		cfrJobIsActive YesNoValue,
		cfrJobErrorStatus INTEGER,
		cfrJobState DisplayString,
		cfrJobProcessedSize Gauge32,
		cfrJobQueueSize Gauge32
		}

cfrJobName OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Name of a cfr job"
	::= { cfrJobEntry 1 }


cfrJobId OBJECT-TYPE
	SYNTAX Counter
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Cfr job id"
	::= { cfrJobEntry 2 }


cfrJobSrcCluster OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Source cluster name"
	::= { cfrJobEntry 3 }


cfrJobSrcFsName OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Source file system name"
	::= { cfrJobEntry 4 }


cfrJobSrcPath OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Source path"
	::= { cfrJobEntry 5 }


cfrJobTgtCluster OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Target cluster name"
	::= { cfrJobEntry 6 }


cfrJobTgtFsName OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Target file system name"
	::= { cfrJobEntry 7 }


cfrJobTgtPath OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Target path"
	::= { cfrJobEntry 8 }


cfrJobRunOnce OBJECT-TYPE
	SYNTAX OCTET STRING (SIZE(0..3))
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Yes if the CFR job is assigned a specific task.
The job terminates automatically when the
task completes.  No if the CFR job runs 
indefinitely and stops only when asked to stop"
	::= { cfrJobEntry 9 }


cfrJobIsActive OBJECT-TYPE
	SYNTAX OCTET STRING (SIZE(0..3))
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Yes if CFR job is active, No if not active"
	::= { cfrJobEntry 10 }


cfrJobErrorStatus OBJECT-TYPE
	SYNTAX INTEGER {
	ok(0),
	error(1),
	partialError(2)
	}
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "CFR job error status.  Partial error indiates
some parts of the job encountered an error.
Error indicates the job as a whole encountered
errors"
	::= { cfrJobEntry 11 }


cfrJobState OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Job state is one of UNKNOWN, STOPPED, STARTING, RUNNING, STOPPING"
	::= { cfrJobEntry 12 }


cfrJobProcessedSize OBJECT-TYPE
	SYNTAX Gauge
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Number of files processed in K"
	::= { cfrJobEntry 13 }


cfrJobQueueSize OBJECT-TYPE
	SYNTAX Gauge
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Number of files remaining in the queue in K"
	::= { cfrJobEntry 14 }


cfrJobGroup OBJECT IDENTIFIER ::= { ibrixGroups 13 }

hardwareInformationTable OBJECT-TYPE
	SYNTAX SEQUENCE OF hardwareInformationEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Hardware Information - enumerates hardware information of subcomponents"
	::= { ibrixMibs 14 }


hardwareInformationEntry OBJECT-TYPE
	SYNTAX HardwareInformationEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Entry of Hardware Information"
	INDEX { IMPLIED hwProductSerialNumber  }

	::= { hardwareInformationTable 1 }

hardwareInformationEntry ::=
	SEQUENCE {
		SKUSerialNumber DisplayString,
		SKUProductNumber DisplayString,
		hwProductSerialNumber DisplayString,
		hwProductNumber DisplayString,
		hwProductUUID DisplayString,
		hwProductName DisplayString,
		hwProductNameAlias DisplayString,
		hwProductModelNumber DisplayString,
		hwProductSubType DisplayString,
		hwProductIpAddress DisplayString,
		hwProductIloIpAddress DisplayString,
		hwProductIloName DisplayString
		}

SKUSerialNumber OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "SKU Serial Number - encompassing X9000 SKU SN"
	::= { hardwareInformationEntry 1 }


SKUProductNumber OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "SKU Product Number - encompassing X9000 SKU PN "
	::= { hardwareInformationEntry 2 }


hwProductSerialNumber OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Product Serial Number"
	::= { hardwareInformationEntry 3 }


hwProductNumber OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Product Number"
	::= { hardwareInformationEntry 4 }


hwProductUUID OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Product UUID discovered from host"
	::= { hardwareInformationEntry 5 }


hwProductName OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Product Name"
	::= { hardwareInformationEntry 6 }


hwProductNameAlias OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Product Name Alias, generated by IBRIX Solution"
	::= { hardwareInformationEntry 7 }


hwProductModelNumber OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Product Model Number"
	::= { hardwareInformationEntry 8 }


hwProductSubType OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Product Sub Type"
	::= { hardwareInformationEntry 9 }


hwProductIpAddress OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Product Node IP Address"
	::= { hardwareInformationEntry 10 }


hwProductIloIpAddress OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Product ILO IP Address"
	::= { hardwareInformationEntry 11 }


hwProductIloName OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Product ILO Name"
	::= { hardwareInformationEntry 12 }


hardwareInformationGroup OBJECT IDENTIFIER ::= { ibrixGroups 14 }

solutionInformationGroup OBJECT IDENTIFIER ::= { ibrixGroups 15 }

solutionSerialNumber OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Serial number"
	::= { solutionInformationGroup 1 }


solutionModelNumber OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Model number"
	::= { solutionInformationGroup 2 }


solutionName OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Solution Name"
	::= { solutionInformationGroup 3 }


solutionProductNumber OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Solution Product Number"
	::= { solutionInformationGroup 4 }


solutionUUID OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "UUID to Uniquely Identify Solution"
	::= { solutionInformationGroup 5 }


solutionIpAddress OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "User IP Address - User VIF / Cluster VIF"
	::= { solutionInformationGroup 6 }


solutionSoftwareVersion OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Software Version generated by IBRIX"
	::= { solutionInformationGroup 7 }


solutionCustomerEntitlement OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Customer Entitlement Information"
	::= { solutionInformationGroup 8 }


solutionCountryCode OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Country Code"
	::= { solutionInformationGroup 9 }


solutionData1 OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Field reserved for future Use.
To be used for any additional info required about X9000 Solution"
	::= { solutionInformationGroup 10 }


solutionData2 OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Field reserved for future Use.
To be used for any additional info required about X9000 Solution"
	::= { solutionInformationGroup 11 }


ibrixGenericEventGroup OBJECT IDENTIFIER ::= { ibrixEventsGroups 2 }

eventTable OBJECT-TYPE
	SYNTAX SEQUENCE OF EventEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Ibrix Fusion last event"
	::= { ibrixEvents 1 }


eventEntry OBJECT-TYPE
	SYNTAX EventEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Entry for Ibrix Fusion event"
	INDEX { eventIndex  }

	::= { eventTable 1 }

eventEntry ::=
	SEQUENCE {
		eventIndex Unsigned32,
		eventType INTEGER,
		eventDescription DisplayString,
		eventUUID DisplayString,
		eventSolutionSerialNumber DisplayString,
		eventSolutionProductNumber DisplayString,
		eventSeverity INTEGER,
		eventOidValue OBJECT IDENTIFIER,
		eventText DisplayString,
		eventFRU DisplayString,
		eventCustomerEntitlement DisplayString
		}

eventIndex OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "counter of the last event since Fusion Manager restart"
	::= { eventEntry 1 }


eventType OBJECT-TYPE
	SYNTAX INTEGER {
	deviceMirrorFaulty(1),
	deviceMirrorOk(2),
	filesystemCreated(3),
	filesystemDeleted(4),
	filesystemSpaceFull(5),
	filesystemSpaceAvailable(6),
	filesystemMounted(7),
	filesystemUnmounted(8),
	filesystemOffline(9),
	filesystemQuotaGroupOverHard(10),
	filesystemQuotaGroupOverSoft(11),
	filesystemQuotaGroupSet(12),
	filesystemQuotaUserOverHard(13),
	filesystemQuotaUserOverSoft(14),
	filesystemQuotaUserSet(15),
	filesystemQuotaoffFailed(16),
	filesystemQuotaonFailed(17),
	filesystemSnapshotInvalid(18),
	hbaLinkDown(19),
	hbaLinkUp(20),
	iadDown(21),
	iadInitializing(22),
	iadUp(23),
	jobFailed(24),
	jobSucceeded(25),
	physicalvolumeAdded(26),
	physicalvolumeDeleted(27),
	segmentActivateFailed(28),
	segmentSpaceFull(29),
	segmentSpaceAvailable(30),
	segmentMigrated(31),
	segmentMissing(32),
	segmentRejected(33),
	serverDeleted(35),
	serverFailedback(36),
	serverFailedover(37),
	serverPowerDown(38),
	serverPowerUp(39),
	serverRegistered(40),
	serverStatusDown(41),
	serverStatusUp(42),
	serverUnreachable(43),
	serverCpuUsage(44),
	serverCpuNormal(45),
	vendorstorageCreated(46),
	vendorstorageDeleted(47),
	volumegroupCreated(48),
	volumegroupDeleted(49),
	filesystemQuotaGroupUnderHard(50),
	filesystemQuotaGroupUnderSoft(51),
	filesystemQuotaGroupUnset(52),
	filesystemQuotaUserUnderHard(53),
	filesystemQuotaUserUnderSoft(54),
	filesystemQuotaUserUnset(55),
	logicalvolumeActivateFailed(56),
	filesystemQuotaOn(57),
	filesystemQuotaOff(58),
	haFusionmanagerUp(59),
	haFusionmanagerDown(60),
	haFusionmanagerStarted(61),
	haStonithDown(62),
	haStonithUp(63),
	haStonithReset(64),
	haDisabled(65),
	haEnabled(66),
	haNodeStandbyOn(67),
	haNodeStandbyOff(68),
	haMalfunction(69),
	haFusionmanagerHealth(70),
	filesystemSpaceAlert(71),
	filesystemSpaceWarn(72),
	serverTemperatureSensorWarn(73),
	serverProcessorSensorWarn(74),
	serverVoltageSensorWarn(75),
	serverPowersupplySensorWarn(76),
	serverFanSensorWarn(77),
	serverMemorySensorWarn(78),
	cfrJobRunning(79),
	cfrJobStopped(80),
	nicUp(81),
	nicDown(82),
	hbaLinkAdded(83),
	hbaLinkRemoved(84),
	serverSensorMonitoringStarted(85),
	serverSensorMonitoringStopped(86),
	serverMonitoredSensorsStale(87),
	serverMonitoredSensorsActive(88),
	serverReachable(89),
	serverDeregistered(90),
	hostUnknown(91),
	hostKnown(92),
	nicAdded(93),
	nicRemoved(94),
	mirrorStateHealth(95),
	serverInfailover(96),
	serverTemperatureSensorAlert(97),
	serverTemperatureSensorNormal(98),
	serverProcessorSensorAlert(99),
	serverProcessorSensorNormal(100),
	serverVoltageSensorAlert(101),
	serverVoltageSensorNormal(102),
	serverPowersupplySensorAlert(103),
	serverPowersupplySensorNormal(104),
	serverFanSensorAlert(105),
	serverFanSensorNormal(106),
	serverMemorySensorAlert(107),
	serverMemorySensorNormal(108),
	serverUsingAlternateIp(109),
	serverUsingPrimaryIp(110),
	segmentAvailable(111),
	segmentUnavailable(112),
	segmentCreated(113),
	segmentDeleted(114),
	serverFailoverFailed(115),
	serverStatusInitializing(116),
	serverInfailback(117),
	serverFailbackFailed(118),
	serverDumpStarted(119),
	filesystemFilesFull(120),
	filesystemFilesAvailable(121),
	filesystemFilesAlert(122),
	filesystemFilesWarn(123),
	segmentFilesFull(124),
	segmentFilesAvailable(125),
	serverPartiallyFailedOver(126),
	serverPartiallyFailedBack(127),
	serverPowerDownFailed(128),
	serverPowerUpFailed(129),
	nfsStopFailed(130),
	nfsStartFailed(131),
	migratorStarting(132),
	migratorRunning(133),
	migratorStopping(134),
	migratorCompleted(135),
	migratorWorkerFailed(136),
	migratorAnalyzerFailed(137),
	migratorManualStop(138),
	migratorStoppedByFailover(139),
	migratorStoppedByFailback(140),
	migratorStoppedBySegmentMigration(141),
	migratorStoppedByFsExpansion(142),
	migratorStoppedByReplicator(143),
	cfrJobDomainScanStarted(144),
	cfrJobDomainScanEnded(145),
	cfrJobConnectionLost(146),
	cfrJobConnectionEstablished(147),
	serverFailedoverWithErrors(148),
	serverFailedbackWithErrors(149),
	cfrJobLogSpaceLow(150),
	cfrJobTargetFilesystemFull(151),
	shRunning(152),
	shCompleted(153),
	shFailed(154),
	shManualStop(155),
	migratorStartFailed(156),
	migratorStopFailed(157),
	snapshotSegementSpaceAvailable(158),
	snapshotSegmentSpaceWarn(159),
	snapshotSegmentSpaceAlert(160),
	snapshotSegmentSpaceFull(161),
	snapshotSegmentInvalid(162),
	snapshotCreated(163),
	snapshotDeleted(164),
	segmentSpaceWarn(165),
	segmentSpaceAlert(166),
	segmentFilesWarn(167),
	segmentFilesAlert(168),
	logicalvolumeCreated(169),
	logicalvolumeExtended(170),
	logicalvolumeReduced(171),
	logicalvolumeDeleted(172),
	volumegroupExtended(173),
	volumegroupReduced(174),
	segmentMapUpdateFailed(175),
	serverPoweringUp(176),
	serverMountingFilesystems(177),
	asyncRepRunning(178),
	asyncRepFailed(179),
	asyncRepStartFailed(180),
	asyncRepStopFailed(181),
	asyncRepCompleted(182),
	asyncRepManualStop(183),
	bulkRepRunning(184),
	bulkRepFailed(185),
	bulkRepStartFailed(186),
	bulkRepStopFailed(187),
	bulkRepCompleted(188),
	bulkRepManualStop(189),
	nicConfigMatchOk(190),
	nicConfigMismatchWarn(191),
	nicConfigMismatchAlert(192),
	nicInactive(193),
	hbaStatusStale(194),
	taskStartCommand(196),
	taskStopCommand(197),
	taskPauseCommand(198),
	taskResumeCommand(199),
	loginSuccess(200),
	loginFailure(201),
	logoff(202),
	fileSystemCmd(203),
	serverCmd(204),
	clientCmd(205),
	genericCmd(206),
	rebalanceRunning(207),
	rebalanceFailed(208),
	rebalanceStartFailed(209),
	rebalanceStopFailed(210),
	rebalanceCompleted(211),
	rebalanceManualStop(212),
	rebalanceStarting(213),
	rebalanceStopping(214),
	asyncRepTaskStopping(215),
	migratorFailed(216),
	kernelResponseAlert(217),
	physicalDiskUp(230),
	physicalDiskDown(231),
	physicalDiskWarn(232),
	physicalDiskFailure(233),
	physicalDiskStale(234),
	physicalDiskDegraded(235),
	filesystemUserOverQuota(248),
	filesystemGroupOverQuota(249),
	filesystemDtreeOverQuota(250),
	filesystemDtreeQuotaSet(251),
	filesystemDtreeQuotaUnset(252),
	serverHardwareUp(253),
	serverHardwareDown(254),
	serverHardwareWarn(255),
	serverHardwareFailure(256),
	serverHardwareStale(257),
	serverHardwareDegraded(258),
	httpdDown(259),
	httpdUp(260),
	ftpdHealth(261),
	cfrJobDomainScanCanceled(262),
	cfrJobDomainScanFailed(263),
	cfrJobLogDiskIOFailed(264),
	cfrJobAuthFailed(265),
	taskManualStop(266),
	taskStopping(267),
	taskRunning(268),
	taskFailed(269),
	taskStarting(270),
	taskStopFailed(271),
	taskStartFailed(272),
	taskCompleted(273),
	cfrJobReplicationFailed(274),
	cfrJobTransactionStopped(275),
	snapTreeCreated(276),
	snapTreeDeleted(277),
	snapshotCreatedOnSchedule(278),
	snapshotOnScheduleFailed(279),
	d2dservices(280),
	ibrixcollectDataCollectionSuccess(281),
	ibrixcollectDataCollectionFailed(282),
	validationJobStarted(283),
	validationJobCompleted(284),
	validationJobPaused(285),
	validationJobResumed(286),
	validationJobRemoved(287),
	validationJobErrored(288),
	validationJobHashFailed(289),
	validationJobAlert(290),
	d2dhardwareComponentUp(291),
	d2dhardwareComponentDown(292),
	d2dhardwareComponentWarn(293),
	d2dhardwareComponentFailure(294),
	d2dhardwareComponentStale(295),
	d2dhardwareComponentDegraded(296),
	onlineQuotacheckStarting(297),
	onlineQuotacheckRunning(298),
	onlineQuotacheckStopping(299),
	onlineQuotacheckCompleted(300),
	onlineQuotacheckFailed(301),
	onlineQuotacheckManualStop(302),
	onlineQuotacheckStopFailed(303),
	snapshotOnScheduleError(304),
	hardwarecomponentFailure(305),
	hardwarecomponentUp(306),
	kernelFileSystemUp(307),
	kernelFileSystemDown(308),
	partitionSizeOk(309),
	partitionSizeCritical(310),
	partitionSizeFull(311),
	AvUnreachableVse(312),
	AvUnusedVse(313),
	AvOperationalVse(314),
	AvMulitpleVendors(315),
	startPlatformMonitorFailed(316),
	setMonitoringHostFailed(317),
	d2dLicenseViolation(318),
	d2dUserMgmtOperation(319),
	d2dSystemPowerChange(320),
	cfrBadHealth(321),
	filesystemUserUnderQuota(322),
	filesystemGroupUnderQuota(323),
	filesystemDtreeUnderQuota(324),
	partitionSizeVeryCritical(325),
	ibrixCollectDataCollectionFailedVmIncomplete(326),
	d2d_fwUpdateBegin(327),
	d2d_fwUpdateEnd(328),
	d2d_fwUpdateFail(329),
	d2d_fwUpdateRebootRequired(330),
	d2d_fwListRecommendations(331),
	serverUptimeNormal(332),
	serverUptimeOvershoot(333)
	}
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Events generated by Ibrix Fusion"
	::= { eventEntry 2 }


eventDescription OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Name of the event"
	::= { eventEntry 3 }


eventUUID OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "UUID of the Solution generating the event"
	::= { eventEntry 4 }


eventSolutionSerialNumber OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Solution Serial Number"
	::= { eventEntry 5 }


eventSolutionProductNumber OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Solution Product Number"
	::= { eventEntry 6 }


eventSeverity OBJECT-TYPE
	SYNTAX INTEGER {
	alert(1),
	info(2),
	warn(3)
	}
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "how serious is this event"
	::= { eventEntry 7 }


eventOidValue OBJECT-TYPE
	SYNTAX OBJECT IDENTIFIER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "OID of the table relevant to this event"
	::= { eventEntry 8 }


eventText OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Text string describing the event.  Combines and replaces
eventDescription and other event data into
a single more descriptive text"
	::= { eventEntry 9 }


eventFRU OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Field Replacement Unit (FRU) generating the event.
Unused for Software events.Reserved for future use"
	::= { eventEntry 10 }


eventCustomerEntitlement OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Customer Entitlement Information"
	::= { eventEntry 11 }


eventGroup OBJECT IDENTIFIER ::= { ibrixEventsGroups 1 }

ibrixGenericEvent TRAP-TYPE
	ENTERPRISE ibrixEvents
	VARIABLES { eventIndex, eventType, eventDescription, eventUUID, eventSolutionSerialNumber, eventSolutionProductNumber, eventSeverity, eventOidValue, eventText, eventFRU, eventCustomerEntitlement }
DESCRIPTION "This is a generic Ibrix Fusion event"
	::= 1


END

