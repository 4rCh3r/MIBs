#-MIBFILE: hpsgcluster.mib

HP-MCSG DEFINITIONS ::= BEGIN


DisplayString ::=
	OCTET STRING (SIZE(0..255))

PhysAddress ::=
	OCTET STRING

MacAddress ::=
	OCTET STRING (SIZE(6))

TruthValue ::=
	INTEGER {
	true(1),
	false(2)
	}

TestAndIncr ::=
	INTEGER (0..2147483647)

AutonomousType ::=
	OBJECT IDENTIFIER

InstancePointer ::=
	OBJECT IDENTIFIER

VariablePointer ::=
	OBJECT IDENTIFIER

RowPointer ::=
	OBJECT IDENTIFIER

RowStatus ::=
	INTEGER {
	active(1),
	notInService(2),
	notReady(3),
	createAndGo(4),
	createAndWait(5),
	destroy(6)
	}

TimeStamp ::=
	TimeTicks

TimeInterval ::=
	INTEGER (0..2147483647)

DateAndTime ::=
	OCTET STRING (SIZE(8|11))

StorageType ::=
	INTEGER {
	other(1),
	volatile(2),
	nonVolatile(3),
	permanent(4),
	readOnly(5)
	}

TDomain ::=
	OBJECT IDENTIFIER

TAddress ::=
	OCTET STRING (SIZE(1..255))

hp OBJECT IDENTIFIER ::= { enterprises 11 }
nm OBJECT IDENTIFIER ::= { hp 2 }
system OBJECT IDENTIFIER ::= { nm 3 }
general OBJECT IDENTIFIER ::= { system 1 }
hpmcCluster OBJECT IDENTIFIER ::= { general 6 }
hpmcClusterObjects OBJECT IDENTIFIER ::= { hpmcCluster 1 }
hpmcGenInfo OBJECT IDENTIFIER ::= { hpmcClusterObjects 1 }
hpmcClusterTable OBJECT IDENTIFIER ::= { hpmcGenInfo 2 }
hpmcClusterEntry OBJECT IDENTIFIER ::= { hpmcClusterTable 1 }
hpmcClusterState OBJECT IDENTIFIER ::= { hpmcClusterEntry 6 }
nm OBJECT IDENTIFIER ::= { hp 2 }
hpmcClusterName OBJECT IDENTIFIER ::= { hpmcClusterEntry 2 }
hpmcClusterIndex OBJECT IDENTIFIER ::= { hpmcClusterEntry 1 }
hpmcMemberInfo OBJECT IDENTIFIER ::= { hpmcClusterObjects 2 }
hpmcCNodeTable OBJECT IDENTIFIER ::= { hpmcMemberInfo 1 }
hpmcCNodeEntry OBJECT IDENTIFIER ::= { hpmcCNodeTable 1 }
hpmcNodeName OBJECT IDENTIFIER ::= { hpmcCNodeEntry 2 }
hpmcNodeID OBJECT IDENTIFIER ::= { hpmcCNodeEntry 1 }
hp OBJECT IDENTIFIER ::= { enterprises 11 }

nm OBJECT IDENTIFIER ::= { hp 2 }

system OBJECT IDENTIFIER ::= { nm 3 }

general OBJECT IDENTIFIER ::= { system 1 }

hpmcCluster OBJECT IDENTIFIER ::= { general 6 }

hpmcTypeSpecific OBJECT IDENTIFIER ::= { hpmcCluster 3 }

hpmcSGCluster OBJECT IDENTIFIER ::= { hpmcTypeSpecific 1 }

hpmcSGTraps OBJECT IDENTIFIER ::= { hpmcSGCluster 0 }

hpmcSGObjects OBJECT IDENTIFIER ::= { hpmcSGCluster 1 }

hpmcSGGenInfo OBJECT IDENTIFIER ::= { hpmcSGObjects 1 }

hpmcSGClusterIndex OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The index into the general cluster table which contains
other information about the Service Guard cluster (such
as membership and general state information)."
	::= { hpmcSGGenInfo 1 }


hpmcSGClusterID OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The unique ID assigned to this cluster configuration
by the MC/ServiceGuard configuration daemon."
	::= { hpmcSGGenInfo 2 }


hpmcSGHeartbeatInterval OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The interval between the sending of heartbeat messages.
The value is expressed in microseconds."
	::= { hpmcSGGenInfo 3 }


hpmcSGNodeTimeout OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The maximum amount of time allowed between receipt of 
heartbeats, before marking a node as down.  The value
is expressed in microseconds."
	::= { hpmcSGGenInfo 4 }


hpmcSGAutoStartTimeout OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The number of microseconds to wait for all nodes to join
the cluster when nodes are booting up."
	::= { hpmcSGGenInfo 5 }


hpmcSGNetworkPollingInterval OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The frequency at which LAN cards send a message to 
another LAN card in order to verify its health.  The
value is expressed in microseconds."
	::= { hpmcSGGenInfo 6 }


hpmcSGLockInfo OBJECT IDENTIFIER ::= { hpmcSGObjects 2 }

hpmcSGLockTable OBJECT-TYPE
	SYNTAX SEQUENCE OF HpmcSGLockEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A table describing the volume groups which are used
as locks for the ServiceGuard cluster."
	::= { hpmcSGLockInfo 1 }


hpmcSGLockEntry OBJECT-TYPE
	SYNTAX HpmcSGLockEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "An entry providing information about a specific volume
used for locking the ServiceGuard cluster."
	INDEX { hpmcSGVolumeIndex  }

	::= { hpmcSGLockTable 1 }

hpmcSGLockEntry ::=
	SEQUENCE {
		hpmcSGVolumeIndex Integer32,
		hpmcSGPhysicalVolume DisplayString
		}

hpmcSGVolumeIndex OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A value which uniquely identifies this volume."
	::= { hpmcSGLockEntry 1 }


hpmcSGPhysicalVolume OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Device path used to access the disk device used for 
locking."
	::= { hpmcSGLockEntry 2 }


hpmcSGIfInfo OBJECT IDENTIFIER ::= { hpmcSGObjects 3 }

hpmcSGNetTable OBJECT-TYPE
	SYNTAX SEQUENCE OF HpmcSGNetEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A table describing the network interfaces in which SG
has an active interest."
	::= { hpmcSGIfInfo 1 }


hpmcSGNetEntry OBJECT-TYPE
	SYNTAX HpmcSGNetEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "An entry providing information about a specific network
interface of interest to the ServiceGuard cluster."
	INDEX { hpmcSGNetIfIndex  }

	::= { hpmcSGNetTable 1 }

hpmcSGNetEntry ::=
	SEQUENCE {
		hpmcSGNetIfIndex Integer32,
		hpmcSGNetIfName DisplayString,
		hpmcSGNetBridgedNet Integer32,
		hpmcSGNetIfFlags Integer32,
		hpmcSGNetLastEvent Integer32,
		hpmcSGNetLastEventTime DateAndTime,
		hpmcSGNetIfHwPath DisplayString
		}

hpmcSGNetIfIndex OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The index value which uniquely identifies the network
interface card to which this entry is applicable.  This
index matches that in the MIB-II interface table and
in particular, ifIndex."
	::= { hpmcSGNetEntry 1 }


hpmcSGNetIfName OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "This is the concise name of the network interface, which
is used in local system management operations.  It may
differ from the MIB II object ifDescr, in that the 
latter can contain additional information."
	::= { hpmcSGNetEntry 2 }


hpmcSGNetBridgedNet OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A unique value which identifies the bridged network
to which this interface card is physically attached.
Interface cards sharing the same bridged network,
which are not currently active can act in a backup
capacity for others."
	::= { hpmcSGNetEntry 3 }


hpmcSGNetIfFlags OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "An integer whose value represents a bitstring.  These
bit values indicate flag settings for this interface
as well as status information.  Note that the MIB-II 
interface group also contains status information, but
this is relative to IP (if IP is not enabled on the card,
it is marked as down).  The value is determined by 
summing the following:
1 - Heartbeat
2 - Primary 
4 - Active
8 - HW Failure Detected
16 - Connectivity Failure Detected"
	::= { hpmcSGNetEntry 4 }


hpmcSGNetLastEvent OBJECT-TYPE
	SYNTAX INTEGER {
	none(0),
	down(1),
	up(2)
	}
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "An event code which indicates the last event which
resulted in reaching the current status of the interface."
	::= { hpmcSGNetEntry 5 }


hpmcSGNetLastEventTime OBJECT-TYPE
	SYNTAX DateAndTime
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Indicates at what time the event described by
hpmcSGNetLastEvent occured.  A value of 0 indicates
that the time is unknown."
	::= { hpmcSGNetEntry 6 }


hpmcSGNetIfHwPath OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Describes the HW location of the interface card.  This
information can be useful in locating the physical 
position of a faulty card."
	::= { hpmcSGNetEntry 7 }


hpmcSGPkgInfo OBJECT IDENTIFIER ::= { hpmcSGObjects 4 }

hpmcSGPkgTable OBJECT-TYPE
	SYNTAX SEQUENCE OF HpmcSGPkgEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A table describing the packages which are currently
configured for the ServiceGuard cluster."
	::= { hpmcSGPkgInfo 1 }


hpmcSGPkgEntry OBJECT-TYPE
	SYNTAX HpmcSGPkgEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "An entry providing information about a specific package."
	INDEX { hpmcSGPkgIndex  }

	::= { hpmcSGPkgTable 1 }

hpmcSGPkgEntry ::=
	SEQUENCE {
		hpmcSGPkgIndex Integer32,
		hpmcSGPkgName DisplayString,
		hpmcSGPkgDescr DisplayString,
		hpmcSGPkgStatus Integer32,
		hpmcSGPkgCurrNode DisplayString,
		hpmcSGPkgLastEvent Integer32,
		hpmcSGPkgLastEventTime DateAndTime,
		hpmcSGPkgRunScriptPath DisplayString,
		hpmcSGPkgHaltScriptPath DisplayString,
		hpmcSGPkgRunScriptTimeout Integer32,
		hpmcSGPkgHaltScriptTimeout Integer32
		}

hpmcSGPkgIndex OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "An index value which uniquely identifies the package.
These indices should be consistent across nodes in
the same SG Cluster.  More specifically, these indices
should match the cluster-wide pkgid assigned by SG."
	::= { hpmcSGPkgEntry 1 }


hpmcSGPkgName OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The name configured for this package."
	::= { hpmcSGPkgEntry 2 }


hpmcSGPkgDescr OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Explanatory text provided by the user to further 
clarify the function of this package."
	::= { hpmcSGPkgEntry 3 }


hpmcSGPkgStatus OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "This integer value is the encoding of a set of bits
which include configured flags for the package in
addition to dynamic status information.  The value is
determined by summing those flags from the list below
which are applicable:

1   - Up
2   - Moving 
4   - Valid package status 
8   - PackageSwitchingEnabled
16  - NetSwitchingEnabled
32  - NodeFailFastEnabled
64  - SummaryLocalSwitchStatus "
	::= { hpmcSGPkgEntry 4 }


hpmcSGPkgCurrNode OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Name of the node where the package is executing.  This
string will be empty if the package is currently unowned."
	::= { hpmcSGPkgEntry 5 }


hpmcSGPkgLastEvent OBJECT-TYPE
	SYNTAX INTEGER {
	none(0),
	down(1),
	up(2),
	start(3),
	halt(4),
	globalswitchenable(5),
	localswitchenable(6)
	}
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "An event code which indicates the last event which
resulted in reacing the status described by 
hpmcSGPkgStatus."
	::= { hpmcSGPkgEntry 6 }


hpmcSGPkgLastEventTime OBJECT-TYPE
	SYNTAX DateAndTime
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Indicates at what time the package entered the status
described by hpmcSGPkgStatus.  A value of 0 indicates
that the time is unknown."
	::= { hpmcSGPkgEntry 7 }


hpmcSGPkgRunScriptPath OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The name of the file which is invoked in order to 
launch the package."
	::= { hpmcSGPkgEntry 8 }


hpmcSGPkgHaltScriptPath OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The name of the file which is invoked in order to 
shutdown the package.  This is often the same as
the Run Script."
	::= { hpmcSGPkgEntry 9 }


hpmcSGPkgRunScriptTimeout OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The maximum amount of time allowed for the Run Script
to complete.  The value is expressed in seconds."
	::= { hpmcSGPkgEntry 10 }


hpmcSGPkgHaltScriptTimeout OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The maximum amount of time allowed for the Run Script
to complete.  The value is expressed in seconds."
	::= { hpmcSGPkgEntry 11 }


hpmcSGPkgSubnetTable OBJECT-TYPE
	SYNTAX SEQUENCE OF HpmcSGPkgSubnetEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A table describing the subnets upon which this package 
has a dependency."
	::= { hpmcSGPkgInfo 2 }


hpmcSGPkgSubnetEntry OBJECT-TYPE
	SYNTAX HpmcSGPkgSubnetEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "An entry describes a single subnet dependency."
	INDEX { hpmcSGPkgIndex , hpmcSGPkgSubnet }

	::= { hpmcSGPkgSubnetTable 1 }

hpmcSGPkgSubnetEntry ::=
	SEQUENCE {
		hpmcSGPkgSubnet IpAddress,
		hpmcSGPkgSubnetStatus INTEGER,
		hpmcSGPkgOverrideMACAddr OCTET STRING
		}

hpmcSGPkgSubnet OBJECT-TYPE
	SYNTAX IpAddress
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The Subnetwork Id on which this package has a dependency.
Service Guard will migrate the package to another host
in the event this subnetwork becomes unavailable."
	::= { hpmcSGPkgSubnetEntry 1 }


hpmcSGPkgSubnetStatus OBJECT-TYPE
	SYNTAX INTEGER {
	unknown(0),
	down(1),
	up(2)
	}
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The current state of the service."
	::= { hpmcSGPkgSubnetEntry 2 }


hpmcSGPkgOverrideMACAddr OBJECT-TYPE
	SYNTAX MacAddress
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A MAC address which will be used to override the 
default MAC address on the interface card associated 
with the given Subnet.  In particular this will allow
DLPI applications to continue servicing clients on 
the same address after failover.  In the event
that no override MAC address is used, this object
shall be assigned the value 0x000000000000."
	::= { hpmcSGPkgSubnetEntry 3 }


hpmcSGPkgAddrTable OBJECT-TYPE
	SYNTAX SEQUENCE OF HpmcSGPkgAddrEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A table describing the movable IP addresses which are 
usually associated with active packages on this node."
	::= { hpmcSGPkgInfo 3 }


hpmcSGPkgAddrEntry OBJECT-TYPE
	SYNTAX HpmcSGPkgAddrEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "An entry describes a single address associated with a
package."
	INDEX { hpmcSGPkgAddr  }

	::= { hpmcSGPkgAddrTable 1 }

hpmcSGPkgAddrEntry ::=
	SEQUENCE {
		hpmcSGPkgAddr IpAddress,
		hpmcSGPkgID Integer32
		}

hpmcSGPkgAddr OBJECT-TYPE
	SYNTAX IpAddress
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A migratable address which is currently active for
this package."
	::= { hpmcSGPkgAddrEntry 1 }


hpmcSGPkgID OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The hpmcSGPkgIndex value for the owning package.  
A value of 0 indicates no owning package."
	::= { hpmcSGPkgAddrEntry 2 }


hpmcSGPkgSvcTable OBJECT-TYPE
	SYNTAX SEQUENCE OF HpmcSGPkgSvcEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A table describing the services or applications which
are associated with active packages on this node."
	::= { hpmcSGPkgInfo 4 }


hpmcSGPkgSvcEntry OBJECT-TYPE
	SYNTAX HpmcSGPkgSvcEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "An entry that describes a single service associated with a
package."
	INDEX { hpmcSGPkgIndex , hpmcSGPkgSvcIndex }

	::= { hpmcSGPkgSvcTable 1 }

hpmcSGPkgSvcEntry ::=
	SEQUENCE {
		hpmcSGPkgSvcIndex Integer32,
		hpmcSGPkgSvcName DisplayString,
		hpmcSGPkgSvcStatus INTEGER,
		hpmcSGPkgSvcFlags Integer32,
		hpmcSGPkgSvcHaltTimeout Integer32,
		hpmcSGPkgSvcMaxRestarts Integer32,
		hpmcSGPkgSvcRestartCount Counter32
		}

hpmcSGPkgSvcIndex OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A unique value which identifies this service in the
context of the package."
	::= { hpmcSGPkgSvcEntry 1 }


hpmcSGPkgSvcName OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The name of this service."
	::= { hpmcSGPkgSvcEntry 2 }


hpmcSGPkgSvcStatus OBJECT-TYPE
	SYNTAX INTEGER {
	unknown(0),
	down(1),
	up(2)
	}
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The current state of the service."
	::= { hpmcSGPkgSvcEntry 3 }


hpmcSGPkgSvcFlags OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "An integer whose value represents a bitstring.  These
bit values indicate flag settings for this service.
Currently there is only one flag available.  The 
value is determined by summing the following:
8 - FailFastSwitch"
	::= { hpmcSGPkgSvcEntry 4 }


hpmcSGPkgSvcHaltTimeout OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The maximum amount of time ServiceGuard will wait
for the service to terminate during package shutdown.
The value is expressed in seconds."
	::= { hpmcSGPkgSvcEntry 5 }


hpmcSGPkgSvcMaxRestarts OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The maximum number of times this Service may be restarted.
A value of 0 indicates that the service may not be
restarted, a value of -1 indicates no limit."
	::= { hpmcSGPkgSvcEntry 6 }


hpmcSGPkgSvcRestartCount OBJECT-TYPE
	SYNTAX Counter
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The current number of times this service has been 
restarted."
	::= { hpmcSGPkgSvcEntry 7 }


hpmcSGPkgNodeTable OBJECT-TYPE
	SYNTAX SEQUENCE OF HpmcSGPkgNodeEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A table describing the ordered list of nodes where
this package can run."
	::= { hpmcSGPkgInfo 5 }


hpmcSGPkgNodeEntry OBJECT-TYPE
	SYNTAX HpmcSGPkgNodeEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "An entry describes a single candidate node."
	INDEX { hpmcSGPkgIndex , hpmcSGPkgNodeRank }

	::= { hpmcSGPkgNodeTable 1 }

hpmcSGPkgNodeEntry ::=
	SEQUENCE {
		hpmcSGPkgNodeRank Integer32,
		hpmcSGPkgNode Integer32,
		hpmcSGPkgLocalSwitchEnable INTEGER
		}

hpmcSGPkgNodeRank OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Order in which the node indicated by hpmcSGPkgNode will
be chosen for this package.  Lowest number is chosen
first."
	::= { hpmcSGPkgNodeEntry 1 }


hpmcSGPkgNode OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Index of a node (within the hpmcNodeTable) that could run
this package."
	::= { hpmcSGPkgNodeEntry 2 }


hpmcSGPkgLocalSwitchEnable OBJECT-TYPE
	SYNTAX INTEGER {
	disabled(0),
	enabled(1)
	}
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A binary value that represents the status of the LOCAL 
switch capability for the respective package on the
particular node."
	::= { hpmcSGPkgNodeEntry 3 }


hpmcSGPkgSubnet6Table OBJECT-TYPE
	SYNTAX SEQUENCE OF HpmcSGPkgSubnet6Entry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A table describing the IPv6 subnets upon which this package
has a dependency."
	::= { hpmcSGPkgInfo 6 }


hpmcSGPkgSubnet6Entry OBJECT-TYPE
	SYNTAX HpmcSGPkgSubnet6Entry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "An entry describes a single IPv6 subnet dependency."
	INDEX { hpmcSGPkgIndex , hpmcSGPkgSubnet6 }

	::= { hpmcSGPkgSubnet6Table 1 }

hpmcSGPkgSubnet6Entry ::=
	SEQUENCE {
		hpmcSGPkgSubnet6 OCTET STRING,
		hpmcSGPkgSubnet6Status INTEGER,
		hpmcSGPkgOverrideMACAddr6 OCTET STRING
		}

hpmcSGPkgSubnet6 OBJECT-TYPE
	SYNTAX OCTET STRING
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The IPv6 Subnetwork Id on which this package has a dependency.
Service Guard will migrate the package to another host
in the event this subnetwork becomes unavailable."
	::= { hpmcSGPkgSubnet6Entry 1 }


hpmcSGPkgSubnet6Status OBJECT-TYPE
	SYNTAX INTEGER {
	unknown(0),
	down(1),
	up(2)
	}
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The current state of the IPv6 subnet."
	::= { hpmcSGPkgSubnet6Entry 2 }


hpmcSGPkgOverrideMACAddr6 OBJECT-TYPE
	SYNTAX MacAddress
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A MAC address which will be used to override the
default MAC address on the interface card associated
with the given IPv6 Subnet.  In particular this will allow
DLPI applications to continue servicing clients on
the same address after failover.  In the event
that no override MAC address is used, this object
shall be assigned the value 0x000000000000."
	::= { hpmcSGPkgSubnet6Entry 3 }


hpmcSGPkgAddr6Table OBJECT-TYPE
	SYNTAX SEQUENCE OF HpmcSGPkgAddr6Entry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A table describing the movable IPv6 addresses which are
usually associated with active packages on this node."
	::= { hpmcSGPkgInfo 7 }


hpmcSGPkgAddr6Entry OBJECT-TYPE
	SYNTAX HpmcSGPkgAddr6Entry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "An entry describes a single IPv6 address associated with a
package."
	INDEX { hpmcSGPkgAddr6  }

	::= { hpmcSGPkgAddr6Table 1 }

hpmcSGPkgAddr6Entry ::=
	SEQUENCE {
		hpmcSGPkgAddr6 DisplayString,
		hpmcSGPkgID6 Integer32
		}

hpmcSGPkgAddr6 OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A migratable IPv6 address which is currently active for
this package."
	::= { hpmcSGPkgAddr6Entry 1 }


hpmcSGPkgID6 OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The hpmcSGPkgIndex value for the owning package.
A value of 0 indicates no owning package."
	::= { hpmcSGPkgAddr6Entry 2 }


hpmcSGSubagentUp TRAP-TYPE
	ENTERPRISE hpmcSGCluster
	VARIABLES { hpmcClusterState, hpmcClusterName }
	--#CATEGORY "ServiceGuard Events"
DESCRIPTION "Sent by the subagent when it starts."
	::= 1


hpmcSGReconfig TRAP-TYPE
	ENTERPRISE hpmcSGCluster
	VARIABLES { hpmcClusterIndex, hpmcClusterName }
	--#CATEGORY "ServiceGuard Events"
DESCRIPTION "Sent by the cluster coordinator after the cluster has
reformed."
	::= 2


hpmcSGClusterUp TRAP-TYPE
	ENTERPRISE hpmcSGCluster
	VARIABLES { hpmcClusterIndex, hpmcClusterName }
	--#CATEGORY "ServiceGuard Events"
DESCRIPTION "Sent by any node in the cluster when clustering is
first initiated."
	::= 3


hpmcSGClusterDown TRAP-TYPE
	ENTERPRISE hpmcSGCluster
	VARIABLES { hpmcClusterIndex, hpmcClusterName }
	--#CATEGORY "ServiceGuard Events"
DESCRIPTION "Sent by any node in the cluster when clustering is
being halted."
	::= 4


hpmcSGConfigChange TRAP-TYPE
	ENTERPRISE hpmcSGCluster
	VARIABLES { hpmcClusterIndex, hpmcClusterName }
	--#CATEGORY "ServiceGuard Events"
DESCRIPTION "Sent when the cluster configuration is modified."
	::= 5


hpmcSGPkgStart TRAP-TYPE
	ENTERPRISE hpmcSGCluster
	VARIABLES { hpmcSGPkgIndex, hpmcNodeID, hpmcSGPkgName, hpmcNodeName, hpmcSGPkgStatus }
	--#CATEGORY "ServiceGuard Events"
DESCRIPTION "Sent from the coordinator of the cluster when a package 
run script has been started on a cluster node."
	::= 6


hpmcSGPkgUp TRAP-TYPE
	ENTERPRISE hpmcSGCluster
	VARIABLES { hpmcSGPkgIndex, hpmcNodeID, hpmcSGPkgName, hpmcNodeName, hpmcSGPkgStatus }
	--#CATEGORY "ServiceGuard Events"
DESCRIPTION "Sent from the coordinator of the cluster when a package 
run script has completed successfully on a cluster node."
	::= 7


hpmcSGPkgHalt TRAP-TYPE
	ENTERPRISE hpmcSGCluster
	VARIABLES { hpmcSGPkgIndex, hpmcNodeID, hpmcSGPkgName, hpmcNodeName, hpmcSGPkgStatus }
	--#CATEGORY "ServiceGuard Events"
DESCRIPTION "Sent from the coordinator of the cluster when a package 
halt script has been started on a cluster node."
	::= 8


hpmcSGPkgDown TRAP-TYPE
	ENTERPRISE hpmcSGCluster
	VARIABLES { hpmcSGPkgIndex, hpmcSGPkgName, hpmcSGPkgStatus, hpmcSGPkgCurrNode }
	--#CATEGORY "ServiceGuard Events"
DESCRIPTION "Sent from the coordinator of the cluster when a package
halt script has completed on a cluster node."
	::= 9


hpmcSGSvcDown TRAP-TYPE
	ENTERPRISE hpmcSGCluster
	VARIABLES { hpmcSGPkgIndex, hpmcSGPkgSvcIndex, hpmcSGPkgName, hpmcSGPkgSvcName }
	--#CATEGORY "ServiceGuard Events"
DESCRIPTION "Sent when a previously active service has been brought
down on a cluster node."
	::= 10


hpmcSGPkgFlags TRAP-TYPE
	ENTERPRISE hpmcSGCluster
	VARIABLES { hpmcSGPkgIndex, hpmcSGPkgStatus, hpmcSGPkgName }
	--#CATEGORY "ServiceGuard Events"
DESCRIPTION "Sent from the coordinator of the cluster when a package's 
global or local switch enable has been toggled."
	::= 11


hpmcSGIPAddrUp TRAP-TYPE
	ENTERPRISE hpmcSGCluster
	VARIABLES { hpmcSGPkgAddr }
	--#CATEGORY "ServiceGuard Events"
DESCRIPTION "Sent when ServiceGuard adds a relocatable IP address."
	::= 12


hpmcSGIPAddrDown TRAP-TYPE
	ENTERPRISE hpmcSGCluster
	VARIABLES { hpmcSGPkgAddr }
	--#CATEGORY "ServiceGuard Events"
DESCRIPTION "Sent when ServiceGuard removes a relocatable IP address."
	::= 13


hpmcSGLocalSwitch TRAP-TYPE
	ENTERPRISE hpmcSGCluster
	VARIABLES { hpmcSGNetIfName, hpmcSGNetIfName }
	--#CATEGORY "ServiceGuard Events"
DESCRIPTION "Sent when ServiceGuard suucessfuly completes a local
switch from one network interface to another."
	::= 14


hpmcSGSubnetUp TRAP-TYPE
	ENTERPRISE hpmcSGCluster
	VARIABLES { hpmcSGPkgSubnet }
	--#CATEGORY "ServiceGuard Events"
DESCRIPTION "Sent when ServiceGuard detects that a previously disabled
subnet is now operational."
	::= 15


hpmcSGSubnetDown TRAP-TYPE
	ENTERPRISE hpmcSGCluster
	VARIABLES { hpmcSGPkgSubnet }
	--#CATEGORY "ServiceGuard Events"
DESCRIPTION "Sent when ServiceGuard detects that a previously 
operational subnet is now down."
	::= 16


hpmcSGNodeUp TRAP-TYPE
	ENTERPRISE hpmcSGCluster
	--#CATEGORY "ServiceGuard Events"
DESCRIPTION "Sent when a cluster node's status changes to 5(running)."
	::= 17


hpmcSGNodeHalted TRAP-TYPE
	ENTERPRISE hpmcSGCluster
	--#CATEGORY "ServiceGuard Events"
DESCRIPTION "Sent when a cluster node is halted by a system 
administrator."
	::= 18


hpmcSGNodeFailed TRAP-TYPE
	ENTERPRISE hpmcSGCluster
	--#CATEGORY "ServiceGuard Events"
DESCRIPTION "Sent when a cluster node fails (leaves the cluster)."
	::= 19


hpmcSGIPAddr6Up TRAP-TYPE
	ENTERPRISE hpmcSGCluster
	VARIABLES { hpmcSGPkgAddr6 }
	--#CATEGORY "ServiceGuard Events"
DESCRIPTION "Sent when ServiceGuard adds a relocatable IPv6 address."
	::= 20


hpmcSGIPAddr6Down TRAP-TYPE
	ENTERPRISE hpmcSGCluster
	VARIABLES { hpmcSGPkgAddr6 }
	--#CATEGORY "ServiceGuard Events"
DESCRIPTION "Sent when ServiceGuard removes a relocatable IPv6 address."
	::= 21


hpmcSGSubnet6Up TRAP-TYPE
	ENTERPRISE hpmcSGCluster
	VARIABLES { hpmcSGPkgSubnet6 }
	--#CATEGORY "ServiceGuard Events"
DESCRIPTION "Sent when ServiceGuard detects that a previously disabled
IPv6 subnet is now operational."
	::= 22


hpmcSGSubnet6Down TRAP-TYPE
	ENTERPRISE hpmcSGCluster
	VARIABLES { hpmcSGPkgSubnet6 }
	--#CATEGORY "ServiceGuard Events"
DESCRIPTION "Sent when ServiceGuard detects that a previously
operational IPv6 subnet is now down."
	::= 23


END

