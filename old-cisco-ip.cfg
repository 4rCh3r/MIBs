#-MIBFILE: old-cisco-ip.mib

OLD-CISCO-IP-MIB DEFINITIONS ::= BEGIN


DisplayString ::=
	OCTET STRING

PhysAddress ::=
	OCTET STRING

mib-2 OBJECT IDENTIFIER ::= { mgmt 1 }
ip OBJECT IDENTIFIER ::= { mib-2 4 }
ipAddrTable OBJECT IDENTIFIER ::= { ip 20 }
ipAddrEntry OBJECT IDENTIFIER ::= { ipAddrTable 1 }
ipAdEntAddr OBJECT IDENTIFIER ::= { ipAddrEntry 1 }
ip OBJECT IDENTIFIER ::= { mib-2 4 }
ipRouteTable OBJECT IDENTIFIER ::= { ip 21 }
ipRouteEntry OBJECT IDENTIFIER ::= { ipRouteTable 1 }
ipRouteDest OBJECT IDENTIFIER ::= { ipRouteEntry 1 }
cisco OBJECT IDENTIFIER ::= { enterprises 9 }
local OBJECT IDENTIFIER ::= { cisco 2 }
lip OBJECT IDENTIFIER ::= { local 4 }

lipAddrTable OBJECT-TYPE
	SYNTAX SEQUENCE OF LipAddrEntry
	ACCESS read-only
	STATUS optional
	DESCRIPTION "A list of IP address entries."
	::= { lip 1 }


lipAddrEntry OBJECT-TYPE
	SYNTAX LipAddrEntry
	ACCESS read-only
	STATUS optional
	DESCRIPTION "A collection of additional objects in the
cisco IP implementation."
	INDEX { ipAdEntAddr  }

	::= { lipAddrTable 1 }

lipAddrEntry ::=
	SEQUENCE {
		locIPHow DisplayString,
		locIPWho IpAddress,
		locIPHelper IpAddress,
		locIPSecurity INTEGER,
		locIPRedirects INTEGER,
		locIPUnreach INTEGER
		}

locIPHow OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS optional
	DESCRIPTION "Method of how this interface obtained its IP
address."
	::= { lipAddrEntry 1 }


locIPWho OBJECT-TYPE
	SYNTAX IpAddress
	ACCESS read-only
	STATUS optional
	DESCRIPTION "IP address of who supplied this interface
its IP address."
	::= { lipAddrEntry 2 }


locIPHelper OBJECT-TYPE
	SYNTAX IpAddress
	ACCESS read-only
	STATUS optional
	DESCRIPTION "IP helper address for broadcast forwarding
support."
	::= { lipAddrEntry 3 }


locIPSecurity OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS optional
	DESCRIPTION "IP security level. See RFC 1038."
	::= { lipAddrEntry 4 }


locIPRedirects OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS optional
	DESCRIPTION "Boolean whether ICMP redirects will be sent
or not."
	::= { lipAddrEntry 5 }


locIPUnreach OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS optional
	DESCRIPTION "Boolean whether ICMP unreachables will be
sent or not."
	::= { lipAddrEntry 6 }


lipRouteTable OBJECT-TYPE
	SYNTAX SEQUENCE OF LipRouteEntry
	ACCESS read-only
	STATUS optional
	DESCRIPTION "A list of IP routing entries."
	::= { lip 2 }


lipRouteEntry OBJECT-TYPE
	SYNTAX LipRouteEntry
	ACCESS read-only
	STATUS optional
	DESCRIPTION "A collection of additional objects in the
cisco IP routing implementation."
	INDEX { ipRouteDest  }

	::= { lipRouteTable 1 }

lipRouteEntry ::=
	SEQUENCE {
		locRtMask IpAddress,
		locRtCount INTEGER,
		locRtUses INTEGER
		}

locRtMask OBJECT-TYPE
	SYNTAX IpAddress
	ACCESS read-only
	STATUS optional
	DESCRIPTION "Routing table network mask."
	::= { lipRouteEntry 1 }


locRtCount OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS optional
	DESCRIPTION "Number of parallel routes within routing
table."
	::= { lipRouteEntry 2 }


locRtUses OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS optional
	DESCRIPTION "Number of times this route was used in a
forward operation."
	::= { lipRouteEntry 3 }


actThresh OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS optional
	DESCRIPTION "Threshold of IP accounting records in use
before IP traffic will be unaccounted."
	::= { lip 4 }


actLostPkts OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS optional
	DESCRIPTION "Lost IP packets due to memory limitations."
	::= { lip 5 }


actLostByts OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS optional
	DESCRIPTION "Total bytes of lost IP packets."
	::= { lip 6 }


lipAccountingTable OBJECT-TYPE
	SYNTAX SEQUENCE OF LipAccountEntry
	ACCESS read-only
	STATUS optional
	DESCRIPTION "A list of IP accounting entries."
	::= { lip 7 }


lipAccountEntry OBJECT-TYPE
	SYNTAX LipAccountEntry
	ACCESS read-only
	STATUS optional
	DESCRIPTION "A collection of objects necessary for IP
accounting."
	INDEX { actSrc , actDst }

	::= { lipAccountingTable 1 }

lipAccountEntry ::=
	SEQUENCE {
		actSrc IpAddress,
		actDst IpAddress,
		actPkts INTEGER,
		actByts INTEGER,
		actViolation INTEGER
		}

actSrc OBJECT-TYPE
	SYNTAX IpAddress
	ACCESS read-only
	STATUS optional
	DESCRIPTION "IP Source address for host traffic matrix."
	::= { lipAccountEntry 1 }


actDst OBJECT-TYPE
	SYNTAX IpAddress
	ACCESS read-only
	STATUS optional
	DESCRIPTION "IP Destination address for host traffic
matrix."
	::= { lipAccountEntry 2 }


actPkts OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS optional
	DESCRIPTION "Number of IP packets sent from source to
destination."
	::= { lipAccountEntry 3 }


actByts OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS optional
	DESCRIPTION "Total number of bytes in IP packets from
source to destination."
	::= { lipAccountEntry 4 }


actViolation OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS optional
	DESCRIPTION "Access list number violated by packets from
this source to this destination.  A zero value
indicates that no access list was violated."
	::= { lipAccountEntry 5 }


actAge OBJECT-TYPE
	SYNTAX TimeTicks
	ACCESS read-only
	STATUS optional
	DESCRIPTION "The age of the data in the current data
matrix."
	::= { lip 8 }


lipCkAccountingTable OBJECT-TYPE
	SYNTAX SEQUENCE OF LipCkAccountEntry
	ACCESS read-only
	STATUS optional
	DESCRIPTION "A list of IP checkpoint accounting
entries."
	::= { lip 9 }


lipCkAccountEntry OBJECT-TYPE
	SYNTAX LipCkAccountEntry
	ACCESS read-only
	STATUS optional
	DESCRIPTION "A collection of objects necessary for IP
checkpoint accounting."
	INDEX { ckactSrc , ckactDst }

	::= { lipCkAccountingTable 1 }

lipCkAccountEntry ::=
	SEQUENCE {
		ckactSrc IpAddress,
		ckactDst IpAddress,
		ckactPkts INTEGER,
		ckactByts INTEGER,
		ckactViolation INTEGER
		}

ckactSrc OBJECT-TYPE
	SYNTAX IpAddress
	ACCESS read-only
	STATUS optional
	DESCRIPTION "IP Source address for host in checkpoint
traffic matrix."
	::= { lipCkAccountEntry 1 }


ckactDst OBJECT-TYPE
	SYNTAX IpAddress
	ACCESS read-only
	STATUS optional
	DESCRIPTION "IP Destination address for host in
checkpoint traffic matrix."
	::= { lipCkAccountEntry 2 }


ckactPkts OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS optional
	DESCRIPTION "Number of IP packets sent from source to
destination in checkpoint matrix."
	::= { lipCkAccountEntry 3 }


ckactByts OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS optional
	DESCRIPTION "Total number of bytes in IP packets from
source to destination in checkpoint matrix.
A zero value indicates that no access list 
was violated."
	::= { lipCkAccountEntry 4 }


ckactViolation OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS optional
	DESCRIPTION "Access list number violated by packets from
source to destination in checkpoint matrix."
	::= { lipCkAccountEntry 5 }


ckactAge OBJECT-TYPE
	SYNTAX TimeTicks
	ACCESS read-only
	STATUS optional
	DESCRIPTION "Age of data in the checkpoint matrix."
	::= { lip 10 }


actCheckPoint OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS optional
	DESCRIPTION "Check points the accounting database. This
mib variable must be read and then set with
the same value for the check point to
succeed. The value read and then set will be
incremented after a successful set request"
	::= { lip 11 }


ipNoaccess OBJECT-TYPE
	SYNTAX Counter
	ACCESS read-only
	STATUS optional
	DESCRIPTION "Total number of packets dropped due to
access control failure."
	::= { lip 12 }


END

