#-MIBFILE: HH3C-TRAP-MIB.mib

HH3C-TRAP-MIB DEFINITIONS ::= BEGIN


SnmpEngineID ::=
	OCTET STRING (SIZE(5..32))

SnmpSecurityModel ::=
	INTEGER (0..2147483647)

SnmpMessageProcessingModel ::=
	INTEGER (0..2147483647)

SnmpSecurityLevel ::=
	INTEGER {
	noAuthNoPriv(1),
	authNoPriv(2),
	authPriv(3)
	}

SnmpAdminString ::=
	OCTET STRING (SIZE(0..255))

OwnerString ::=
	OCTET STRING (SIZE(0..255))

InterfaceIndex ::=
	INTEGER (1..2147483647)

InterfaceIndexOrZero ::=
	INTEGER (0..2147483647)

mib-2 OBJECT IDENTIFIER ::= { mgmt 1 }
interfaces OBJECT IDENTIFIER ::= { mib-2 2 }
ifTable OBJECT IDENTIFIER ::= { interfaces 2 }
ifEntry OBJECT IDENTIFIER ::= { ifTable 1 }
ifIndex OBJECT IDENTIFIER ::= { ifEntry 1 }
interfaces OBJECT IDENTIFIER ::= { mib-2 2 }
ifDescr OBJECT IDENTIFIER ::= { ifEntry 2 }
DisplayString ::=
	OCTET STRING (SIZE(0..255))

PhysAddress ::=
	OCTET STRING

MacAddress ::=
	OCTET STRING (SIZE(6))

TruthValue ::=
	INTEGER {
	true(1),
	false(2)
	}

TestAndIncr ::=
	INTEGER (0..2147483647)

AutonomousType ::=
	OBJECT IDENTIFIER

InstancePointer ::=
	OBJECT IDENTIFIER

VariablePointer ::=
	OBJECT IDENTIFIER

RowPointer ::=
	OBJECT IDENTIFIER

RowStatus ::=
	INTEGER {
	active(1),
	notInService(2),
	notReady(3),
	createAndGo(4),
	createAndWait(5),
	destroy(6)
	}

TimeStamp ::=
	TimeTicks

TimeInterval ::=
	INTEGER (0..2147483647)

DateAndTime ::=
	OCTET STRING (SIZE(8|11))

StorageType ::=
	INTEGER {
	other(1),
	volatile(2),
	nonVolatile(3),
	permanent(4),
	readOnly(5)
	}

TDomain ::=
	OBJECT IDENTIFIER

TAddress ::=
	OCTET STRING (SIZE(1..255))

InetAddressType ::=
	INTEGER {
	unknown(0),
	ipv4(1),
	ipv6(2),
	ipv4z(3),
	ipv6z(4),
	dns(16)
	}

InetAddress ::=
	OCTET STRING (SIZE(0..255))

InetAddressIPv4 ::=
	OCTET STRING (SIZE(4))

InetAddressIPv6 ::=
	OCTET STRING (SIZE(16))

InetAddressIPv4z ::=
	OCTET STRING (SIZE(8))

InetAddressIPv6z ::=
	OCTET STRING (SIZE(20))

InetAddressDNS ::=
	OCTET STRING (SIZE(1..255))

InetAddressPrefixLength ::=
	OCTET STRING

InetPortNumber ::=
	OCTET STRING

InetAutonomousSystemNumber ::=
	OCTET STRING

InetScopeType ::=
	INTEGER {
	interfaceLocal(1),
	linkLocal(2),
	subnetLocal(3),
	adminLocal(4),
	siteLocal(5),
	organizationLocal(8),
	global(14)
	}

InetZoneIndex ::=
	OCTET STRING

InetVersion ::=
	INTEGER {
	unknown(0),
	ipv4(1),
	ipv6(2)
	}

hh3c OBJECT IDENTIFIER ::= { enterprises 25506 }
hh3cCommon OBJECT IDENTIFIER ::= { hh3c 2 }
hh3cTrap OBJECT IDENTIFIER ::= { hh3cCommon 38 }

hh3cTableGroup OBJECT IDENTIFIER ::= { hh3cTrap 1 }

hh3cMacTabStatGroup OBJECT IDENTIFIER ::= { hh3cTableGroup 1 }

hh3cMacTabTrapEnable OBJECT-TYPE
	SYNTAX INTEGER {
	enable(1),
	disable(2)
	}
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Indicates whether hh3cMacTabFullTrap and
hh3cMacTabAlmostFullTrap traps should be generated
when the MAC table is filled."
	::= { hh3cMacTabStatGroup 1 }


hh3cMacTabTrapInterval OBJECT-TYPE
	SYNTAX INTEGER (30..3600)
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Definition of the minimum interval between two
traps which occur when the MAC table is full or
two traps which occur when the MAC table is almost full."
	::= { hh3cMacTabStatGroup 2 }


hh3cMacTabTrapInfo OBJECT IDENTIFIER ::= { hh3cMacTabStatGroup 3 }

hh3cMacTabLen OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The length of the MAC table."
	::= { hh3cMacTabTrapInfo 1 }


hh3cMacTabTrap OBJECT IDENTIFIER ::= { hh3cMacTabStatGroup 4 }

hh3cArpTabStatGroup OBJECT IDENTIFIER ::= { hh3cTableGroup 2 }

hh3cArpTabTrapEnable OBJECT-TYPE
	SYNTAX INTEGER {
	enable(1),
	disable(2)
	}
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Indicates whether hh3cArpTabFullTrap traps
should be generated when the ARP table is filled."
	::= { hh3cArpTabStatGroup 1 }


hh3cArpTabTrapInterval OBJECT-TYPE
	SYNTAX INTEGER (30..3600)
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Definition of the minimum interval between two traps
which occur when the ARP table is filled."
	::= { hh3cArpTabStatGroup 2 }


hh3cArpTabTrapInfo OBJECT IDENTIFIER ::= { hh3cArpTabStatGroup 3 }

hh3cArpTabLen OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The length of the ARP table."
	::= { hh3cArpTabTrapInfo 1 }


hh3cArpTabTrap OBJECT IDENTIFIER ::= { hh3cArpTabStatGroup 4 }

hh3cRtTabStatGroup OBJECT IDENTIFIER ::= { hh3cTableGroup 3 }

hh3cDetailRtTrapTable OBJECT-TYPE
	SYNTAX SEQUENCE OF Hh3cDetailRtTrapEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "This table contains objects to decide what kind of
trap should be sent."
	::= { hh3cRtTabStatGroup 1 }


hh3cDetailRtTrapEntry OBJECT-TYPE
	SYNTAX Hh3cDetailRtTrapEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Entry items"
	INDEX { hh3cDetailRtProType  }

	::= { hh3cDetailRtTrapTable 1 }

hh3cDetailRtTrapEntry ::=
	SEQUENCE {
		hh3cDetailRtProType INTEGER,
		hh3cDetailRtEnable INTEGER
		}

hh3cDetailRtProType OBJECT-TYPE
	SYNTAX INTEGER {
	other(1),
	local(2),
	rip(3),
	isis(4),
	ospf(5),
	bgp(6)
	}
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The index value which uniquely identifies an entry
in the hh3cDetailRtTrapTable."
	::= { hh3cDetailRtTrapEntry 1 }


hh3cDetailRtEnable OBJECT-TYPE
	SYNTAX INTEGER {
	enable(1),
	disable(2)
	}
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Indicates whether hh3cDetailRtTabFullTrap traps
should be generated when a specific routing table
is filled."
	::= { hh3cDetailRtTrapEntry 2 }


hh3cRtTabTrapEnable OBJECT-TYPE
	SYNTAX INTEGER {
	enable(1),
	disable(2)
	}
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Indicates whether hh3cRtTabFullTrap traps should
be generated when the routing table is filled."
	::= { hh3cRtTabStatGroup 2 }


hh3cRtTabTrapInterval OBJECT-TYPE
	SYNTAX INTEGER (30..3600)
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Definition of the minimum interval between two
traps which occur when the routing table is filled."
	::= { hh3cRtTabStatGroup 3 }


hh3cRtTabTrapInfo OBJECT IDENTIFIER ::= { hh3cRtTabStatGroup 4 }

hh3cRtTabLen OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The length of the routing table.  The detail
routing tables also use the same object."
	::= { hh3cRtTabTrapInfo 1 }


hh3cDefaultRtNextHopType OBJECT-TYPE
	SYNTAX InetAddressType
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The IP address type of the next hop of the default route.
The value must be ipv4 or ipv6"
	::= { hh3cRtTabTrapInfo 2 }


hh3cDefaultRtNextHop OBJECT-TYPE
	SYNTAX InetAddress
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The IP address of the next hop of the default route."
	::= { hh3cRtTabTrapInfo 3 }


hh3cDefaultRtOutIf OBJECT-TYPE
	SYNTAX InterfaceIndex
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The index value which uniquely identifies the
local interface through which the next hop of this
route should be reached.  The interface identified
by a particular value of this index is the same
interface as identified by the same value of
ifIndex."
	::= { hh3cRtTabTrapInfo 4 }


hh3cRtTabTrap OBJECT IDENTIFIER ::= { hh3cRtTabStatGroup 5 }

hh3cDefaultRtDelTrapEnable OBJECT-TYPE
	SYNTAX TruthValue
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Indicates whether hh3cDefaultRtDelTrap traps should
be generated when the default route is deleted."
	::= { hh3cRtTabStatGroup 6 }


hh3cMulticastTabStatGroup OBJECT IDENTIFIER ::= { hh3cTableGroup 4 }

hh3cMulticastTabTrapEnable OBJECT-TYPE
	SYNTAX INTEGER {
	enable(1),
	disable(2)
	}
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Indicates whether hh3cMulticastTabFullTrap traps
should be generated when the multicast table is filled."
	::= { hh3cMulticastTabStatGroup 1 }


hh3cMulticastTabTrapInterval OBJECT-TYPE
	SYNTAX INTEGER (30..3600)
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Definition of the minimum interval between two traps
which occur when the multicast table is filled."
	::= { hh3cMulticastTabStatGroup 2 }


hh3cMulticastTabTrapInfo OBJECT IDENTIFIER ::= { hh3cMulticastTabStatGroup 3 }

hh3cMulticastTabType OBJECT-TYPE
	SYNTAX INTEGER {
	lay2(1),
	lay3(2)
	}
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Defining the type of the multicast table, layer2 or layer3."
	::= { hh3cMulticastTabTrapInfo 1 }


hh3cMulticastTabLen OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The length of the multicast table."
	::= { hh3cMulticastTabTrapInfo 2 }


hh3cMulticastTabTrap OBJECT IDENTIFIER ::= { hh3cMulticastTabStatGroup 4 }

hh3cNdTabStatGroup OBJECT IDENTIFIER ::= { hh3cTableGroup 5 }

hh3cNdTabTrapEnable OBJECT-TYPE
	SYNTAX INTEGER {
	enable(1),
	disable(2)
	}
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Indicates whether hh3cNdTabFullTrap traps
should be generated when the ND table is filled."
	::= { hh3cNdTabStatGroup 1 }


hh3cNdTabTrapInterval OBJECT-TYPE
	SYNTAX INTEGER (30..3600)
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Definition of the minimum interval between two traps
which occur when the ND table is filled."
	::= { hh3cNdTabStatGroup 2 }


hh3cNdTabTrapInfo OBJECT IDENTIFIER ::= { hh3cNdTabStatGroup 3 }

hh3cNdTabLen OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The length of the ND table."
	::= { hh3cNdTabTrapInfo 1 }


hh3cNdTabTrap OBJECT IDENTIFIER ::= { hh3cNdTabStatGroup 4 }

hh3cPeriodicalTrapGroup OBJECT IDENTIFIER ::= { hh3cTableGroup 6 }

hh3cPeriodicalTrapObjects OBJECT IDENTIFIER ::= { hh3cPeriodicalTrapGroup 1 }

hh3cPeriodicalTrapInterval OBJECT-TYPE
	SYNTAX INTEGER (0|10..3600)
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Definition of the periodical interval.
If no trap occurs during the certain interval, an hh3cPeriodicalTrap
will be generated.
If the interval is set to 0, no hh3cPeriodicalTrap will be generated."
	::= { hh3cPeriodicalTrapObjects 1 }


hh3cPeriodicalTrapSwitch OBJECT-TYPE
	SYNTAX INTEGER {
	enable(1),
	disable(2)
	}
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Definition of the periodical switch.
If the value is off,the hh3cPeriodicalTrap will not be generated.
the hh3cPeriodicalTrapInterval will be set to 0."
	::= { hh3cPeriodicalTrapObjects 2 }


hh3cPeriodicalTrapInfo OBJECT IDENTIFIER ::= { hh3cPeriodicalTrapGroup 2 }

hh3cPeriodicalNotification OBJECT IDENTIFIER ::= { hh3cPeriodicalTrapGroup 3 }

hh3cPeriodicalNotificationPrefix OBJECT IDENTIFIER ::= { hh3cPeriodicalNotification 0 }

hh3cTrapDesInfo OBJECT IDENTIFIER ::= { hh3cTableGroup 7 }

hh3cTrapDesInfoTable OBJECT-TYPE
	SYNTAX SEQUENCE OF Hh3cTrapDesInfoEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A table of trap destination host address and port ."
	::= { hh3cTrapDesInfo 1 }


hh3cTrapDesInfoEntry OBJECT-TYPE
	SYNTAX Hh3cTrapDesInfoEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The entry of trap destination host address and port."
	INDEX { hh3cTrapDesInfoIndex  }

	::= { hh3cTrapDesInfoTable 1 }

hh3cTrapDesInfoEntry ::=
	SEQUENCE {
		hh3cTrapDesInfoIndex Integer32,
		hh3cTrapDesIPAddress IpAddress,
		hh3cTrapDesPort Integer32,
		hh3cTrapDesRowStatus RowStatus,
		hh3cTrapDesAddrTAddress TAddress
		}

hh3cTrapDesInfoIndex OBJECT-TYPE
	SYNTAX INTEGER (1..20)
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The index of this table."
	::= { hh3cTrapDesInfoEntry 1 }


hh3cTrapDesIPAddress OBJECT-TYPE
	SYNTAX IpAddress
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The host IP address of the trap destination."
	::= { hh3cTrapDesInfoEntry 2 }


hh3cTrapDesPort OBJECT-TYPE
	SYNTAX INTEGER (0..65535)
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The port of the trap destination."
	::= { hh3cTrapDesInfoEntry 3 }


hh3cTrapDesRowStatus OBJECT-TYPE
	SYNTAX RowStatus
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The status of this table entry."
	::= { hh3cTrapDesInfoEntry 4 }


hh3cTrapDesAddrTAddress OBJECT-TYPE
	SYNTAX TAddress
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "This object contains a transport address."
	::= { hh3cTrapDesInfoEntry 5 }


hh3cTrapConfig OBJECT IDENTIFIER ::= { hh3cTableGroup 8 }

hh3cTrapConfigTable OBJECT-TYPE
	SYNTAX SEQUENCE OF Hh3cTrapConfigEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A table of trap configuration."
	::= { hh3cTrapConfig 1 }


hh3cTrapConfigEntry OBJECT-TYPE
	SYNTAX Hh3cTrapConfigEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The entry of trap configuration."
	INDEX { hh3cTrapConfigIndex  }

	::= { hh3cTrapConfigTable 1 }

hh3cTrapConfigEntry ::=
	SEQUENCE {
		hh3cTrapConfigIndex Integer32,
		hh3cTrapConfigName SnmpAdminString,
		hh3cTrapConfigDescr SnmpAdminString,
		hh3cTrapConfigSwitch INTEGER
		}

hh3cTrapConfigIndex OBJECT-TYPE
	SYNTAX INTEGER (1..2147483647)
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The index of this table."
	::= { hh3cTrapConfigEntry 1 }


hh3cTrapConfigName OBJECT-TYPE
	SYNTAX SnmpAdminString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The name of the appointed traps."
	::= { hh3cTrapConfigEntry 2 }


hh3cTrapConfigDescr OBJECT-TYPE
	SYNTAX SnmpAdminString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The description of the appointed traps."
	::= { hh3cTrapConfigEntry 3 }


hh3cTrapConfigSwitch OBJECT-TYPE
	SYNTAX INTEGER {
	enable(1),
	disable(2)
	}
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Indicates whether the appointed traps
should be generated."
	::= { hh3cTrapConfigEntry 4 }


hh3cMacTabFullTrap TRAP-TYPE
	ENTERPRISE hh3cMacTabTrap
	VARIABLES { hh3cMacTabLen }
DESCRIPTION "Send this trap when the MAC table is filled.  The
interval between two traps generated should be longer
than hh3cMacTabTrapInterval."
	::= 1


hh3cMacTabAlmostFullTrap TRAP-TYPE
	ENTERPRISE hh3cMacTabTrap
DESCRIPTION "Send this trap when the MAC table is almost full.  The
interval between two traps generated should be longer
than hh3cMacTabTrapInterval."
	::= 2


hh3cArpTabFullTrap TRAP-TYPE
	ENTERPRISE hh3cArpTabTrap
	VARIABLES { hh3cArpTabLen }
DESCRIPTION "Send this trap when the ARP table is filled.  The
interval between two traps generated should be longer
than hh3cArpTabTrapInterval."
	::= 1


hh3cArpPortDynamicEntryFullTrap TRAP-TYPE
	ENTERPRISE hh3cArpTabTrap
	VARIABLES { hh3cArpTabLen, ifIndex, ifDescr }
DESCRIPTION "Send this trap when the dynamic ARP number of the
port exceeds the limitation. The object hh3cArpTabLen
describes the limitation of the max dynamic ARP number
of this port. The interval between two traps should be
longer than hh3cArpTabTrapInterval."
	::= 2


hh3cRtTabFullTrap TRAP-TYPE
	ENTERPRISE hh3cRtTabTrap
	VARIABLES { hh3cRtTabLen }
DESCRIPTION "Send this trap when the routing table is filled.  The
interval between two traps generated should be longer
than hh3cRtTabTrapInterval."
	::= 1


hh3cDetailRtTabFullTrap TRAP-TYPE
	ENTERPRISE hh3cRtTabTrap
	VARIABLES { hh3cDetailRtProType, hh3cRtTabLen }
DESCRIPTION "Send this trap when the detail routing table is filled.  The
interval between two traps generated should be longer than
hh3cRtTabTrapInterval."
	::= 2


hh3cDefaultRtDelTrap TRAP-TYPE
	ENTERPRISE hh3cRtTabTrap
	VARIABLES { hh3cDetailRtProType, hh3cDefaultRtNextHopType, hh3cDefaultRtNextHop, hh3cDefaultRtOutIf }
DESCRIPTION "Send this trap when the default route is deleted."
	::= 3


hh3cMulticastTabFullTrap TRAP-TYPE
	ENTERPRISE hh3cMulticastTabTrap
	VARIABLES { hh3cMulticastTabType, hh3cMulticastTabLen }
DESCRIPTION "Send this trap when the multicast table is filled.  The
interval between two traps generated should be longer
than hh3cMulticastTabTrapInterval."
	::= 1


hh3cNdTabFullTrap TRAP-TYPE
	ENTERPRISE hh3cNdTabTrap
	VARIABLES { hh3cNdTabLen }
DESCRIPTION "Send this trap when the ND table is filled.  The
interval between two traps generated should be longer
than hh3cNdTabTrapInterval."
	::= 1


hh3cPeriodicalTrap TRAP-TYPE
	ENTERPRISE hh3cPeriodicalNotification
DESCRIPTION "If no trap occurs during the interval spicified by
hh3cPeriodicalTrapInterval, an hh3cPeriodicalTrap
will be generated. If the interval is set to 0, no
hh3cPeriodicalTrap will be generated."
	::= 1


END

