#-MIBFILE: LEFTHAND-NETWORKS-NSM-DNS-MIB.mib

LEFTHAND-NETWORKS-NSM-DNS-MIB DEFINITIONS ::= BEGIN


DisplayString ::=
	OCTET STRING (SIZE(0..255))

PhysAddress ::=
	OCTET STRING

MacAddress ::=
	OCTET STRING (SIZE(6))

TruthValue ::=
	INTEGER {
	true(1),
	false(2)
	}

TestAndIncr ::=
	INTEGER (0..2147483647)

AutonomousType ::=
	OBJECT IDENTIFIER

InstancePointer ::=
	OBJECT IDENTIFIER

VariablePointer ::=
	OBJECT IDENTIFIER

RowPointer ::=
	OBJECT IDENTIFIER

RowStatus ::=
	INTEGER {
	active(1),
	notInService(2),
	notReady(3),
	createAndGo(4),
	createAndWait(5),
	destroy(6)
	}

TimeStamp ::=
	TimeTicks

TimeInterval ::=
	INTEGER (0..2147483647)

DateAndTime ::=
	OCTET STRING (SIZE(8|11))

StorageType ::=
	INTEGER {
	other(1),
	volatile(2),
	nonVolatile(3),
	permanent(4),
	readOnly(5)
	}

TDomain ::=
	OBJECT IDENTIFIER

TAddress ::=
	OCTET STRING (SIZE(1..255))

lefthandnetworks OBJECT IDENTIFIER ::= { enterprises 9804 }
lefthandnetworksRegistrations OBJECT IDENTIFIER ::= { lefthandnetworks 2 }
lhnModules OBJECT IDENTIFIER ::= { lefthandnetworksRegistrations 1 }
lefthandnetworksProducts OBJECT IDENTIFIER ::= { lefthandnetworks 3 }
lhnNsm OBJECT IDENTIFIER ::= { lefthandnetworksProducts 1 }
lefthandnetworksRegistrations OBJECT IDENTIFIER ::= { lefthandnetworks 2 }
lhnNsmDevices OBJECT IDENTIFIER ::= { lhnNsm 1 }
lhnNsmObjects OBJECT IDENTIFIER ::= { lhnNsmDevices 2 }
lhnNsmDNS OBJECT IDENTIFIER ::= { lhnNsmObjects 3 }
lhnNsmDNSModule OBJECT IDENTIFIER ::= { lhnModules 4 }

lhnNsmDNSModuleConformance OBJECT IDENTIFIER ::= { lhnNsmDNSModule 1 }

lhnNsmDNSModuleCompliances OBJECT IDENTIFIER ::= { lhnNsmDNSModuleConformance 1 }

lhnNsmDNSModuleGroups OBJECT IDENTIFIER ::= { lhnNsmDNSModuleConformance 2 }

lefthandNetworksNsmDnsGroup OBJECT IDENTIFIER ::= { lhnNsmDNSModuleGroups 1 }

lefthandNetworksNsmDnsGroupObsolete OBJECT IDENTIFIER ::= { lhnNsmDNSModuleGroups 2 }

dnsNameserverCount OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The number of DNS nameservers configured."
	::= { lhnNsmDNS 1 }


dnsMode OBJECT-TYPE
	SYNTAX INTEGER {
	static(1),
	auto(2)
	}
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Type of nameservers to use. If dnsMode is 'auto'
then the dnsNameserverCount would be zero."
	::= { lhnNsmDNS 2 }


dnsNameserverTable OBJECT-TYPE
	SYNTAX SEQUENCE OF DnsNameserverEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A table of nameservers.
The number of entries is given by dnsNameserverCount."
	::= { lhnNsmDNS 3 }


dnsNameserverEntry OBJECT-TYPE
	SYNTAX DnsNameserverEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A row of DNS servers."
	INDEX { dnsIndex  }

	::= { dnsNameserverTable 1 }

dnsNameserverEntry ::=
	SEQUENCE {
		dnsIndex Unsigned32,
		dnsServer DisplayString,
		dnsRowStatus RowStatus
		}

dnsIndex OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The index for the dnsNameserverTable."
	::= { dnsNameserverEntry 1 }


dnsServer OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The name or IP address of nameserver."
	::= { dnsNameserverEntry 2 }


dnsRowStatus OBJECT-TYPE
	SYNTAX RowStatus
	ACCESS read-only
	STATUS obsolete
	DESCRIPTION "The table row status. Obsolete in SAN/iQ 8.5."
	::= { dnsNameserverEntry 3 }


dnsDomainName OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The DNS domain name."
	::= { lhnNsmDNS 4 }


dnsSuffixCount OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The number of DNS suffixes that are configured."
	::= { lhnNsmDNS 5 }


dnsSuffixTable OBJECT-TYPE
	SYNTAX SEQUENCE OF DnsSuffixEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A table of domain suffixes. The number
of entries is given by dnsSuffixCount."
	::= { lhnNsmDNS 6 }


dnsSuffixEntry OBJECT-TYPE
	SYNTAX DnsSuffixEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A row of DNS suffix information."
	INDEX { dnsSuffixIndex  }

	::= { dnsSuffixTable 1 }

dnsSuffixEntry ::=
	SEQUENCE {
		dnsSuffixIndex Unsigned32,
		dnsSuffix DisplayString,
		dnsSuffixRowStatus RowStatus
		}

dnsSuffixIndex OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The the index for the dnsSuffixTable table."
	::= { dnsSuffixEntry 1 }


dnsSuffix OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The DNS suffix."
	::= { dnsSuffixEntry 2 }


dnsSuffixRowStatus OBJECT-TYPE
	SYNTAX RowStatus
	ACCESS read-only
	STATUS obsolete
	DESCRIPTION "The table row status. Obsolete in SAN/iQ 8.5."
	::= { dnsSuffixEntry 3 }


END

