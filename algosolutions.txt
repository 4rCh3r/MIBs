-- Copyright (c) 2013 Algo Communication Products Ltd. AlgoSolutions-MIB 
DEFINITIONS ::= BEGIN IMPORTS
	enterprises,
	IpAddress,
	Gauge,
	TimeTicks
		FROM RFC1155-SMI
	DisplayString
		FROM RFC1213-MIB
	OBJECT-TYPE
		FROM RFC-1212
	TRAP-TYPE
		FROM RFC-1215; -- Object Identifiers algo OBJECT 
IDENTIFIER ::= { enterprises 41738 } products OBJECT IDENTIFIER ::= { 
algo 1 } hardware OBJECT IDENTIFIER ::= { products 1 } software OBJECT 
IDENTIFIER ::= { products 2 } generic OBJECT IDENTIFIER ::= { hardware 1 
}
sip OBJECT IDENTIFIER ::= { hardware 2 } sipState OBJECT IDENTIFIER ::= 
{ sip 1 } algo8180 OBJECT IDENTIFIER ::= { sip 2 } algo8028 OBJECT 
IDENTIFIER ::= { sip 3 } algo8061 OBJECT IDENTIFIER ::= { sip 4 } 
algo8128 OBJECT IDENTIFIER ::= { sip 5 } algo8036 OBJECT IDENTIFIER ::= 
{ sip 6 } config OBJECT IDENTIFIER ::= { software 1 } -- Object Types -- 
SIP common sipReg OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION
		"SIP registration state."
	::= { sipState 1 }
sipCall OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION
		"SIP call state."
	::= { sipState 2 }
sipProxy OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION
		"SIP proxy/server redundancy state."
	::= { sipState 3 }
-- 8028 ioDoorRelayState OBJECT-TYPE
	SYNTAX INTEGER {
		open(1),
		closed(0)
	}
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION
		"Door relay open/closed state."
	::= { algo8028 1 }
-- Traps sipRegisterFailed TRAP-TYPE
   ENTERPRISE algo
   DESCRIPTION
       "SIP REGISTER failed."
   ::= 1
-- Configuration ringVolume OBJECT-TYPE
    SYNTAX DisplayString
    ACCESS read-write
    STATUS mandatory
    DESCRIPTION
        "Volume of speaker ring"
    ::= { config 1 }
pageVolume OBJECT-TYPE
    SYNTAX DisplayString
    ACCESS read-write
    STATUS mandatory
    DESCRIPTION
        "Volume of speaker page"
    ::= { config 2 }
-- Generic mac OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION
		"MAC address of the device"
	::= { generic 1 }
END
