#-MIBFILE: cpqdsccs.mib

CPQDSCCS-MIB DEFINITIONS ::= BEGIN


compaq OBJECT IDENTIFIER ::= { enterprises 232 }
DisplayString ::=
	OCTET STRING

PhysAddress ::=
	OCTET STRING

mib-2 OBJECT IDENTIFIER ::= { mgmt 1 }
system OBJECT IDENTIFIER ::= { mib-2 1 }
sysName OBJECT IDENTIFIER ::= { system 5 }
mib-2 OBJECT IDENTIFIER ::= { mgmt 1 }
sysDescr OBJECT IDENTIFIER ::= { system 1 }
sysContact OBJECT IDENTIFIER ::= { system 4 }
sysLocation OBJECT IDENTIFIER ::= { system 6 }
cpqDsccs OBJECT IDENTIFIER ::= { compaq 171 }

dsccsTrapInfo OBJECT IDENTIFIER ::= { cpqDsccs 1 }

csRoomName OBJECT-TYPE
	SYNTAX DisplayString (SIZE(0..63))
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The location of the room."
	::= { dsccsTrapInfo 1 }


csContactName OBJECT-TYPE
	SYNTAX DisplayString (SIZE(0..63))
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The contact person name."
	::= { dsccsTrapInfo 2 }


csContactPhoneNumber OBJECT-TYPE
	SYNTAX DisplayString (SIZE(0..63))
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The contact person phone number."
	::= { dsccsTrapInfo 3 }


csProductName OBJECT-TYPE
	SYNTAX DisplayString (SIZE(0..25))
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The product name:  Dynamic Smart Cooling."
	::= { dsccsTrapInfo 4 }


csProductId OBJECT-TYPE
	SYNTAX DisplayString (SIZE(0..10))
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The product ID."
	::= { dsccsTrapInfo 5 }


csSerialNumber OBJECT-TYPE
	SYNTAX DisplayString (SIZE(0..10))
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The product serial number."
	::= { dsccsTrapInfo 6 }


csSoftwareVersion OBJECT-TYPE
	SYNTAX DisplayString (SIZE(0..16))
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The product software version."
	::= { dsccsTrapInfo 7 }


trapEventId OBJECT-TYPE
	SYNTAX INTEGER {
	webGuiDscAutoMode(1001),
	webGuiDscMonitoringMode(1002),
	webGuiDscEmergencyOverrideMode(1003),
	webGuiDscOff(1004),
	webGuiUserLoggedIn(1005),
	webGuiUserLoggedOut(1006),
	webGuiUserSessionExpired(1007),
	ctrlMasterSensorTempAboveAcceptBand(2001),
	ctrlOrphanSensorTempAboveAcceptBand(2002),
	ctrlTempSensorAboveAcceptBand(2003),
	ctrlRegionInfluenceAhuNoSensors(2004),
	ctrlNoTciDataForSensorAndAhu(2005),
	ctrlTciDataExistsForSensorsRemovedFromDsc(2006),
	ctrlSensorTimestampOld(2007),
	ctrlAhuOff(2008),
	ctrlStarted(2009),
	ctrlStopped(2010),
	commisFullStartedByUser(3001),
	commisPartialStartedByUserForAhu(3002),
	commisAbortedByUseer(3003),
	commisFinishedSuccessfully(3004),
	commisFailedSupplyAirTempForAhuDidNotChange(3005),
	commisFailedCouldNotChangeAhuSetPoint(3006),
	commisFailedDataCenterTempExceedThresholdLimit(3007),
	commisCannotPerformOperation(3008),
	commisLoadingConfigProfile(3009),
	commisLoadingPropertiesForConfigProfile(3010),
	commisLoadingConfigParamForProfile(3011),
	commisPerformCheckForAhusInConfigProfile(3012),
	commisInitSubsystemForConfigProfile(3013),
	commisInitSubsystemForCOnfigProfileAndInstance(3014),
	commisStartingForConfigProfile(3015),
	commisBeginInitCycle(3016),
	commisProcessCompletedSuccessfullyForConfiguration(3017),
	commisHaltActiveCommmissioningExecution(3018),
	commisExecutionFailedForConfiguration(3019),
	commisPerformPerturbationForInitDistributionLevel(3020),
	commisPerformPerturbationForAhu(3021),
	commisAttestSystemPerturbationForAhu(3022),
	commisAssertionFailedForAhuFeedbackOnTest(3023),
	commisWaitingForSystemSteadinessFromSensorNetwork(3024),
	commisValidatingAhuSupplyAirTempHasChanged(3025),
	commisStoreSensorNetworkStateAndDataForPerturbation(3026),
	commisStoreBasecaseSensorTempAndData(3027),
	commisStoreSystemPerturbationSensorTempAndData(3028),
	commisMergeDataForConfig(3029),
	commisRollbackAndCleanFromDatabaseChanges(3030),
	commisInitDefaultConfigProfiles(3031),
	commisAhuPerturbationWithinConfig(3032),
	commisCannotPerformMergeOpWhenRunningCommissioning(3033),
	commisCannotHaltCommissioningNoActiveInstanceRunning(3034),
	commisBeginExecutionCycleSettingAhuToConfiguredLevels(3035),
	commisSettingAhusToUniformDistributionLevel(3036),
	commuOpcCommunicationsLost(4001),
	commuMbcHostIsUnreachablePingFailed(4002),
	commuOpcStatus(4003),
	commuTempForSensorOutOfRange(4004),
	commuFailsafeDeviceHeartbeatNotPresent(4005),
	commuReverseAirFlowDetectedInRack(4006),
	commuAhuSupplyAirTempReachedHighLimit(4007),
	commuAhuSupplyAirTempReachedLowLimit(4008),
	commuAhuReturnAirTempReachedHighLimit(4009),
	commuAhuReturnAirTempReachedLowLimit(4010),
	commuAhuPoweredOff(4011),
	commuAhuFluidLeakDetected(4012),
	commuAhuSwitchedToLocalControl(4013),
	commuSensorTimestampOld(4014),
	internalSoftwareUnhandledException(6001),
	other(7001)
	}
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The event ID."
	::= { dsccsTrapInfo 8 }


trapDescription OBJECT-TYPE
	SYNTAX DisplayString (SIZE(0..255))
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The description of the event that generates the trap."
	::= { dsccsTrapInfo 9 }


trapDscTest TRAP-TYPE
	ENTERPRISE cpqDsccs
	VARIABLES { sysName, csRoomName, csContactName, csContactPhoneNumber, csProductName, csProductId, csSerialNumber, csSoftwareVersion, trapEventId, trapDescription }
	--#TYPE      "Test Trap"
	--#SUMMARY "Test Trap for %s, id = %s, description = %s"
	--#ARGUMENTS {0, 8, 9}
	--#SEVERITY  INFORMATIONAL
	--#CATEGORY  "Cpqdsccs"
	--#MSG_FORMATTER "$V1V#System Name: # $V7V#Serial Number: # $V9V#Trap id: # $V10V#Trap Description: #"
DESCRIPTION "Test trap sent to a trap receiver to check proper reception of traps"
	::= 1

trapDscCritical TRAP-TYPE
	ENTERPRISE cpqDsccs
	VARIABLES { sysName, csRoomName, csContactName, csContactPhoneNumber, csProductName, csProductId, csSerialNumber, csSoftwareVersion, trapEventId, trapDescription }
	--#TYPE      "Critical Alarm"
	--#SUMMARY "Critical Alarm for %s, id = %s, description = %s"
	--#ARGUMENTS {0, 8, 9}
	--#SEVERITY  CRITICAL
	--#CATEGORY  "Cpqdsccs"
	--#MSG_FORMATTER "$V1V#System Name: # $V7V#Serial Number: # $V9V#Trap id: # $V10V#Trap Description: #"
DESCRIPTION "A critical alarm has occurred. Action: Check the Trap Description for more information."
	::= 2

trapDscWarning TRAP-TYPE
	ENTERPRISE cpqDsccs
	VARIABLES { sysName, csRoomName, csContactName, csContactPhoneNumber, csProductName, csProductId, csSerialNumber, csSoftwareVersion, trapEventId, trapDescription }
	--#TYPE      "Warning Alarm"
	--#SUMMARY "Warning Alarm for %s, id = %s, description = %s"
	--#ARGUMENTS {0, 8, 9}
	--#SEVERITY  WARNING
	--#CATEGORY  "Cpqdsccs"
	--#MSG_FORMATTER "$V1V#System Name: # $V7V#Serial Number: # $V9V#Trap id: # $V10V#Trap Description: #"
DESCRIPTION "A warning alarm has occurred. Action: Check the Trap Description for more information."
	::= 3

trapDscInformation TRAP-TYPE
	ENTERPRISE cpqDsccs
	VARIABLES { sysName, csRoomName, csContactName, csContactPhoneNumber, csProductName, csProductId, csSerialNumber, csSoftwareVersion, trapEventId, trapDescription }
	--#TYPE      "Information Alarm"
	--#SUMMARY "Information Alarm for %s, id = %s, description = %s"
	--#ARGUMENTS {0, 8, 9}
	--#SEVERITY  INFORMATIONAL
	--#CATEGORY  "Cpqdsccs"
	--#MSG_FORMATTER "$V1V#System Name: # $V7V#Serial Number: # $V9V#Trap id: # $V10V#Trap Description: #"
DESCRIPTION "An informational alarm has occurred. Action: Check the Trap Description for more information."
	::= 4


END

