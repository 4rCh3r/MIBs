#-MIBFILE: cisco-cdp.mib

CISCO-CDP-MIB DEFINITIONS ::= BEGIN


DisplayString ::=
	OCTET STRING (SIZE(0..255))

PhysAddress ::=
	OCTET STRING

MacAddress ::=
	OCTET STRING (SIZE(6))

TruthValue ::=
	INTEGER {
	true(1),
	false(2)
	}

TestAndIncr ::=
	INTEGER (0..2147483647)

AutonomousType ::=
	OBJECT IDENTIFIER

InstancePointer ::=
	OBJECT IDENTIFIER

VariablePointer ::=
	OBJECT IDENTIFIER

RowPointer ::=
	OBJECT IDENTIFIER

RowStatus ::=
	INTEGER {
	active(1),
	notInService(2),
	notReady(3),
	createAndGo(4),
	createAndWait(5),
	destroy(6)
	}

TimeStamp ::=
	TimeTicks

TimeInterval ::=
	INTEGER (0..2147483647)

DateAndTime ::=
	OCTET STRING (SIZE(8|11))

StorageType ::=
	INTEGER {
	other(1),
	volatile(2),
	nonVolatile(3),
	permanent(4),
	readOnly(5)
	}

TDomain ::=
	OBJECT IDENTIFIER

TAddress ::=
	OCTET STRING (SIZE(1..255))

cisco OBJECT IDENTIFIER ::= { enterprises 9 }
ciscoMgmt OBJECT IDENTIFIER ::= { cisco 9 }
CiscoNetworkProtocol ::=
	INTEGER {
	ip(1),
	decnet(2),
	pup(3),
	chaos(4),
	xns(5),
	x121(6),
	appletalk(7),
	clns(8),
	lat(9),
	vines(10),
	cons(11),
	apollo(12),
	stun(13),
	novell(14),
	qllc(15),
	snapshot(16),
	atmIlmi(17),
	bstun(18),
	x25pvc(19),
	ipv6(20),
	cdm(21),
	nbf(22),
	bpxIgx(23),
	clnsPfx(24),
	http(25),
	unknown(65535)
	}

CiscoNetworkAddress ::=
	OCTET STRING

Unsigned64 ::=
	OCTET STRING

InterfaceIndexOrZero ::=
	INTEGER (0..2147483647)

SAPType ::=
	INTEGER (0..254)

CountryCode ::=
	OCTET STRING (SIZE(0|2))

CountryCodeITU ::=
	OCTET STRING

EntPhysicalIndexOrZero ::=
	INTEGER (0..2147483647)

CiscoRowOperStatus ::=
	INTEGER {
	active(1),
	activeDependencies(2),
	inactiveDependency(3),
	missingDependency(4)
	}

CiscoPort ::=
	INTEGER (0..65535)

CiscoIpProtocol ::=
	INTEGER (0..255)

CiscoLocationClass ::=
	INTEGER {
	chassis(1),
	shelf(2),
	slot(3),
	subSlot(4),
	port(5),
	subPort(6),
	channel(7),
	subChannel(8)
	}

CiscoLocationSpecifier ::=
	OCTET STRING (SIZE(0..255))

CiscoInetAddressMask ::=
	OCTET STRING

CiscoAbsZeroBasedCounter32 ::=
	Gauge

CiscoSnapShotAbsCounter32 ::=
	OCTET STRING

CiscoAlarmSeverity ::=
	INTEGER {
	cleared(1),
	indeterminate(2),
	critical(3),
	major(4),
	minor(5),
	warning(6),
	info(7)
	}

PerfHighIntervalCount ::=
	OCTET STRING

ConfigIterator ::=
	OCTET STRING

BulkConfigResult ::=
	OCTET STRING (SIZE(0..255))

ListIndex ::=
	INTEGER (1..2147483647)

ListIndexOrZero ::=
	INTEGER (0..2147483647)

TimeIntervalSec ::=
	OCTET STRING

TimeIntervalMin ::=
	OCTET STRING

CiscoMilliSeconds ::=
	OCTET STRING

MicroSeconds ::=
	OCTET STRING

CiscoPortList ::=
	OCTET STRING (SIZE(0..256))

CiscoPortListRange ::=
	INTEGER {
	oneto2k(1),
	twoKto4K(2),
	fourKto6K(3),
	sixKto8K(4),
	eightKto10K(5),
	tenKto12K(6),
	twelveKto14K(7),
	fourteenKto16K(8)
	}

IfOperStatusReason ::=
	INTEGER {
	other(1),
	none(2),
	hwFailure(3),
	loopbackDiagFailure(4),
	errorDisabled(5),
	swFailure(6),
	linkFailure(7),
	offline(8),
	nonParticipating(9),
	initializing(10),
	vsanInactive(11),
	adminDown(12),
	channelAdminDown(13),
	channelOperSuspended(14),
	channelConfigurationInProgress(15),
	rcfInProgress(16),
	elpFailureIsolation(17),
	escFailureIsolation(18),
	domainOverlapIsolation(19),
	domainAddrAssignFailureIsolation(20),
	domainOtherSideEportIsolation(21),
	domainInvalidRcfReceived(22),
	domainManagerDisabled(23),
	zoneMergeFailureIsolation(24),
	vsanMismatchIsolation(25),
	parentDown(26),
	srcPortNotBound(27),
	interfaceRemoved(28),
	fcotNotPresent(29),
	fcotVendorNotSupported(30),
	incompatibleAdminMode(31),
	incompatibleAdminSpeed(32),
	suspendedByMode(33),
	suspendedBySpeed(34),
	suspendedByWWN(35),
	domainMaxReTxFailure(36),
	eppFailure(37),
	portVsanMismatchIsolation(38),
	loopbackIsolation(39),
	upgradeInProgress(40),
	incompatibleAdminRxBbCredit(41),
	incompatibleAdminRxBufferSize(42),
	portChannelMembersDown(43),
	zoneRemoteNoRespIsolation(44),
	firstPortUpAsEport(45),
	firstPortNotUp(46),
	peerFCIPPortClosedConnection(47),
	peerFCIPPortResetConnection(48),
	fcipPortMaxReTx(49),
	fcipPortKeepAliveTimerExpire(50),
	fcipPortPersistTimerExpire(51),
	fcipPortSrcLinkDown(52),
	fcipPortSrcAdminDown(53),
	fcipPortAdminCfgChange(54),
	fcipSrcPortRemoved(55),
	fcipSrcModuleNotOnline(56),
	invalidConfig(57),
	portBindFailure(58),
	portFabricBindFailure(59),
	noCommonVsanIsolation(60),
	ficonVsanDown(61),
	invalidAttachment(62),
	portBlocked(63),
	incomAdminRxBbCreditPerBuf(64),
	tooManyInvalidFlogis(65),
	deniedDueToPortBinding(66),
	elpFailureRevMismatch(67),
	elpFailureClassFParamErr(68),
	elpFailureClassNParamErr(69),
	elpFailureUnknownFlowCtlCode(70),
	elpFailureInvalidFlowCtlParam(71),
	elpFailureInvalidPortName(72),
	elpFailureInvalidSwitchName(73),
	elpFailureRatovEdtovMismatch(74),
	elpFailureLoopbackDetected(75),
	elpFailureInvalidTxBbCredit(76),
	elpFailureInvalidPayloadSize(77),
	bundleMisCfg(78),
	bitErrRuntimeThreshExceeded(79),
	linkFailLinkReset(80),
	linkFailPortInitFail(81),
	linkFailPortUnusable(82),
	linkFailLossOfSignal(83),
	linkFailLossOfSync(84),
	linkFailNosRcvd(85),
	linkFailOlsRcvd(86),
	linkFailDebounceTimeout(87),
	linkFailLrRcvd(88),
	linkFailCreditLoss(89),
	linkFailRxQOverflow(90),
	linkFailTooManyInterrupts(91),
	linkFailLipRcvdBb(92),
	linkFailBbCreditLoss(93),
	linkFailOpenPrimSignalTimeout(94),
	linkFailOpenPrimSignalReturned(95),
	linkFailLipF8Rcvd(96),
	linkFailLineCardPortShutdown(97),
	fcspAuthenfailure(98),
	fcotChecksumError(99),
	ohmsExtLoopbackTest(100),
	invalidFabricBindExchange(101),
	tovMismatch(102),
	ficonNotEnabled(103),
	ficonNoPortNumber(104),
	ficonBeingEnabled(105),
	ePortProhibited(106),
	portGracefulShutdown(107),
	trunkNotFullyActive(108),
	fabricBindingSwitchWwnNotFound(109),
	fabricBindingDomainInvalid(110),
	fabricBindingDbMismatch(111),
	fabricBindingNoRspFromPeer(112),
	dpvmVsanSuspended(113),
	dpvmVsanNotFound(114),
	trackedPortDown(115),
	ecSuspendedOnLoop(116),
	isolateBundleMisCfg(117),
	noPeerBundleSupport(118),
	portBringupIsolation(119),
	domainNotAllowedIsolated(120),
	virtualIvrDomainOverlapIsolation(121),
	outOfService(122),
	portAuthFailed(123),
	bundleStandby(124),
	portConnectorTypeErr(125),
	errorDisabledReInitLmtReached(126),
	ficonDupPortNum(127),
	localRcf(128),
	twoSwitchesWithSameWWN(129),
	invalidOtherSidePrincEFPReqRecd(130),
	domainOther(131)
	}

EntLogicalIndexOrZero ::=
	INTEGER (0..2147483647)

CiscoURLString ::=
	OCTET STRING (SIZE(1..255))

CiscoHTTPResponseStatusCode ::=
	OCTET STRING

CvE164Address ::=
	OCTET STRING (SIZE(1..128))

VlanIndex ::=
	INTEGER (0..4095)

ManagementDomainIndex ::=
	INTEGER (1..255)

VlanType ::=
	INTEGER {
	ethernet(1),
	fddi(2),
	tokenRing(3),
	fddiNet(4),
	trNet(5),
	deprecated(6)
	}

VlanTypeExt ::=
	OCTET STRING {
	vtpmanageable(0),
	internal(1),
	reserved(2),
	rspan(3),
	dynamicGvrp(4)
	}

OwnerString ::=
	OCTET STRING (SIZE(0..255))

InterfaceIndex ::=
	INTEGER (1..2147483647)

mib-2 OBJECT IDENTIFIER ::= { mgmt 1 }
interfaces OBJECT IDENTIFIER ::= { mib-2 2 }
ifTable OBJECT IDENTIFIER ::= { interfaces 2 }
ifEntry OBJECT IDENTIFIER ::= { ifTable 1 }
ifIndex OBJECT IDENTIFIER ::= { ifEntry 1 }
ciscoCdpMIB OBJECT IDENTIFIER ::= { ciscoMgmt 23 }

ciscoCdpMIBObjects OBJECT IDENTIFIER ::= { ciscoCdpMIB 1 }

cdpInterface OBJECT IDENTIFIER ::= { ciscoCdpMIBObjects 1 }

cdpCache OBJECT IDENTIFIER ::= { ciscoCdpMIBObjects 2 }

cdpGlobal OBJECT IDENTIFIER ::= { ciscoCdpMIBObjects 3 }

cdpInterfaceTable OBJECT-TYPE
	SYNTAX SEQUENCE OF CdpInterfaceEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The (conceptual) table containing the status of CDP on
the device's interfaces."
	::= { cdpInterface 1 }


cdpInterfaceEntry OBJECT-TYPE
	SYNTAX CdpInterfaceEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "An entry (conceptual row) in the cdpInterfaceTable,
containing the status of CDP on an interface."
	INDEX { cdpInterfaceIfIndex  }

	::= { cdpInterfaceTable 1 }

cdpInterfaceEntry ::=
	SEQUENCE {
		cdpInterfaceIfIndex Integer32,
		cdpInterfaceEnable TruthValue,
		cdpInterfaceMessageInterval INTEGER,
		cdpInterfaceGroup Integer32,
		cdpInterfacePort Integer32
		}

cdpInterfaceIfIndex OBJECT-TYPE
	SYNTAX INTEGER (0..2147483647)
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The ifIndex value of the local interface.

For 802.3 Repeaters on which the repeater ports do not
have ifIndex values assigned, this value is a unique
value for the port, and greater than any ifIndex value
supported by the repeater; in this case, the specific
port is indicated by corresponding values of
cdpInterfaceGroup and cdpInterfacePort, where these
values correspond to the group number and port number
values of RFC 1516."
	::= { cdpInterfaceEntry 1 }


cdpInterfaceEnable OBJECT-TYPE
	SYNTAX TruthValue
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "An indication of whether the Cisco Discovery Protocol
is currently running on this interface.  This variable
has no effect when CDP is disabled (cdpGlobalRun = FALSE)."
	::= { cdpInterfaceEntry 2 }


cdpInterfaceMessageInterval OBJECT-TYPE
	SYNTAX INTEGER (5..254)
	ACCESS read-only
	STATUS obsolete
	DESCRIPTION "The interval at which CDP messages are to be generated
on this interface.  The default value is 60 seconds."
	::= { cdpInterfaceEntry 3 }


cdpInterfaceGroup OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "This object is only relevant to interfaces which are
repeater ports on 802.3 repeaters.  In this situation,
it indicates the RFC1516 group number of the repeater
port which corresponds to this interface."
	::= { cdpInterfaceEntry 4 }


cdpInterfacePort OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "This object is only relevant to interfaces which are
repeater ports on 802.3 repeaters.  In this situation,
it indicates the RFC1516 port number of the repeater
port which corresponds to this interface."
	::= { cdpInterfaceEntry 5 }


cdpInterfaceExtTable OBJECT-TYPE
	SYNTAX SEQUENCE OF CdpInterfaceExtEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "This table contains the additional CDP configuration on
the device's interfaces."
	::= { cdpInterface 2 }


cdpInterfaceExtEntry OBJECT-TYPE
	SYNTAX CdpInterfaceExtEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "An entry in the cdpInterfaceExtTable contains the values
configured for Extented Trust TLV and COS (Class of Service)
for Untrusted Ports TLV on an interface which supports the
sending of these TLVs."
	INDEX { ifIndex  }

	::= { cdpInterfaceExtTable 1 }

cdpInterfaceExtEntry ::=
	SEQUENCE {
		cdpInterfaceExtendedTrust INTEGER,
		cdpInterfaceCosForUntrustedPort Unsigned32
		}

cdpInterfaceExtendedTrust OBJECT-TYPE
	SYNTAX INTEGER {
	trusted(1),
	noTrust(2)
	}
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Indicates the value to be sent by Extended Trust TLV.

If trusted(1) is configured, the value of Extended Trust TLV
is one byte in length with its least significant bit equal to
1 to indicate extended trust. All other bits are 0.

If noTrust(2) is configured, the value of Extended Trust TLV
is one byte in length with its least significant bit equal to
0 to indicate no extended trust. All other bits are 0."
	::= { cdpInterfaceExtEntry 1 }


cdpInterfaceCosForUntrustedPort OBJECT-TYPE
	SYNTAX INTEGER (0..7)
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Indicates the value to be sent by COS for Untrusted Ports TLV."
	::= { cdpInterfaceExtEntry 2 }


cdpCacheTable OBJECT-TYPE
	SYNTAX SEQUENCE OF CdpCacheEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The (conceptual) table containing the cached
information obtained via receiving CDP messages."
	::= { cdpCache 1 }


cdpCacheEntry OBJECT-TYPE
	SYNTAX CdpCacheEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "An entry (conceptual row) in the cdpCacheTable,
containing the information received via CDP on one
interface from one device.  Entries appear when
a CDP advertisement is received from a neighbor
device.  Entries disappear when CDP is disabled
on the interface, or globally."
	INDEX { cdpCacheIfIndex , cdpCacheDeviceIndex }

	::= { cdpCacheTable 1 }

cdpCacheEntry ::=
	SEQUENCE {
		cdpCacheIfIndex Integer32,
		cdpCacheDeviceIndex Integer32,
		cdpCacheAddressType CiscoNetworkProtocol,
		cdpCacheAddress CiscoNetworkAddress,
		cdpCacheVersion DisplayString,
		cdpCacheDeviceId DisplayString,
		cdpCacheDevicePort DisplayString,
		cdpCachePlatform DisplayString,
		cdpCacheCapabilities OCTET STRING,
		cdpCacheVTPMgmtDomain DisplayString,
		cdpCacheNativeVLAN VlanIndex,
		cdpCacheDuplex INTEGER,
		cdpCacheApplianceID Unsigned32,
		cdpCacheVlanID Unsigned32,
		cdpCachePowerConsumption Unsigned32,
		cdpCacheMTU Unsigned32,
		cdpCacheSysName DisplayString,
		cdpCacheSysObjectID OBJECT IDENTIFIER,
		cdpCachePrimaryMgmtAddrType CiscoNetworkProtocol,
		cdpCachePrimaryMgmtAddr CiscoNetworkAddress,
		cdpCacheSecondaryMgmtAddrType CiscoNetworkProtocol,
		cdpCacheSecondaryMgmtAddr CiscoNetworkAddress,
		cdpCachePhysLocation DisplayString,
		cdpCacheLastChange TimeStamp
		}

cdpCacheIfIndex OBJECT-TYPE
	SYNTAX INTEGER (0..2147483647)
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Normally, the ifIndex value of the local interface.
For 802.3 Repeaters for which the repeater ports do not
have ifIndex values assigned, this value is a unique
value for the port, and greater than any ifIndex value
supported by the repeater; the specific port number in
this case, is given by the corresponding value of
cdpInterfacePort."
	::= { cdpCacheEntry 1 }


cdpCacheDeviceIndex OBJECT-TYPE
	SYNTAX INTEGER (0..2147483647)
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A unique value for each device from which CDP messages
are being received."
	::= { cdpCacheEntry 2 }


cdpCacheAddressType OBJECT-TYPE
	SYNTAX CiscoNetworkProtocol
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "An indication of the type of address contained in the
corresponding instance of cdpCacheAddress."
	::= { cdpCacheEntry 3 }


cdpCacheAddress OBJECT-TYPE
	SYNTAX CiscoNetworkAddress
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The (first) network-layer address of the device's
SNMP-agent as reported in the Address TLV of the most recently
received CDP message.  For example, if the corresponding
instance of cacheAddressType had the value 'ip(1)', then
this object would be an IP-address."
	::= { cdpCacheEntry 4 }


cdpCacheVersion OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The Version string as reported in the most recent CDP
message.  The zero-length string indicates no Version
field (TLV) was reported in the most recent CDP
message."
	::= { cdpCacheEntry 5 }


cdpCacheDeviceId OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The Device-ID string as reported in the most recent CDP
message.  The zero-length string indicates no Device-ID
field (TLV) was reported in the most recent CDP
message."
	::= { cdpCacheEntry 6 }


cdpCacheDevicePort OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The Port-ID string as reported in the most recent CDP
message.  This will typically be the value of the ifName
object (e.g., 'Ethernet0').  The zero-length string
indicates no Port-ID field (TLV) was reported in the
most recent CDP message."
	::= { cdpCacheEntry 7 }


cdpCachePlatform OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The Device's Hardware Platform as reported in the most
recent CDP message.  The zero-length string indicates
that no Platform field (TLV) was reported in the most
recent CDP message."
	::= { cdpCacheEntry 8 }


cdpCacheCapabilities OBJECT-TYPE
	SYNTAX OCTET STRING (SIZE(0..4))
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The Device's Functional Capabilities as reported in the
most recent CDP message.  For latest set of specific
values, see the latest version of the CDP specification.
The zero-length string indicates no Capabilities field
(TLV) was reported in the most recent CDP message."
	::= { cdpCacheEntry 9 }


cdpCacheVTPMgmtDomain OBJECT-TYPE
	SYNTAX DisplayString (SIZE(0..32))
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The VTP Management Domain for the remote device's interface, 
as reported in the most recently received CDP message.
This object is not instantiated if no VTP Management Domain field
(TLV) was reported in the most recently received CDP message."
	::= { cdpCacheEntry 10 }


cdpCacheNativeVLAN OBJECT-TYPE
	SYNTAX VlanIndex
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The remote device's interface's native VLAN, as reported in the 
most recent CDP message.  The value 0 indicates
no native VLAN field (TLV) was reported in the most
recent CDP message."
	::= { cdpCacheEntry 11 }


cdpCacheDuplex OBJECT-TYPE
	SYNTAX INTEGER {
	unknown(1),
	halfduplex(2),
	fullduplex(3)
	}
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The remote device's interface's duplex mode, as reported in the 
most recent CDP message.  The value unknown(1) indicates
no duplex mode field (TLV) was reported in the most
recent CDP message."
	::= { cdpCacheEntry 12 }


cdpCacheApplianceID OBJECT-TYPE
	SYNTAX INTEGER (0..255)
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The remote device's Appliance ID, as reported in the 
most recent CDP message. This object is not instantiated if
no Appliance VLAN-ID field (TLV) was reported in the most
recently received CDP message."
	::= { cdpCacheEntry 13 }


cdpCacheVlanID OBJECT-TYPE
	SYNTAX INTEGER (0..4095)
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The remote device's VoIP VLAN ID, as reported in the 
most recent CDP message. This object is not instantiated if
no Appliance VLAN-ID field (TLV) was reported in the most
recently received CDP message."
	::= { cdpCacheEntry 14 }


cdpCachePowerConsumption OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The amount of power consumed by remote device, as reported
in the most recent CDP message. This object is not instantiated
if no Power Consumption field (TLV) was reported in the most
recently received CDP message."
	::= { cdpCacheEntry 15 }


cdpCacheMTU OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Indicates the size of the largest datagram that can be
sent/received by remote device, as reported in the most recent
CDP message. This object is not instantiated if no MTU field
(TLV) was reported in the most recently received CDP message."
	::= { cdpCacheEntry 16 }


cdpCacheSysName OBJECT-TYPE
	SYNTAX DisplayString (SIZE(0..255))
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Indicates the value of the remote device's sysName MIB object.
By convention, it is the device's fully qualified domain name.
This object is not instantiated if no sysName field (TLV) was
reported in the most recently received CDP message."
	::= { cdpCacheEntry 17 }


cdpCacheSysObjectID OBJECT-TYPE
	SYNTAX OBJECT IDENTIFIER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Indicates the value of the remote device's sysObjectID MIB
object. This object is not instantiated if no sysObjectID field
(TLV) was reported in the most recently received CDP message."
	::= { cdpCacheEntry 18 }


cdpCachePrimaryMgmtAddrType OBJECT-TYPE
	SYNTAX CiscoNetworkProtocol
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "An indication of the type of address contained in the
corresponding instance of cdpCachePrimaryMgmtAddress."
	::= { cdpCacheEntry 19 }


cdpCachePrimaryMgmtAddr OBJECT-TYPE
	SYNTAX CiscoNetworkAddress
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "This object indicates the (first) network layer address at
which the device will accept SNMP messages as reported in the
most recently received CDP message. If the corresponding
instance of cdpCachePrimaryMgmtAddrType has the value 'ip(1)',
then this object would be an IP-address. If the remote device
is not currently manageable via any network protocol, this
object has the special value of the IPv4 address 0.0.0.0.
If the most recently received CDP message did not contain any
primary address at which the device prefers to receive
SNMP messages, then this object is not instanstiated."
	::= { cdpCacheEntry 20 }


cdpCacheSecondaryMgmtAddrType OBJECT-TYPE
	SYNTAX CiscoNetworkProtocol
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "An indication of the type of address contained in the
corresponding instance of cdpCacheSecondaryMgmtAddress."
	::= { cdpCacheEntry 21 }


cdpCacheSecondaryMgmtAddr OBJECT-TYPE
	SYNTAX CiscoNetworkAddress
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "This object indicates the alternate network layer address
(other than the one indicated by cdpCachePrimaryMgmtAddr) at
which the device will accept SNMP messages as reported in the
most recently received CDP message. If the corresponding
instance of cdpCacheSecondaryMgmtAddrType has the value 'ip(1)',
then this object would be an IP-address. If the most recently
received CDP message did not contain such an alternate network
layer address, then this object is not instanstiated."
	::= { cdpCacheEntry 22 }


cdpCachePhysLocation OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Indicates the physical location, as reported by the most recent
CDP message, of a connector which is on, or physically connected
to, the remote device's interface over which the CDP packet is
sent. This object is not instantiated if no Physical Location
field (TLV) was reported by the most recently received CDP
message."
	::= { cdpCacheEntry 23 }


cdpCacheLastChange OBJECT-TYPE
	SYNTAX TimeStamp
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Indicates the time when this cache entry was last changed.
This object is initialised to the current time when the entry
gets created and updated to the current time whenever the value
of any (other) object instance in the corresponding row is
modified."
	::= { cdpCacheEntry 24 }


cdpGlobalRun OBJECT-TYPE
	SYNTAX TruthValue
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "An indication of whether the Cisco Discovery Protocol
is currently running.  Entries in cdpCacheTable are
deleted when CDP is disabled."
	::= { cdpGlobal 1 }


cdpGlobalMessageInterval OBJECT-TYPE
	SYNTAX INTEGER (5..254)
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The interval at which CDP messages are to be generated.
The default value is 60 seconds."
	::= { cdpGlobal 2 }


cdpGlobalHoldTime OBJECT-TYPE
	SYNTAX INTEGER (10..255)
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The time for the receiving device holds CDP message.
The default value is 180 seconds."
	::= { cdpGlobal 3 }


cdpGlobalDeviceId OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The device ID advertised by this device. The format of this
device id is characterized by the value of 
cdpGlobalDeviceIdFormat object."
	::= { cdpGlobal 4 }


cdpGlobalLastChange OBJECT-TYPE
	SYNTAX TimeStamp
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Indicates the time when the cache table was last changed. It
is the most recent time at which any row was last created,
modified or deleted."
	::= { cdpGlobal 5 }


cdpGlobalDeviceIdFormatCpb OBJECT-TYPE
	SYNTAX OCTET STRING {
	serialNumber(0),
	macAddress(1),
	other(2)
	}
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Indicate the Device-Id format capability of the device.

serialNumber(0) indicates that the device supports using
serial number as the format for its DeviceId.

macAddress(1) indicates that the device supports using
layer 2 MAC address as the format for its DeviceId.

other(2) indicates that the device supports using its
platform specific format as the format for its DeviceId."
	::= { cdpGlobal 6 }


cdpGlobalDeviceIdFormat OBJECT-TYPE
	SYNTAX INTEGER {
	serialNumber(1),
	macAddress(2),
	other(3)
	}
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "An indication of the format of Device-Id contained in the
corresponding instance of cdpGlobalDeviceId. User can only
specify the formats that the device is capable of as
denoted in cdpGlobalDeviceIdFormatCpb object.

serialNumber(1) indicates that the value of cdpGlobalDeviceId 
object is in the form of an ASCII string contain the device
serial number. 

macAddress(2) indicates that the value of cdpGlobalDeviceId 
object is in the form of Layer 2 MAC address.

other(3) indicates that the value of cdpGlobalDeviceId object
is in the form of a platform specific ASCII string contain
info that identifies the device. For example: ASCII string
contains serialNumber appended/prepened with system name."
	::= { cdpGlobal 7 }


ciscoCdpMIBConformance OBJECT IDENTIFIER ::= { ciscoCdpMIB 2 }

ciscoCdpMIBCompliances OBJECT IDENTIFIER ::= { ciscoCdpMIBConformance 1 }

ciscoCdpMIBGroups OBJECT IDENTIFIER ::= { ciscoCdpMIBConformance 2 }

ciscoCdpMIBGroup OBJECT IDENTIFIER ::= { ciscoCdpMIBGroups 1 }

ciscoCdpMIBGroupV11R01 OBJECT IDENTIFIER ::= { ciscoCdpMIBGroups 2 }

ciscoCdpMIBGroupV11R02 OBJECT IDENTIFIER ::= { ciscoCdpMIBGroups 3 }

ciscoCdpMIBGroupV12R02 OBJECT IDENTIFIER ::= { ciscoCdpMIBGroups 5 }

ciscoCdpV2MIBGroup OBJECT IDENTIFIER ::= { ciscoCdpMIBGroups 6 }

ciscoCdpV2IfExtGroup OBJECT IDENTIFIER ::= { ciscoCdpMIBGroups 7 }

END

