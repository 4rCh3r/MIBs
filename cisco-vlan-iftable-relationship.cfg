#-MIBFILE: cisco-vlan-iftable-relationship.mib

CISCO-VLAN-IFTABLE-RELATIONSHIP-MIB DEFINITIONS ::= BEGIN


cisco OBJECT IDENTIFIER ::= { enterprises 9 }
ciscoMgmt OBJECT IDENTIFIER ::= { cisco 9 }
CiscoNetworkProtocol ::=
	INTEGER {
	ip(1),
	decnet(2),
	pup(3),
	chaos(4),
	xns(5),
	x121(6),
	appletalk(7),
	clns(8),
	lat(9),
	vines(10),
	cons(11),
	apollo(12),
	stun(13),
	novell(14),
	qllc(15),
	snapshot(16),
	atmIlmi(17),
	bstun(18),
	x25pvc(19),
	ipv6(20),
	cdm(21),
	nbf(22),
	bpxIgx(23),
	clnsPfx(24),
	http(25),
	unknown(65535)
	}

CiscoNetworkAddress ::=
	OCTET STRING

InterfaceIndexOrZero ::=
	INTEGER (0..2147483647)

SAPType ::=
	INTEGER (0..254)

CountryCode ::=
	OCTET STRING (SIZE(0|2))

CountryCodeITU ::=
	OCTET STRING

EntPhysicalIndexOrZero ::=
	INTEGER (0..2147483647)

CiscoRowOperStatus ::=
	INTEGER {
	active(1),
	activeDependencies(2),
	inactiveDependency(3),
	missingDependency(4)
	}

CiscoPort ::=
	INTEGER (0..65535)

CiscoIpProtocol ::=
	INTEGER (0..255)

CiscoLocationClass ::=
	INTEGER {
	chassis(1),
	shelf(2),
	slot(3),
	subSlot(4),
	port(5),
	subPort(6),
	channel(7),
	subChannel(8)
	}

CiscoLocationSpecifier ::=
	OCTET STRING (SIZE(0..255))

CiscoInetAddressMask ::=
	OCTET STRING

CiscoAbsZeroBasedCounter32 ::=
	Gauge

CiscoSnapShotAbsCounter32 ::=
	OCTET STRING

CiscoAlarmSeverity ::=
	INTEGER {
	cleared(1),
	indeterminate(2),
	critical(3),
	major(4),
	minor(5),
	warning(6),
	info(7)
	}

PerfHighIntervalCount ::=
	OCTET STRING

ConfigIterator ::=
	OCTET STRING

BulkConfigResult ::=
	OCTET STRING (SIZE(0..255))

ListIndex ::=
	INTEGER (1..2147483647)

ListIndexOrZero ::=
	INTEGER (0..2147483647)

TimeIntervalSec ::=
	OCTET STRING

TimeIntervalMin ::=
	OCTET STRING

CiscoMilliSeconds ::=
	OCTET STRING

MicroSeconds ::=
	OCTET STRING

OwnerString ::=
	OCTET STRING (SIZE(0..255))

InterfaceIndex ::=
	INTEGER (1..2147483647)

VlanIndex ::=
	INTEGER (0..4095)

ManagementDomainIndex ::=
	INTEGER (1..255)

VlanType ::=
	INTEGER {
	ethernet(1),
	fddi(2),
	tokenRing(3),
	fddiNet(4),
	trNet(5),
	deprecated(6)
	}

VlanTypeExt ::=
	OCTET STRING {
	vtpmanageable(0),
	internal(1),
	reserved(2),
	rspan(3)
	}

ciscoVlanIfTableRelationshipMIB OBJECT IDENTIFIER ::= { ciscoMgmt 128 }

cviMIBObjects OBJECT IDENTIFIER ::= { ciscoVlanIfTableRelationshipMIB 1 }

cviGlobals OBJECT IDENTIFIER ::= { cviMIBObjects 1 }

cviVlanInterfaceIndexTable OBJECT-TYPE
	SYNTAX SEQUENCE OF CviVlanInterfaceIndexEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The cviVlanInterfaceIndexTable provides a way to 
translate a VLAN-id in to an ifIndex, so that 
the routed VLAN interface's routing configuration 
can be obtained from interface entry in ipRouteTable.

Note that some routers can have interfaces to multiple
VLAN management domains, and therefore can have multiple 
routed VLAN interfaces which connect to different VLANs 
having the same VLAN-id.  Thus, it is possible to have 
multiple rows in this table for the same VLAN-id.

The cviVlanInterfaceIndexTable also provides a way
to find the VLAN-id from an ifTable VLAN's ifIndex."
	::= { cviGlobals 1 }

cviVlanInterfaceIndexTable ::=
	SEQUENCE {
		cviVlanId VlanIndex,
		cviPhysicalIfIndex InterfaceIndexOrZero,
		cviRoutedVlanIfIndex InterfaceIndex
		}

cviVlanInterfaceIndexEntry OBJECT-TYPE
	SYNTAX CviVlanInterfaceIndexEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Each entry represents a routed VLAN interface, its
corresponding physical port if any, and the ifTable entry
for the routed VLAN interface.

Entries are created by the agent when the routed VLAN interface
is created.  Operational status of routing does not affect
the entries listed here.  For routing configuration please refer
to ipRouteTable.

Entries are deleted by the agent when the routed VLAN interface
is removed from the system configuration."
	INDEX { cviVlanId , cviPhysicalIfIndex }

	::= { cviVlanInterfaceIndexTable 1 }


cviVlanId OBJECT-TYPE
	SYNTAX VlanIndex
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The VLAN-id number of the routed VLAN interface."
	::= { cviVlanInterfaceIndexEntry 1 }


cviPhysicalIfIndex OBJECT-TYPE
	SYNTAX InterfaceIndexOrZero
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "For subinterfaces, this object is the ifIndex of the 
physical interface for the subinterface.

For Switch Virtual Interfaces (SVIs), this object is zero."
	::= { cviVlanInterfaceIndexEntry 2 }


cviRoutedVlanIfIndex OBJECT-TYPE
	SYNTAX InterfaceIndex
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The index for the ifTable entry associated with 
this routed VLAN interface."
	::= { cviVlanInterfaceIndexEntry 3 }


cviMIBConformance OBJECT IDENTIFIER ::= { cviMIBObjects 3 }

cviMIBCompliances OBJECT IDENTIFIER ::= { cviMIBConformance 1 }

cviMIBGroups OBJECT IDENTIFIER ::= { cviMIBConformance 2 }

cviMIBGroup OBJECT IDENTIFIER ::= { cviMIBGroups 1 }

END

