#-MIBFILE: old-cisco-flash.mib

OLD-CISCO-FLASH-MIB DEFINITIONS ::= BEGIN


DisplayString ::=
	OCTET STRING

PhysAddress ::=
	OCTET STRING

cisco OBJECT IDENTIFIER ::= { enterprises 9 }
local OBJECT IDENTIFIER ::= { cisco 2 }
lflash OBJECT IDENTIFIER ::= { local 10 }

flashSize OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS optional
	DESCRIPTION "Total Size in Octets of Flash memory"
	::= { lflash 1 }


flashFree OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS optional
	DESCRIPTION "Unused Size in Octets of Flash memory"
	::= { lflash 2 }


flashController OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS optional
	DESCRIPTION "Provides the type of Flash controller 
(either CCTL or CCTL2) installed in the 
router."
	::= { lflash 3 }


flashCard OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS optional
	DESCRIPTION "Provides the type of Flash Card installed
in the router. For example, the type of 
Flash Card could be either CSC-MS or 
CSC-MC+."
	::= { lflash 4 }


flashVPP OBJECT-TYPE
	SYNTAX INTEGER {
	installed(1),
	missing(2)
	}
	ACCESS read-only
	STATUS optional
	DESCRIPTION "State of the VPP DIP jumper on the Flash
memory card. Files can be written to the
Flash memory card only if the VPP DIP
jumper is turned on."
	::= { lflash 5 }


flashErase OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS optional
	DESCRIPTION "Request to erase flash memory"
	::= { lflash 6 }


flashEraseTime OBJECT-TYPE
	SYNTAX TimeTicks
	ACCESS read-only
	STATUS optional
	DESCRIPTION "Indicates the value of sysUptime the last
time Flash memory was erased. If the flash
had not been erased after powerup it has a
value of 0 days 00:00:00."
	::= { lflash 7 }


flashEraseStatus OBJECT-TYPE
	SYNTAX INTEGER {
	flashOpInProgress(1),
	flashOpSuccess(2),
	flashOpFailure(3),
	flashReadOnly(4),
	flashOpenFailure(5),
	bufferAllocationFailure(6),
	noOpAfterPowerOn(7)
	}
	ACCESS read-only
	STATUS optional
	DESCRIPTION "Status of current or last flash erasing"
	::= { lflash 8 }


flashToNet OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS optional
	DESCRIPTION "Write flash entry to tftp server. Value
should be the name of the flash entry to
send. Instance is the IP address of the tftp
host."
	::= { lflash 9 }


flashToNetTime OBJECT-TYPE
	SYNTAX TimeTicks
	ACCESS read-only
	STATUS optional
	DESCRIPTION "Indicates the value of sysUpTime the last
time a file was transfered from Flash memory
on the router to a TFTP host. Returns
0 days 00:00:00 if there had been no transfer
since powerup."
	::= { lflash 10 }


flashToNetStatus OBJECT-TYPE
	SYNTAX INTEGER {
	flashOpInProgress(1),
	flashOpSuccess(2),
	flashOpFailure(3),
	flashReadOnly(4),
	flashOpenFailure(5),
	bufferAllocationFailure(6),
	noOpAfterPowerOn(7)
	}
	ACCESS read-only
	STATUS optional
	DESCRIPTION "Status of current or last flash to net
transfer"
	::= { lflash 11 }


netToFlash OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS optional
	DESCRIPTION "Write flash entry from tftp server. Value
should be the name of the flash entry to
write. Instance is the IP address of the tftp
host."
	::= { lflash 12 }


netToFlashTime OBJECT-TYPE
	SYNTAX TimeTicks
	ACCESS read-only
	STATUS optional
	DESCRIPTION "Indicates the value of sysUpTime the last
time file was copied from a Trivial File
Transfer Protocol(TFTP) server to the Flash
memory on the router. Returns 0 days 00:00:00
if there had been no transfers since powerup."
	::= { lflash 13 }


netToFlashStatus OBJECT-TYPE
	SYNTAX INTEGER {
	flashOpInProgress(1),
	flashOpSuccess(2),
	flashOpFailure(3),
	flashReadOnly(4),
	flashOpenFailure(5),
	bufferAllocationFailure(6),
	noOpAfterPowerOn(7)
	}
	ACCESS read-only
	STATUS optional
	DESCRIPTION "Status of current or last net to flash
transfer"
	::= { lflash 14 }


flashStatus OBJECT-TYPE
	SYNTAX INTEGER {
	busy(1),
	available(2)
	}
	ACCESS read-only
	STATUS optional
	DESCRIPTION "Status of the availability of flash"
	::= { lflash 15 }


flashEntries OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS optional
	DESCRIPTION "Number of entries in the flash directory"
	::= { lflash 16 }


lflashFileDirTable OBJECT-TYPE
	SYNTAX SEQUENCE OF LflashFileDirEntry
	ACCESS read-only
	STATUS optional
	DESCRIPTION " A list of flash file entries."
	::= { lflash 17 }


lflashFileDirEntry OBJECT-TYPE
	SYNTAX LflashFileDirEntry
	ACCESS read-only
	STATUS optional
	DESCRIPTION "A collection of flash eprom objects"
	INDEX { flashEntries  }

	::= { lflashFileDirTable 1 }

lflashFileDirEntry ::=
	SEQUENCE {
		flashDirName DisplayString,
		flashDirSize INTEGER,
		flashDirStatus INTEGER
		}

flashDirName OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS optional
	DESCRIPTION "Name associated with the flash entry"
	::= { lflashFileDirEntry 1 }


flashDirSize OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS optional
	DESCRIPTION "Size in Octets of a flash entry"
	::= { lflashFileDirEntry 2 }


flashDirStatus OBJECT-TYPE
	SYNTAX INTEGER {
	valid(1),
	deleted(2)
	}
	ACCESS read-only
	STATUS optional
	DESCRIPTION "Indicates the status of the entry"
	::= { lflashFileDirEntry 3 }


END

