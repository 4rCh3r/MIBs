#-MIBFILE: pfc.mib

PATROL-MIB DEFINITIONS ::= BEGIN


DisplayString ::=
	OCTET STRING (SIZE(0..255))

PhysAddress ::=
	OCTET STRING

MacAddress ::=
	OCTET STRING (SIZE(6))

TruthValue ::=
	INTEGER {
	true(1),
	false(2)
	}

TestAndIncr ::=
	INTEGER (0..2147483647)

AutonomousType ::=
	OBJECT IDENTIFIER

InstancePointer ::=
	OBJECT IDENTIFIER

VariablePointer ::=
	OBJECT IDENTIFIER

RowPointer ::=
	OBJECT IDENTIFIER

RowStatus ::=
	INTEGER {
	active(1),
	notInService(2),
	notReady(3),
	createAndGo(4),
	createAndWait(5),
	destroy(6)
	}

TimeStamp ::=
	TimeTicks

TimeInterval ::=
	INTEGER (0..2147483647)

DateAndTime ::=
	OCTET STRING (SIZE(8|11))

StorageType ::=
	INTEGER {
	other(1),
	volatile(2),
	nonVolatile(3),
	permanent(4),
	readOnly(5)
	}

TDomain ::=
	OBJECT IDENTIFIER

TAddress ::=
	OCTET STRING (SIZE(1..255))

PRowStatus ::=
	INTEGER {
	active(1),
	notInService(2),
	notReady(3),
	createAndGo(4),
	createAndWait(5),
	destroy(6)
	}

OutputMode ::=
	INTEGER {
	none(0),
	text(1),
	gauge(2),
	graph(3),
	console(4)
	}

States ::=
	INTEGER {
	ok(0),
	warn(1),
	alarm(2),
	offline(3),
	void(4)
	}

PBoolean ::=
	INTEGER {
	false(0),
	true(1)
	}

mib-2 OBJECT IDENTIFIER ::= { mgmt 1 }

snmp OBJECT IDENTIFIER ::= { mib-2 11 }

bmc OBJECT IDENTIFIER ::= { enterprises 1031 }

patrolMIB OBJECT IDENTIFIER ::= { bmc 1 }

patrolAgent OBJECT IDENTIFIER ::= { patrolMIB 1 }

patrolConsole OBJECT IDENTIFIER ::= { patrolMIB 2 }

patrolObjects OBJECT IDENTIFIER ::= { patrolAgent 1 }

patrolTraps OBJECT IDENTIFIER ::= { patrolAgent 2 }

agentExecuteCommand OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Executes the PSL command sent in the same message."
	::= { patrolAgent 3 }


objectsCwd OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Current node, used as a root for subtree to be examined."
	::= { patrolObjects 2 }


objectsTable OBJECT-TYPE
	SYNTAX SEQUENCE OF ObjectsEntry
	ACCESS read-only
	STATUS optional
	DESCRIPTION "This table is used to get/set Patrol Agent Objects.
Patrol Agent Objects are nodes (and not leaves) of the
information tree. Object represents a KM definition."
	::= { patrolObjects 3 }


objectsEntry OBJECT-TYPE
	SYNTAX ObjectsEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "An objectsEntry contains value and description (in future)
for a given PSL Agent''s object."
	INDEX { objectName  }

	::= { objectsTable 1 }

objectsEntry ::=
	SEQUENCE {
		objectName DisplayString,
		objectDescr DisplayString,
		objectRowStatus INTEGER
		}

objectName OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Name of the mandatory object."
	::= { objectsEntry 1 }


objectDescr OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Textual description of the mandatory object."
	::= { objectsEntry 3 }


objectRowStatus OBJECT-TYPE
	SYNTAX INTEGER {
	active(1),
	notInService(2),
	notReady(3),
	createAndGo(4),
	createAndWait(5),
	destroy(6)
	}
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Row status as defined in SNMPv2 - for new row creation control."
	::= { objectsEntry 4 }


variablesTable OBJECT-TYPE
	SYNTAX SEQUENCE OF VariablesEntry
	ACCESS read-only
	STATUS optional
	DESCRIPTION "This table is used to get/set Patrol Agent Object variables.
Patrol Agent Object Variables are leaves (and not nodes) of the
information tree."
	::= { patrolObjects 5 }


variablesEntry OBJECT-TYPE
	SYNTAX VariablesEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "An variablesEntry contains value and description (in future)
for a given PSL Agent''s object."
	INDEX { variableName  }

	::= { variablesTable 1 }

variablesEntry ::=
	SEQUENCE {
		variableName DisplayString,
		variableType DisplayString,
		variableValue DisplayString,
		variableDesr DisplayString,
		variableRowStatus INTEGER
		}

variableName OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Variable name, with path removed."
	::= { variablesEntry 2 }


variableType OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A string describing variable type. May be used
by a sophisticated management to open gauges/graphs/multi-media etc."
	::= { variablesEntry 3 }


variableValue OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Current value of the variable."
	::= { variablesEntry 4 }


variableDesr OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The variable''s text description, 
a-ka dynamic help about this very variable."
	::= { variablesEntry 5 }


variableRowStatus OBJECT-TYPE
	SYNTAX INTEGER {
	active(1),
	notInService(2),
	notReady(3),
	createAndGo(4),
	createAndWait(5),
	destroy(6)
	}
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Used for new row creation - according to snmpv2 row craation mechanism."
	::= { variablesEntry 6 }


applicationsTable OBJECT-TYPE
	SYNTAX SEQUENCE OF ApplicationsEntry
	ACCESS read-only
	STATUS optional
	DESCRIPTION "This table is used to get/set Patrol monitored applications.
Patrol Agent Applications are nodes of the information tree."
	::= { patrolObjects 6 }


applicationsEntry OBJECT-TYPE
	SYNTAX ApplicationsEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "An  applicationsEntry contains value and description (in future)
for a given PSL Agent''s applications."
	INDEX { applicationOid  }

	::= { applicationsTable 1 }

applicationsEntry ::=
	SEQUENCE {
		applicationName DisplayString,
		applicationState INTEGER,
		applWorstInst DisplayString,
		applMasterVersion INTEGER,
		applMinorRevision INTEGER,
		applicationRowStatus INTEGER,
		applicationOid INTEGER
		}

applicationName OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Application Name."
	::= { applicationsEntry 1 }


applicationState OBJECT-TYPE
	SYNTAX INTEGER {
	ok(0),
	warn(1),
	alarm(2),
	offline(3),
	void(4)
	}
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Application State."
	::= { applicationsEntry 2 }


applWorstInst OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Application Worst Instance."
	::= { applicationsEntry 3 }


applMasterVersion OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Version number of the application."
	::= { applicationsEntry 4 }


applMinorRevision OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Minor revision number of the application."
	::= { applicationsEntry 5 }


applicationRowStatus OBJECT-TYPE
	SYNTAX INTEGER {
	active(1),
	notInService(2),
	notReady(3),
	createAndGo(4),
	createAndWait(5),
	destroy(6)
	}
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Used for new row creation according to snmpv2 row craation mechanism."
	::= { applicationsEntry 6 }


applicationOid OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Application Object Id."
	::= { applicationsEntry 7 }


applInstTable OBJECT-TYPE
	SYNTAX SEQUENCE OF ApplInstEntry
	ACCESS read-only
	STATUS optional
	DESCRIPTION "This table is used to get/set Patrol monitored application Instance.
Patrol Agent application Instance are nodes of the information tree."
	::= { patrolObjects 7 }


applInstEntry OBJECT-TYPE
	SYNTAX ApplInstEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "An  applInstEntry contains value and description (in future)
for a given PSL Agent''s applInst."
	INDEX { applicationOid , applInstOid }

	::= { applInstTable 1 }

applInstEntry ::=
	SEQUENCE {
		applInstName DisplayString,
		applInstRuleState INTEGER,
		applInstStatus INTEGER,
		applInstWorstParam DisplayString,
		applInstCreateIcon INTEGER,
		applInstRowStatus INTEGER,
		applInstOid INTEGER,
		applInstPInstOid INTEGER,
		applInstPApplOid INTEGER
		}

applInstName OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Application Instance Name."
	::= { applInstEntry 1 }


applInstRuleState OBJECT-TYPE
	SYNTAX INTEGER {
	ok(0),
	warn(1),
	alarm(2),
	offline(3),
	void(4)
	}
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Application Instance State."
	::= { applInstEntry 2 }


applInstStatus OBJECT-TYPE
	SYNTAX INTEGER {
	ok(0),
	warn(1),
	alarm(2),
	offline(3),
	void(4)
	}
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Application instance status is the worst of rule state and 
its worst parameter''s status."
	::= { applInstEntry 3 }


applInstWorstParam OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Application instance worst parameter."
	::= { applInstEntry 4 }


applInstCreateIcon OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "True means create icons for Application instance(s).
False means not necessary to create icons for the instance(s)."
	::= { applInstEntry 5 }


applInstRowStatus OBJECT-TYPE
	SYNTAX INTEGER {
	active(1),
	notInService(2),
	notReady(3),
	createAndGo(4),
	createAndWait(5),
	destroy(6)
	}
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Used for new row creation, according to snmpv2 row craation mechanism."
	::= { applInstEntry 6 }


applInstOid OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Application Instance Object Id."
	::= { applInstEntry 7 }


applInstPInstOid OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Application instance''s parent object id."
	::= { applInstEntry 8 }


applInstPApplOid OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Application instance''s parent application object id."
	::= { applInstEntry 9 }


parametersTable OBJECT-TYPE
	SYNTAX SEQUENCE OF ParametersEntry
	ACCESS read-only
	STATUS optional
	DESCRIPTION "This table is used to get/set Patrol application instance
monitored parameters.
Patrol Agent parameters are leaves of the information tree."
	::= { patrolObjects 8 }


parametersEntry OBJECT-TYPE
	SYNTAX ParametersEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "An  ParametersEntry contains value and description (in future)
for a given PSL Agent''s parameters."
	INDEX { applicationOid , applInstOid, parameterObjId }

	::= { parametersTable 1 }

parametersEntry ::=
	SEQUENCE {
		parameterName DisplayString,
		parameterState INTEGER,
		parameterCurrentTime TimeTicks,
		parameterCurrentValue DisplayString,
		parameterPollingInt INTEGER,
		parameterRetries INTEGER,
		parameterOutputMode INTEGER,
		parameterAutoScale INTEGER,
		parameterYaxisMin INTEGER,
		parameterYaxisMax INTEGER,
		parameterRowStatus INTEGER,
		parameterObjId INTEGER,
		parameterIntValue INTEGER,
		parameterActiveStat INTEGER,
		parameterRunningStat INTEGER
		}

parameterName OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Parameter Name."
	::= { parametersEntry 1 }


parameterState OBJECT-TYPE
	SYNTAX INTEGER {
	ok(0),
	warn(1),
	alarm(2),
	offline(3),
	void(4)
	}
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Parameter State."
	::= { parametersEntry 2 }


parameterCurrentTime OBJECT-TYPE
	SYNTAX TimeTicks
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Time stamp when current value was produced."
	::= { parametersEntry 3 }


parameterCurrentValue OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Parameter''s current value."
	::= { parametersEntry 4 }


parameterPollingInt OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Parameter''s polling interval."
	::= { parametersEntry 5 }


parameterRetries OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Parameter''s timeout  retries."
	::= { parametersEntry 6 }


parameterOutputMode OBJECT-TYPE
	SYNTAX INTEGER {
	none(0),
	text(1),
	gauge(2),
	graph(3),
	console(4)
	}
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Parameter''s output mode."
	::= { parametersEntry 7 }


parameterAutoScale OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "true(1): use automatic scale; false(0):use following YaxisMin and YaxisMax fields to draw y-axis scale."
	::= { parametersEntry 8 }


parameterYaxisMin OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Minimum value for drawing y-axis scale if parameterAutoScale is false(0)."
	::= { parametersEntry 9 }


parameterYaxisMax OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Maximum value for drawing y-axis scale if parameterAutoScale is false(0)."
	::= { parametersEntry 10 }


parameterRowStatus OBJECT-TYPE
	SYNTAX INTEGER {
	active(1),
	notInService(2),
	notReady(3),
	createAndGo(4),
	createAndWait(5),
	destroy(6)
	}
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Used for new row creation - according to snmpv2 row craation mechanism."
	::= { parametersEntry 11 }


parameterObjId OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Parameter''s object id."
	::= { parametersEntry 12 }


parameterIntValue OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Integer value of the parameter. Valid only for
parameters with outputType gauge or graph. (0 for all the others)."
	::= { parametersEntry 13 }


parameterActiveStat OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Boolean value of the parameter explaining whether
parameter was created as active."
	::= { parametersEntry 14 }


parameterRunningStat OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Boolean value indicating the parameter is either
running or suspended for the current instance."
	::= { parametersEntry 15 }


patrolTrapText OBJECT-TYPE
	SYNTAX OCTET STRING (SIZE(0..127))
	ACCESS read-only
	STATUS obsolete
	DESCRIPTION "String passed from PSL to inform about the trap reason,
or event information."
	::= { patrolTraps 1 }


patrolTrapOrigin OBJECT-TYPE
	SYNTAX OCTET STRING (SIZE(0..127))
	ACCESS read-only
	STATUS obsolete
	DESCRIPTION "Name of the object that originated the trap."
	::= { patrolTraps 2 }


patrolTrapExtra OBJECT-TYPE
	SYNTAX OCTET STRING (SIZE(0..127))
	ACCESS read-only
	STATUS obsolete
	DESCRIPTION "Extra information, usually parameter value."
	::= { patrolTraps 3 }


piV1mTable OBJECT-TYPE
	SYNTAX SEQUENCE OF PiV1mEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "This table keeps information about SNMP V1 management stations,
interested in receiving traps from the Patrol Agent."
	::= { patrolTraps 10 }


piV1mEntry OBJECT-TYPE
	SYNTAX PiV1mEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "An piV1mTable describes one SNMP V1 management station interested in
getting traps from the Patrol Agent."
	INDEX { piV1mIp , piV1mPort, piV1mCommunity }

	::= { piV1mTable 1 }

piV1mEntry ::=
	SEQUENCE {
		piV1mIp IpAddress,
		piV1mPort INTEGER,
		piV1mCommunity OCTET STRING,
		piV1mRowStatus INTEGER
		}

piV1mIp OBJECT-TYPE
	SYNTAX IpAddress
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "IP address of the interested manager."
	::= { piV1mEntry 1 }


piV1mPort OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Port number of the interested manager."
	::= { piV1mEntry 2 }


piV1mCommunity OBJECT-TYPE
	SYNTAX OCTET STRING (SIZE(0..127))
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Community string for the interested manager."
	::= { piV1mEntry 3 }


piV1mRowStatus OBJECT-TYPE
	SYNTAX INTEGER {
	active(1),
	notInService(2),
	notReady(3),
	createAndGo(4),
	createAndWait(5),
	destroy(6)
	}
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Row status for row creation/deletion."
	::= { piV1mEntry 4 }



patrolInformation TRAP-TYPE
	ENTERPRISE patrolTraps
	VARIABLES { patrolTrapText, patrolTrapOrigin, patrolTrapExtra }

	--#TYPE "PATROL Information"

	--#SUMMARY "Status is now %d."

	--#ARGUMENTS {3}

	--#SEVERITY INFORMATIONAL
--#CATEGORY "PATROL Events"
	--#TIMEINDEX 99
DESCRIPTION "A ''PATROL Information'' trap indicates a PATROL Information event has 
occurred. Specific information is detailed below."
	::= 1


patrolChangeStatus TRAP-TYPE
	ENTERPRISE patrolTraps
	VARIABLES { patrolTrapText, patrolTrapOrigin, patrolTrapExtra }

	--#TYPE "PATROL State Change"

	--#SUMMARY "Status is now %d."

	--#ARGUMENTS {3}

	--#SEVERITY INFORMATIONAL
--#CATEGORY "PATROL Events"
	--#TIMEINDEX 99
DESCRIPTION "A ''PATROL State Change'' trap indicates a monitored PATROL object 
has changed status. Specific information is detailed below."
	::= 2


patrolWarning TRAP-TYPE
	ENTERPRISE patrolTraps
	VARIABLES { patrolTrapText, patrolTrapOrigin, patrolTrapExtra }

	--#TYPE "PATROL Warning"

	--#SUMMARY "Status is now %d."

	--#ARGUMENTS {3}

	--#SEVERITY MAJOR
--#CATEGORY "PATROL Events"
	--#TIMEINDEX 99
DESCRIPTION "A ''PATROL Warning'' trap indicates a monitored PATROL object is in the 
warning state. Specific information is detailed below."
	::= 4


patrolAlarm TRAP-TYPE
	ENTERPRISE patrolTraps
	VARIABLES { patrolTrapText, patrolTrapOrigin, patrolTrapExtra }

	--#TYPE "PATROL Alarm"

	--#SUMMARY "Status is now %d."

	--#ARGUMENTS {3}

	--#SEVERITY MAJOR
--#CATEGORY "PATROL Events"

	--#TIMEINDEX 99
DESCRIPTION "A ''PATROL Alarm'' trap indicates a monitored PATROL object is in the 
alarm state. Specific information is detailed below."
	::= 5


patrolTrapV1StateChanged TRAP-TYPE
	ENTERPRISE patrolTraps
	VARIABLES { patrolTrapText }

	--#TYPE "PATROL V1 State Changed"

	--#SUMMARY "Status is now %d."

	--#ARGUMENTS {1}

	--#SEVERITY INFORMATIONAL

	--#TIMEINDEX 99
--#CATEGORY "PATROL Events"
DESCRIPTION "A ''PATROL V1 State Change'' trap indicates a monitored PATROL object 
has changed status. Specific information is detailed below."
	::= 11


END

