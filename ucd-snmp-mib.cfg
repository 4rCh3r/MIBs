#-MIBFILE: ucd-snmp-mib.mib

UCD-SNMP-MIB DEFINITIONS ::= BEGIN


DisplayString ::=
	OCTET STRING (SIZE(0..255))

PhysAddress ::=
	OCTET STRING

MacAddress ::=
	OCTET STRING (SIZE(6))

TruthValue ::=
	INTEGER {
	true(1),
	false(2)
	}

TestAndIncr ::=
	INTEGER (0..2147483647)

AutonomousType ::=
	OBJECT IDENTIFIER

InstancePointer ::=
	OBJECT IDENTIFIER

VariablePointer ::=
	OBJECT IDENTIFIER

RowPointer ::=
	OBJECT IDENTIFIER

RowStatus ::=
	INTEGER {
	active(1),
	notInService(2),
	notReady(3),
	createAndGo(4),
	createAndWait(5),
	destroy(6)
	}

TimeStamp ::=
	TimeTicks

TimeInterval ::=
	INTEGER (0..2147483647)

DateAndTime ::=
	OCTET STRING (SIZE(8|11))

StorageType ::=
	INTEGER {
	other(1),
	volatile(2),
	nonVolatile(3),
	permanent(4),
	readOnly(5)
	}

TDomain ::=
	OBJECT IDENTIFIER

TAddress ::=
	OCTET STRING (SIZE(1..255))

Float ::=
	OCTET STRING

ucdavis OBJECT IDENTIFIER ::= { enterprises 2021 }

ucdInternal OBJECT IDENTIFIER ::= { ucdavis 12 }

ucdExperimental OBJECT IDENTIFIER ::= { ucdavis 13 }

ucdSnmpAgent OBJECT IDENTIFIER ::= { ucdavis 250 }

hpux9 OBJECT IDENTIFIER ::= { ucdSnmpAgent 1 }

sunos4 OBJECT IDENTIFIER ::= { ucdSnmpAgent 2 }

solaris OBJECT IDENTIFIER ::= { ucdSnmpAgent 3 }

osf OBJECT IDENTIFIER ::= { ucdSnmpAgent 4 }

ultrix OBJECT IDENTIFIER ::= { ucdSnmpAgent 5 }

hpux10 OBJECT IDENTIFIER ::= { ucdSnmpAgent 6 }

netbsd1 OBJECT IDENTIFIER ::= { ucdSnmpAgent 7 }

freebsd OBJECT IDENTIFIER ::= { ucdSnmpAgent 8 }

irix OBJECT IDENTIFIER ::= { ucdSnmpAgent 9 }

linux OBJECT IDENTIFIER ::= { ucdSnmpAgent 10 }

bsdi OBJECT IDENTIFIER ::= { ucdSnmpAgent 11 }

openbsd OBJECT IDENTIFIER ::= { ucdSnmpAgent 12 }

win32 OBJECT IDENTIFIER ::= { ucdSnmpAgent 13 }

hpux11 OBJECT IDENTIFIER ::= { ucdSnmpAgent 14 }

unknown OBJECT IDENTIFIER ::= { ucdSnmpAgent 255 }

prTable OBJECT-TYPE
	SYNTAX SEQUENCE OF PrEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A table containing information on running
programs/daemons configured for monitoring in the
snmpd.conf file of the agent.  Processes violating the
number of running processes required by the agent's
configuration file are flagged with numerical and
textual errors."
	::= { ucdavis 2 }


prEntry OBJECT-TYPE
	SYNTAX PrEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "An entry containing a process and its statistics."
	INDEX { prIndex  }

	::= { prTable 1 }

prEntry ::=
	SEQUENCE {
		prIndex Integer32,
		prNames DisplayString,
		prMin Integer32,
		prMax Integer32,
		prCount Integer32,
		prErrorFlag Integer32,
		prErrMessage DisplayString,
		prErrFix Integer32,
		prErrFixCmd DisplayString
		}

prIndex OBJECT-TYPE
	SYNTAX INTEGER (0..65535)
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Reference Index for each observed process."
	::= { prEntry 1 }


prNames OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The process name we're counting/checking on."
	::= { prEntry 2 }


prMin OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The minimum number of processes that should be
running.  An error flag is generated if the number of
running processes is < the minimum."
	::= { prEntry 3 }


prMax OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The maximum number of processes that should be
running.  An error flag is generated if the number of
running processes is > the maximum."
	::= { prEntry 4 }


prCount OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The number of current processes running with the name
in question."
	::= { prEntry 5 }


prErrorFlag OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A Error flag to indicate trouble with a process.  It
goes to 1 if there is an error, 0 if no error."
	::= { prEntry 100 }


prErrMessage OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "An error message describing the problem (if one exists)."
	::= { prEntry 101 }


prErrFix OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Setting this to one will try to fix the problem if
the agent has been configured with a script to call
to attempt to fix problems automatically using remote
snmp operations."
	::= { prEntry 102 }


prErrFixCmd OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The command that gets run when the prErrFix column is 
set to 1."
	::= { prEntry 103 }


extTable OBJECT-TYPE
	SYNTAX SEQUENCE OF ExtEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A table of extensible commands returning output and
result codes.  These commands are configured via the
agent's snmpd.conf file."
	::= { ucdavis 8 }


extEntry OBJECT-TYPE
	SYNTAX ExtEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "An entry containing an extensible script/program and its output."
	INDEX { extIndex  }

	::= { extTable 1 }

extEntry ::=
	SEQUENCE {
		extIndex Integer32,
		extNames DisplayString,
		extCommand DisplayString,
		extResult Integer32,
		extOutput DisplayString,
		extErrFix Integer32,
		extErrFixCmd DisplayString
		}

extIndex OBJECT-TYPE
	SYNTAX INTEGER (0..65535)
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Reference Index for extensible scripts.  Simply an
integer row number."
	::= { extEntry 1 }


extNames OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A Short, one name description of the extensible command."
	::= { extEntry 2 }


extCommand OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The command line to be executed."
	::= { extEntry 3 }


extResult OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The result code (exit status) from the executed command."
	::= { extEntry 100 }


extOutput OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The first line of output of the executed command."
	::= { extEntry 101 }


extErrFix OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Setting this to one will try to fix the problem if
the agent has been configured with a script to call
to attempt to fix problems automatically using remote
snmp operations."
	::= { extEntry 102 }


extErrFixCmd OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The command that gets run when the extErrFix column is 
set to 1."
	::= { extEntry 103 }


memory OBJECT IDENTIFIER ::= { ucdavis 4 }

memIndex OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Bogus Index.  This should always return the integer 0."
	::= { memory 1 }


memErrorName OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Bogus Name. This should always return the string 'swap'."
	::= { memory 2 }


memTotalSwap OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Total Swap Size configured for the host."
	::= { memory 3 }


memAvailSwap OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Available Swap Space on the host."
	::= { memory 4 }


memTotalReal OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Total Real/Physical Memory Size on the host."
	::= { memory 5 }


memAvailReal OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Available Real/Physical Memory Space on the host."
	::= { memory 6 }


memTotalSwapTXT OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Total virtual memory used by text."
	::= { memory 7 }


memAvailSwapTXT OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Active virtual memory used by text."
	::= { memory 8 }


memTotalRealTXT OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Total Real/Physical Memory Size used by text."
	::= { memory 9 }


memAvailRealTXT OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Active Real/Physical Memory Space used by text."
	::= { memory 10 }


memTotalFree OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Total Available Memory on the host"
	::= { memory 11 }


memMinimumSwap OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Minimum amount of free swap required to be free
or else memErrorSwap is set to 1 and an error string is
returned memSwapErrorMsg."
	::= { memory 12 }


memShared OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Total Shared Memory"
	::= { memory 13 }


memBuffer OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Total Buffered Memory"
	::= { memory 14 }


memCached OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Total Cached Memory"
	::= { memory 15 }


memSwapError OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Error flag.  1 indicates very little swap space left"
	::= { memory 100 }


memSwapErrorMsg OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Error message describing the Error Flag condition"
	::= { memory 101 }


dskTable OBJECT-TYPE
	SYNTAX SEQUENCE OF DskEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Disk watching information.  Partions to be watched
are configured by the snmpd.conf file of the agent."
	::= { ucdavis 9 }


dskEntry OBJECT-TYPE
	SYNTAX DskEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "An entry containing a disk and its statistics."
	INDEX { dskIndex  }

	::= { dskTable 1 }

dskEntry ::=
	SEQUENCE {
		dskIndex Integer32,
		dskPath DisplayString,
		dskDevice DisplayString,
		dskMinimum Integer32,
		dskMinPercent Integer32,
		dskTotal Integer32,
		dskAvail Integer32,
		dskUsed Integer32,
		dskPercent Integer32,
		dskPercentNode Integer32,
		dskErrorFlag Integer32,
		dskErrorMsg DisplayString
		}

dskIndex OBJECT-TYPE
	SYNTAX INTEGER (0..65535)
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Integer reference number (row number) for the disk mib."
	::= { dskEntry 1 }


dskPath OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Path where the disk is mounted."
	::= { dskEntry 2 }


dskDevice OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Path of the device for the partition"
	::= { dskEntry 3 }


dskMinimum OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Minimum space required on the disk (in kBytes) before the
errors are triggered.  Either this or dskMinPercent is
configured via the agent's snmpd.conf file."
	::= { dskEntry 4 }


dskMinPercent OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Percentage of minimum space required on the disk before the
errors are triggered.  Either this or dskMinimum is
configured via the agent's snmpd.conf file."
	::= { dskEntry 5 }


dskTotal OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Total size of the disk/partion (kBytes)"
	::= { dskEntry 6 }


dskAvail OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Available space on the disk"
	::= { dskEntry 7 }


dskUsed OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Used space on the disk"
	::= { dskEntry 8 }


dskPercent OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Percentage of space used on disk"
	::= { dskEntry 9 }


dskPercentNode OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Percentage of inodes used on disk"
	::= { dskEntry 10 }


dskErrorFlag OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Error flag signaling that the disk or partition is under
the minimum required space configured for it."
	::= { dskEntry 100 }


dskErrorMsg OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A text description providing a warning and the space left
on the disk."
	::= { dskEntry 101 }


laTable OBJECT-TYPE
	SYNTAX SEQUENCE OF LaEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Load average information."
	::= { ucdavis 10 }


laEntry OBJECT-TYPE
	SYNTAX LaEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "An entry containing a load average and its values."
	INDEX { laIndex  }

	::= { laTable 1 }

laEntry ::=
	SEQUENCE {
		laIndex Integer32,
		laNames DisplayString,
		laLoad DisplayString,
		laConfig DisplayString,
		laLoadInt Integer32,
		laLoadFloat Float,
		laErrorFlag Integer32,
		laErrMessage DisplayString
		}

laIndex OBJECT-TYPE
	SYNTAX INTEGER (0..3)
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "reference index/row number for each observed loadave."
	::= { laEntry 1 }


laNames OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The list of loadave names we're watching."
	::= { laEntry 2 }


laLoad OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The 1,5 and 10 minute load averages (one per row)."
	::= { laEntry 3 }


laConfig OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The watch point for load-averages to signal an
error.  If the load averages rises above this value,
the laErrorFlag below is set."
	::= { laEntry 4 }


laLoadInt OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The 1,5 and 10 minute load averages as an integer.
This is computed by taking the floating point
loadaverage value and multiplying by 100, then
converting the value to an integer."
	::= { laEntry 5 }


laLoadFloat OBJECT-TYPE
	SYNTAX Opaque
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The 1,5 and 10 minute load averages as an opaquely
wrapped floating point number."
	::= { laEntry 6 }


laErrorFlag OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A Error flag to indicate the load-average has crossed
its threshold value defined in the snmpd.conf file.
It is set to 1 if the threshold is crossed, 0 otherwise."
	::= { laEntry 100 }


laErrMessage OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "An error message describing the load-average and its
surpased watch-point value."
	::= { laEntry 101 }


version OBJECT IDENTIFIER ::= { ucdavis 100 }

versionIndex OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Index to mib (always 0)"
	::= { version 1 }


versionTag OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "CVS tag keyword"
	::= { version 2 }


versionDate OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Date string from RCS keyword"
	::= { version 3 }


versionCDate OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Date string from ctime() "
	::= { version 4 }


versionIdent OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Id string from RCS keyword"
	::= { version 5 }


versionConfigureOptions OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Options passed to the configure script when this agent was built."
	::= { version 6 }


versionClearCache OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Set to 1 to clear the exec cache, if enabled"
	::= { version 10 }


versionUpdateConfig OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Set to 1 to read-read the config file(s)."
	::= { version 11 }


versionRestartAgent OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Set to 1 to restart the agent."
	::= { version 12 }


versionSavePersistentData OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Set to 1 to force the agent to save it's persistent data immediately."
	::= { version 13 }


versionDoDebugging OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Set to 1 to turn debugging statements on in the agent or 0
to turn it off."
	::= { version 20 }


snmperrs OBJECT IDENTIFIER ::= { ucdavis 101 }

snmperrIndex OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Bogus Index for snmperrs (always 0)."
	::= { snmperrs 1 }


snmperrNames OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "snmp"
	::= { snmperrs 2 }


snmperrErrorFlag OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A Error flag to indicate trouble with the agent.  It
goes to 1 if there is an error, 0 if no error."
	::= { snmperrs 100 }


snmperrErrMessage OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "An error message describing the problem (if one exists)."
	::= { snmperrs 101 }


mrTable OBJECT-TYPE
	SYNTAX SEQUENCE OF MrEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A table displaying all the oid's registered by mib modules in
the agent.  Since the agent is modular in nature, this lists
each module's OID it is responsible for and the name of the module"
	::= { ucdavis 102 }


mrEntry OBJECT-TYPE
	SYNTAX MrEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "An entry containing a registered mib oid."
	INDEX { IMPLIED mrIndex  }

	::= { mrTable 1 }

mrEntry ::=
	SEQUENCE {
		mrIndex OBJECT IDENTIFIER,
		mrModuleName DisplayString
		}

mrIndex OBJECT-TYPE
	SYNTAX OBJECT IDENTIFIER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The registry slot of a mibmodule."
	::= { mrEntry 1 }


mrModuleName OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The module name that registered this OID."
	::= { mrEntry 2 }


systemStats OBJECT IDENTIFIER ::= { ucdavis 11 }

ssIndex OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Reference Index for each observed systemStat (1)."
	::= { systemStats 1 }


ssErrorName OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The list of systemStats names (vmstat) we're Counting."
	::= { systemStats 2 }


ssSwapIn OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Amount of memory swapped in from disk (kB/s)."
	::= { systemStats 3 }


ssSwapOut OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Amount of memory swapped to disk (kB/s)."
	::= { systemStats 4 }


ssIOSent OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS optional
	DESCRIPTION "Blocks sent to a block device (blocks/s). Deprecated, replaced by
the ssIORawSent object"
	::= { systemStats 5 }


ssIOReceive OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS optional
	DESCRIPTION "Blocks received from a block device (blocks/s). Deprecated, replaced by
the ssIORawReceived object"
	::= { systemStats 6 }


ssSysInterrupts OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS optional
	DESCRIPTION "The number of interrupts per second, including the clock.
Deprecated, replaced by ssRawInterrupts"
	::= { systemStats 7 }


ssSysContext OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS optional
	DESCRIPTION "The number of context switches per second.
Deprecated, replaced by ssRawContext"
	::= { systemStats 8 }


ssCpuUser OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS optional
	DESCRIPTION "percentages of user CPU time. Deprecated, replaced by the ssCpuRawUser
object"
	::= { systemStats 9 }


ssCpuSystem OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS optional
	DESCRIPTION "percentages of system CPU time. Deprecated, replaced by of the
ssCpuRawSystem object"
	::= { systemStats 10 }


ssCpuIdle OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS optional
	DESCRIPTION "percentages of idle CPU time. Deprecated, replaced by of the
ssCpuRawIdle object"
	::= { systemStats 11 }


ssCpuRawUser OBJECT-TYPE
	SYNTAX Counter
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "user CPU time."
	::= { systemStats 50 }


ssCpuRawNice OBJECT-TYPE
	SYNTAX Counter
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "nice CPU time."
	::= { systemStats 51 }


ssCpuRawSystem OBJECT-TYPE
	SYNTAX Counter
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "system CPU time."
	::= { systemStats 52 }


ssCpuRawIdle OBJECT-TYPE
	SYNTAX Counter
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "idle CPU time."
	::= { systemStats 53 }


ssCpuRawWait OBJECT-TYPE
	SYNTAX Counter
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "iowait CPU time. This is primarily a SysV thingie"
	::= { systemStats 54 }


ssCpuRawKernel OBJECT-TYPE
	SYNTAX Counter
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "kernel CPU time."
	::= { systemStats 55 }


ssCpuRawInterrupt OBJECT-TYPE
	SYNTAX Counter
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "interruptlevel CPU time. This is primarily a BSD thingie"
	::= { systemStats 56 }


ssIORawSent OBJECT-TYPE
	SYNTAX Counter
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Number of blocks sent to a block device"
	::= { systemStats 57 }


ssIORawReceived OBJECT-TYPE
	SYNTAX Counter
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Number of blocks received from a block device"
	::= { systemStats 58 }


ssRawInterrupts OBJECT-TYPE
	SYNTAX Counter
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Number of interrupts processed"
	::= { systemStats 59 }


ssRawContexts OBJECT-TYPE
	SYNTAX Counter
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Number of context switches"
	::= { systemStats 60 }


ssCpuRawSoftIRQ OBJECT-TYPE
	SYNTAX Counter
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Soft IRQ CPU time. This is for Linux 2.6"
	::= { systemStats 61 }


ssRawSwapIn OBJECT-TYPE
	SYNTAX Counter
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Number of blocks swapped in"
	::= { systemStats 62 }


ssRawSwapOut OBJECT-TYPE
	SYNTAX Counter
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Number of blocks swapped out"
	::= { systemStats 63 }


ucdTraps OBJECT IDENTIFIER ::= { ucdavis 251 }

fileTable OBJECT-TYPE
	SYNTAX SEQUENCE OF FileEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Table of monitored files."
	::= { ucdavis 15 }


fileEntry OBJECT-TYPE
	SYNTAX FileEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Entry of file"
	INDEX { fileIndex  }

	::= { fileTable 1 }

fileEntry ::=
	SEQUENCE {
		fileIndex Integer32,
		fileName DisplayString,
		fileSize Integer32,
		fileMax Integer32,
		fileErrorFlag TruthValue,
		fileErrorMsg DisplayString
		}

fileIndex OBJECT-TYPE
	SYNTAX INTEGER (0..2147483647)
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Index of file"
	::= { fileEntry 1 }


fileName OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Filename"
	::= { fileEntry 2 }


fileSize OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Size of file (kB)"
	::= { fileEntry 3 }


fileMax OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Limit of filesize (kB)"
	::= { fileEntry 4 }


fileErrorFlag OBJECT-TYPE
	SYNTAX TruthValue
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Limit exceeded flag"
	::= { fileEntry 100 }


fileErrorMsg OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Filesize error message"
	::= { fileEntry 101 }


logMatch OBJECT IDENTIFIER ::= { ucdavis 16 }

logMatchMaxEntries OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The maximum number of logmatch entries
this snmpd daemon can support."
	::= { logMatch 1 }


logMatchTable OBJECT-TYPE
	SYNTAX SEQUENCE OF LogMatchEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Table of monitored files."
	::= { logMatch 2 }


logMatchEntry OBJECT-TYPE
	SYNTAX LogMatchEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Entry of file"
	INDEX { logMatchIndex  }

	::= { logMatchTable 1 }

logMatchEntry ::=
	SEQUENCE {
		logMatchIndex Integer32,
		logMatchName DisplayString,
		logMatchFilename DisplayString,
		logMatchRegEx DisplayString,
		logMatchGlobalCounter Counter32,
		logMatchGlobalCount Integer32,
		logMatchCurrentCounter Counter32,
		logMatchCurrentCount Integer32,
		logMatchCounter Counter32,
		logMatchCount Integer32,
		logMatchCycle Integer32,
		logMatchErrorFlag TruthValue,
		logMatchRegExCompilation DisplayString
		}

logMatchIndex OBJECT-TYPE
	SYNTAX INTEGER (1..2147483647)
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Index of logmatch"
	::= { logMatchEntry 1 }


logMatchName OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "logmatch instance name"
	::= { logMatchEntry 2 }


logMatchFilename OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "filename to be logmatched"
	::= { logMatchEntry 3 }


logMatchRegEx OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "regular expression"
	::= { logMatchEntry 4 }


logMatchGlobalCounter OBJECT-TYPE
	SYNTAX Counter
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "global count of matches"
	::= { logMatchEntry 5 }


logMatchGlobalCount OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Description."
	::= { logMatchEntry 6 }


logMatchCurrentCounter OBJECT-TYPE
	SYNTAX Counter
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Regex match counter. This counter will
be reset with each logfile rotation."
	::= { logMatchEntry 7 }


logMatchCurrentCount OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Description."
	::= { logMatchEntry 8 }


logMatchCounter OBJECT-TYPE
	SYNTAX Counter
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Regex match counter. This counter will
be reset with each read"
	::= { logMatchEntry 9 }


logMatchCount OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Description."
	::= { logMatchEntry 10 }


logMatchCycle OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "time between updates (if not queried) in seconds"
	::= { logMatchEntry 11 }


logMatchErrorFlag OBJECT-TYPE
	SYNTAX TruthValue
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "errorflag: is this line configured correctly?"
	::= { logMatchEntry 100 }


logMatchRegExCompilation OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "message of regex precompilation"
	::= { logMatchEntry 101 }


ucdStart TRAP-TYPE
	ENTERPRISE ucdTraps
DESCRIPTION ""
	::= 1


ucdShutdown TRAP-TYPE
	ENTERPRISE ucdTraps
DESCRIPTION "This trap is sent when the agent terminates"
	::= 2


END

