#-MIBFILE: LEFTHAND-NETWORKS-NSM-NOTIFICATION-MIB.mib

LEFTHAND-NETWORKS-NSM-NOTIFICATION-MIB DEFINITIONS ::= BEGIN


DisplayString ::=
	OCTET STRING (SIZE(0..255))

PhysAddress ::=
	OCTET STRING

MacAddress ::=
	OCTET STRING (SIZE(6))

TruthValue ::=
	INTEGER {
	true(1),
	false(2)
	}

TestAndIncr ::=
	INTEGER (0..2147483647)

AutonomousType ::=
	OBJECT IDENTIFIER

InstancePointer ::=
	OBJECT IDENTIFIER

VariablePointer ::=
	OBJECT IDENTIFIER

RowPointer ::=
	OBJECT IDENTIFIER

RowStatus ::=
	INTEGER {
	active(1),
	notInService(2),
	notReady(3),
	createAndGo(4),
	createAndWait(5),
	destroy(6)
	}

TimeStamp ::=
	TimeTicks

TimeInterval ::=
	INTEGER (0..2147483647)

DateAndTime ::=
	OCTET STRING (SIZE(8|11))

StorageType ::=
	INTEGER {
	other(1),
	volatile(2),
	nonVolatile(3),
	permanent(4),
	readOnly(5)
	}

TDomain ::=
	OBJECT IDENTIFIER

TAddress ::=
	OCTET STRING (SIZE(1..255))

lefthandnetworks OBJECT IDENTIFIER ::= { enterprises 9804 }
lefthandnetworksRegistrations OBJECT IDENTIFIER ::= { lefthandnetworks 2 }
lhnModules OBJECT IDENTIFIER ::= { lefthandnetworksRegistrations 1 }
lefthandnetworksProducts OBJECT IDENTIFIER ::= { lefthandnetworks 3 }
lhnNsm OBJECT IDENTIFIER ::= { lefthandnetworksProducts 1 }
lefthandnetworksRegistrations OBJECT IDENTIFIER ::= { lefthandnetworks 2 }
lhnNsmDevices OBJECT IDENTIFIER ::= { lhnNsm 1 }
lhnNsmObjects OBJECT IDENTIFIER ::= { lhnNsmDevices 2 }
lhnNsmNotification OBJECT IDENTIFIER ::= { lhnNsmObjects 15 }
lhnNsmEvents OBJECT IDENTIFIER ::= { lhnNsmDevices 0 }
lhnNsmOldNotification OBJECT IDENTIFIER ::= { lhnNsmObjects 13 }
lhnNsmOldEvents OBJECT IDENTIFIER ::= { lhnNsmDevices 3 }
lhnNsmNotificationModule OBJECT IDENTIFIER ::= { lhnModules 15 }

lhnNsmDevices OBJECT IDENTIFIER ::= { lhnNsm 1 }

lhnNsmEvents OBJECT IDENTIFIER ::= { lhnNsmDevices 0 }

lhnNsmNotificationModuleConformance OBJECT IDENTIFIER ::= { lhnNsmNotificationModule 1 }

lhnNsmNotificationModuleCompliances OBJECT IDENTIFIER ::= { lhnNsmNotificationModuleConformance 1 }

lhnNsmNotificationModuleGroups OBJECT IDENTIFIER ::= { lhnNsmNotificationModuleConformance 2 }

lefthandNetworksNsmNotificationGroup OBJECT IDENTIFIER ::= { lhnNsmNotificationModuleGroups 1 }

lefthandNetworksNsmNotificationMibAllNotifications OBJECT IDENTIFIER ::= { lhnNsmNotificationModuleGroups 2 }

lhnNotificationMessageCount OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The number of notification messages available in the history."
	::= { lhnNsmNotification 1 }


lhnNotificationMessageTable OBJECT-TYPE
	SYNTAX SEQUENCE OF LhnNotificationMessageEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A table of the last 100 notifications for the NSM.
The number of entries is given by lhnNotificationMessageCount."
	::= { lhnNsmNotification 2 }


lhnNotificationMessageEntry OBJECT-TYPE
	SYNTAX LhnNotificationMessageEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A row of notification message information.
The information contained in each row is dependant on the trap type
and the event that caused the trap.  Not all LhnNotificationMessageEntry
objects will have values."
	INDEX { lhnNotificationMessageIndex  }

	::= { lhnNotificationMessageTable 1 }

lhnNotificationMessageEntry ::=
	SEQUENCE {
		lhnNotificationMessageIndex Unsigned32,
		lhnMessage DisplayString,
		lhnMessageTime DateAndTime,
		lhnEventID DisplayString,
		lhnSeverity INTEGER,
		lhnHostname DisplayString,
		lhnPrimaryIP DisplayString,
		lhnMac DisplayString,
		lhnSerialNumber DisplayString,
		lhnModelName DisplayString,
		lhnProductName DisplayString,
		lhnProductID DisplayString,
		lhnHpim TruthValue,
		lhnSoftwareVersion DisplayString,
		lhnManagementGroupVersion DisplayString,
		lhnManagementGroupSerialNumber DisplayString,
		lhnManagementGroup DisplayString,
		lhnCluster DisplayString,
		lhnSite DisplayString,
		lhnComponentName DisplayString,
		lhnSystemName DisplayString,
		lhnLogicalName DisplayString,
		lhnComponentState DisplayString,
		lhnComponentModel DisplayString,
		lhnComponentSerialNumber DisplayString,
		lhnComponentFirmwareVersion DisplayString,
		lhnComponentHardwareVersion DisplayString,
		lhnDriverVersion DisplayString,
		lhnBiosVersion DisplayString,
		lhnRaidConfiguration DisplayString,
		lhnDiskInterface DisplayString,
		lhnDiskCapacity Integer32,
		lhnRaidState DisplayString,
		lhnParityInitStatus DisplayString,
		lhnHealthState DisplayString,
		lhnBpsState DisplayString,
		lhnCacheState DisplayString,
		lhnLinkState DisplayString,
		lhnVipState DisplayString,
		lhnMaintenanceMode DisplayString,
		lhnMinFanSpeed Integer32,
		lhnFanSpeed Gauge32,
		lhnHighTemperatureLimit Integer32,
		lhnTemperatureState DisplayString,
		lhnTemperature Gauge32,
		lhnHighVoltageLimit Integer32,
		lhnLowVoltageLimit Integer32,
		lhnVoltage Gauge32,
		lhnUtilization Gauge32,
		lhnLatency Gauge32,
		lhnMemoryUtilization Gauge32,
		lhnMemoryConfig Integer32,
		lhnCpuUtilization Gauge32,
		lhnCpuConfig Integer32,
		lhnDiskSpeed DisplayString,
		lhnLicenseState DisplayString,
		lhnUtilizationState DisplayString,
		lhnLatencyState DisplayString,
		lhnServerVIPAddress DisplayString,
		lhnServerVIPState DisplayString,
		lhnReplicationState DisplayString,
		lhnSnapshotState DisplayString,
		lhnSnapshotSchedState DisplayString,
		lhnWarrantyPartNumber DisplayString,
		lhnWarrantySerialNumber DisplayString,
		lhnWarrantyLicenseNumber DisplayString,
		lhnWearState DisplayString,
		lhnWearDays Integer32,
		lhnWearPercent Gauge32
		}

lhnNotificationMessageIndex OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The index for the lhnNotificationMessageTable table."
	::= { lhnNotificationMessageEntry 1 }


lhnMessage OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The notification message."
	::= { lhnNotificationMessageEntry 2 }


lhnMessageTime OBJECT-TYPE
	SYNTAX DateAndTime
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The time the notification was sent."
	::= { lhnNotificationMessageEntry 3 }


lhnEventID OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The event ID in symbolic format."
	::= { lhnNotificationMessageEntry 4 }


lhnSeverity OBJECT-TYPE
	SYNTAX INTEGER {
	critical(0),
	warning(1),
	info(2)
	}
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The event severity."
	::= { lhnNotificationMessageEntry 5 }


lhnHostname OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The NSM hostname."
	::= { lhnNotificationMessageEntry 6 }


lhnPrimaryIP OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The primary IP address."
	::= { lhnNotificationMessageEntry 7 }


lhnMac OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The MAC address of the primary IP address."
	::= { lhnNotificationMessageEntry 8 }


lhnSerialNumber OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The chassis serial number."
	::= { lhnNotificationMessageEntry 9 }


lhnModelName OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The system model name."
	::= { lhnNotificationMessageEntry 10 }


lhnProductName OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The OEM product name."
	::= { lhnNotificationMessageEntry 11 }


lhnProductID OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The OEM product ID."
	::= { lhnNotificationMessageEntry 12 }


lhnHpim OBJECT-TYPE
	SYNTAX TruthValue
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "HP Insight Manager SNMP agent installed on NSM"
	::= { lhnNotificationMessageEntry 13 }


lhnSoftwareVersion OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The SAN/iQ software version"
	::= { lhnNotificationMessageEntry 14 }


lhnManagementGroupVersion OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The management group version."
	::= { lhnNotificationMessageEntry 15 }


lhnManagementGroupSerialNumber OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The management group serial number."
	::= { lhnNotificationMessageEntry 16 }


lhnManagementGroup OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The management group name."
	::= { lhnNotificationMessageEntry 17 }


lhnCluster OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The cluster name."
	::= { lhnNotificationMessageEntry 18 }


lhnSite OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The site the cluster is in."
	::= { lhnNotificationMessageEntry 19 }


lhnComponentName OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The component name."
	::= { lhnNotificationMessageEntry 20 }


lhnSystemName OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The system hostname."
	::= { lhnNotificationMessageEntry 21 }


lhnLogicalName OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The logical name for the component."
	::= { lhnNotificationMessageEntry 22 }


lhnComponentState OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The component state."
	::= { lhnNotificationMessageEntry 23 }


lhnComponentModel OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The component model."
	::= { lhnNotificationMessageEntry 24 }


lhnComponentSerialNumber OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The component serial number."
	::= { lhnNotificationMessageEntry 25 }


lhnComponentFirmwareVersion OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The component firmware version."
	::= { lhnNotificationMessageEntry 26 }


lhnComponentHardwareVersion OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The component hardware version."
	::= { lhnNotificationMessageEntry 27 }


lhnDriverVersion OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The driver version."
	::= { lhnNotificationMessageEntry 28 }


lhnBiosVersion OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The BIOS version."
	::= { lhnNotificationMessageEntry 29 }


lhnRaidConfiguration OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The RAID configuration."
	::= { lhnNotificationMessageEntry 30 }


lhnDiskInterface OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The disk interface type."
	::= { lhnNotificationMessageEntry 31 }


lhnDiskCapacity OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The disk capacity."
	::= { lhnNotificationMessageEntry 32 }


lhnRaidState OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The RAID state."
	::= { lhnNotificationMessageEntry 33 }


lhnParityInitStatus OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The RAID Parity Initialization status."
	::= { lhnNotificationMessageEntry 34 }


lhnHealthState OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The disk health state."
	::= { lhnNotificationMessageEntry 35 }


lhnBpsState OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The BPS state."
	::= { lhnNotificationMessageEntry 36 }


lhnCacheState OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The cache state."
	::= { lhnNotificationMessageEntry 37 }


lhnLinkState OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The link state."
	::= { lhnNotificationMessageEntry 38 }


lhnVipState OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The cluster VIP state."
	::= { lhnNotificationMessageEntry 39 }


lhnMaintenanceMode OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The management group maintenance mode."
	::= { lhnNotificationMessageEntry 40 }


lhnMinFanSpeed OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The minimal fan speed."
	::= { lhnNotificationMessageEntry 41 }


lhnFanSpeed OBJECT-TYPE
	SYNTAX Gauge
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The fan speed."
	::= { lhnNotificationMessageEntry 42 }


lhnHighTemperatureLimit OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The high temperature limit."
	::= { lhnNotificationMessageEntry 43 }


lhnTemperatureState OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The component temperature state."
	::= { lhnNotificationMessageEntry 44 }


lhnTemperature OBJECT-TYPE
	SYNTAX Gauge
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The component temperature."
	::= { lhnNotificationMessageEntry 45 }


lhnHighVoltageLimit OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The high voltage limit."
	::= { lhnNotificationMessageEntry 46 }


lhnLowVoltageLimit OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The low voltage limit."
	::= { lhnNotificationMessageEntry 47 }


lhnVoltage OBJECT-TYPE
	SYNTAX Gauge
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The voltage."
	::= { lhnNotificationMessageEntry 48 }


lhnUtilization OBJECT-TYPE
	SYNTAX Gauge
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The resource utilization."
	::= { lhnNotificationMessageEntry 49 }


lhnLatency OBJECT-TYPE
	SYNTAX Gauge
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The storage server latency."
	::= { lhnNotificationMessageEntry 50 }


lhnMemoryUtilization OBJECT-TYPE
	SYNTAX Gauge
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The memory utilization."
	::= { lhnNotificationMessageEntry 51 }


lhnMemoryConfig OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The system memory configuration."
	::= { lhnNotificationMessageEntry 52 }


lhnCpuUtilization OBJECT-TYPE
	SYNTAX Gauge
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The CPU utilization."
	::= { lhnNotificationMessageEntry 53 }


lhnCpuConfig OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The number of CPU cores."
	::= { lhnNotificationMessageEntry 54 }


lhnDiskSpeed OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The disk interface speed."
	::= { lhnNotificationMessageEntry 55 }


lhnLicenseState OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The feature license state."
	::= { lhnNotificationMessageEntry 56 }


lhnUtilizationState OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The utilization state."
	::= { lhnNotificationMessageEntry 57 }


lhnLatencyState OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The storage server latency state."
	::= { lhnNotificationMessageEntry 58 }


lhnServerVIPAddress OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The VIP address."
	::= { lhnNotificationMessageEntry 59 }


lhnServerVIPState OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The VIP state."
	::= { lhnNotificationMessageEntry 60 }


lhnReplicationState OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The volume/snapshot replication state."
	::= { lhnNotificationMessageEntry 61 }


lhnSnapshotState OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The snapshot state."
	::= { lhnNotificationMessageEntry 62 }


lhnSnapshotSchedState OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The snapshot schedule state."
	::= { lhnNotificationMessageEntry 63 }


lhnWarrantyPartNumber OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The warranty part number."
	::= { lhnNotificationMessageEntry 64 }


lhnWarrantySerialNumber OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The warranty Serial number."
	::= { lhnNotificationMessageEntry 65 }


lhnWarrantyLicenseNumber OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The warranty License number."
	::= { lhnNotificationMessageEntry 66 }


lhnWearState OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The SSD Wear State."
	::= { lhnNotificationMessageEntry 67 }


lhnWearDays OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The SSD Wear Days Remaining."
	::= { lhnNotificationMessageEntry 68 }


lhnWearPercent OBJECT-TYPE
	SYNTAX Gauge
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The SSD Wear Percentage Remaining."
	::= { lhnNotificationMessageEntry 69 }


lhnNotificationOldMessageCount OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "number of notification messages
Used by SAN/iQ 8.1 and earlier.
Obsolete in SAN/iQ 8.5.
Marked as current to increase compatability with some SNMP clients."
	::= { lhnNsmOldNotification 1 }


lhnNotificationOldMessageTable OBJECT-TYPE
	SYNTAX SEQUENCE OF LhnNotificationOldMessageEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A table of notification messages for the NSM.
The number of entries is given by notificationMessageCount.
Used by SAN/iQ 8.1 and earlier.
Obsolete in SAN/iQ 8.5.
Marked as current to increase compatability with some SNMP clients."
	::= { lhnNsmOldNotification 2 }


lhnNotificationOldMessageEntry OBJECT-TYPE
	SYNTAX LhnNotificationOldMessageEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "row of notification message parameters
Used by SAN/iQ 8.1 and earlier.
Obsolete in SAN/iQ 8.5.
Marked as current to increase compatability with some SNMP clients."
	INDEX { lhnNotificationIndex  }

	::= { lhnNotificationOldMessageTable 1 }

lhnNotificationOldMessageEntry ::=
	SEQUENCE {
		lhnNotificationIndex Unsigned32,
		lhnNotificationMessage DisplayString,
		lhnNotificationTime DateAndTime
		}

lhnNotificationIndex OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "notification message index
Used by SAN/iQ 8.1 and earlier.
Obsolete in SAN/iQ 8.5.
Marked as current to increase compatability with some SNMP clients."
	::= { lhnNotificationOldMessageEntry 1 }


lhnNotificationMessage OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "notification message contents
Used by SAN/iQ 8.1 and earlier.
Obsolete in SAN/iQ 8.5.
Marked as current to increase compatability with some SNMP clients."
	::= { lhnNotificationOldMessageEntry 2 }


lhnNotificationTime OBJECT-TYPE
	SYNTAX DateAndTime
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "time notification occurred
Used by SAN/iQ 8.1 and earlier.
Obsolete in SAN/iQ 8.5.
Marked as current to increase compatability with some SNMP clients."
	::= { lhnNotificationOldMessageEntry 3 }


lhnNsmNotificationGeneric TRAP-TYPE
	ENTERPRISE lhnNsmDevices
	VARIABLES { lhnMessage, lhnMessageTime, lhnEventID, lhnSeverity, lhnHostname, lhnPrimaryIP, lhnMac, lhnSerialNumber, lhnModelName, lhnProductName, lhnProductID, lhnHpim, lhnSoftwareVersion, lhnManagementGroupVersion, lhnManagementGroupSerialNumber, lhnManagementGroup, lhnCluster, lhnSite, lhnWarrantyPartNumber, lhnWarrantySerialNumber, lhnWarrantyLicenseNumber }
DESCRIPTION "A generic system event was generated.
The user chose to be notified of this condition
via SNMP. A table of messages exists which stores
all the notifications issued. This trap will
contain the OID referring to the corresponding
message stored in this table.
Added in SAN/iQ 8.5"
	::= 1


lhnNsmNotificationBackplane TRAP-TYPE
	ENTERPRISE lhnNsmDevices
	VARIABLES { lhnMessage, lhnMessageTime, lhnEventID, lhnSeverity, lhnHostname, lhnPrimaryIP, lhnMac, lhnSerialNumber, lhnModelName, lhnProductName, lhnProductID, lhnHpim, lhnSoftwareVersion, lhnManagementGroupVersion, lhnManagementGroupSerialNumber, lhnManagementGroup, lhnCluster, lhnSite, lhnComponentName, lhnComponentState, lhnComponentSerialNumber, lhnComponentFirmwareVersion, lhnWarrantyPartNumber, lhnWarrantySerialNumber, lhnWarrantyLicenseNumber }
DESCRIPTION "An event for the system backplane was generated.
The user chose to be notified of this condition
via SNMP. A table of messages exists which stores
all the notifications issued. This trap will
contain the OID referring to the corresponding
message stored in this table.
Added in SAN/iQ 8.5"
	::= 2


lhnNsmNotificationController TRAP-TYPE
	ENTERPRISE lhnNsmDevices
	VARIABLES { lhnMessage, lhnMessageTime, lhnEventID, lhnSeverity, lhnHostname, lhnPrimaryIP, lhnMac, lhnSerialNumber, lhnModelName, lhnProductName, lhnProductID, lhnHpim, lhnSoftwareVersion, lhnManagementGroupVersion, lhnManagementGroupSerialNumber, lhnManagementGroup, lhnCluster, lhnSite, lhnComponentName, lhnComponentState, lhnComponentModel, lhnComponentSerialNumber, lhnComponentHardwareVersion, lhnComponentFirmwareVersion, lhnDriverVersion, lhnBiosVersion, lhnCacheState, lhnBpsState, lhnWarrantyPartNumber, lhnWarrantySerialNumber, lhnWarrantyLicenseNumber }
DESCRIPTION "An event for the RAID controller was generated.
The user chose to be notified of this condition
via SNMP. A table of messages exists which stores
all the notifications issued. This trap will
contain the OID referring to the corresponding
message stored in this table.
Added in SAN/iQ 8.5"
	::= 3


lhnNsmNotificationRAID TRAP-TYPE
	ENTERPRISE lhnNsmDevices
	VARIABLES { lhnMessage, lhnMessageTime, lhnEventID, lhnSeverity, lhnHostname, lhnPrimaryIP, lhnMac, lhnSerialNumber, lhnModelName, lhnProductName, lhnProductID, lhnHpim, lhnSoftwareVersion, lhnManagementGroupVersion, lhnManagementGroupSerialNumber, lhnManagementGroup, lhnCluster, lhnSite, lhnComponentState, lhnRaidConfiguration, lhnParityInitStatus, lhnWarrantyPartNumber, lhnWarrantySerialNumber, lhnWarrantyLicenseNumber }
DESCRIPTION "An event for the system RAID was generated.
The user chose to be notified of this condition
via SNMP. A table of messages exists which stores
all the notifications issued. This trap will
contain the OID referring to the corresponding
message stored in this table.
Added in SAN/iQ 8.5"
	::= 4


lhnNsmNotificationDisk TRAP-TYPE
	ENTERPRISE lhnNsmDevices
	VARIABLES { lhnMessage, lhnMessageTime, lhnEventID, lhnSeverity, lhnHostname, lhnPrimaryIP, lhnMac, lhnSerialNumber, lhnModelName, lhnProductName, lhnProductID, lhnHpim, lhnSoftwareVersion, lhnManagementGroupVersion, lhnManagementGroupSerialNumber, lhnManagementGroup, lhnCluster, lhnSite, lhnComponentName, lhnComponentState, lhnComponentModel, lhnComponentSerialNumber, lhnComponentFirmwareVersion, lhnDiskInterface, lhnDiskCapacity, lhnHealthState, lhnTemperatureState, lhnTemperature, lhnDiskSpeed, lhnWarrantyPartNumber, lhnWarrantySerialNumber, lhnWarrantyLicenseNumber, lhnWearState, lhnWearDays, lhnWearPercent }
DESCRIPTION "An event for a disk was generated.
The user chose to be notified of this condition
via SNMP. A table of messages exists which stores
all the notifications issued. This trap will
contain the OID referring to the corresponding
message stored in this table.
Added in SAN/iQ 8.5"
	::= 5


lhnNsmNotificationBootDevice TRAP-TYPE
	ENTERPRISE lhnNsmDevices
	VARIABLES { lhnMessage, lhnMessageTime, lhnEventID, lhnSeverity, lhnHostname, lhnPrimaryIP, lhnMac, lhnSerialNumber, lhnModelName, lhnProductName, lhnProductID, lhnHpim, lhnSoftwareVersion, lhnManagementGroupVersion, lhnManagementGroupSerialNumber, lhnManagementGroup, lhnCluster, lhnSite, lhnComponentName, lhnComponentState, lhnWarrantyPartNumber, lhnWarrantySerialNumber, lhnWarrantyLicenseNumber }
DESCRIPTION "An event for a boot device was generated.
The user chose to be notified of this condition
via SNMP. A table of messages exists which stores
all the notifications issued. This trap will
contain the OID referring to the corresponding
message stored in this table.
Added in SAN/iQ 8.5"
	::= 6


lhnNsmNotificationFan TRAP-TYPE
	ENTERPRISE lhnNsmDevices
	VARIABLES { lhnMessage, lhnMessageTime, lhnEventID, lhnSeverity, lhnHostname, lhnPrimaryIP, lhnMac, lhnSerialNumber, lhnModelName, lhnProductName, lhnProductID, lhnHpim, lhnSoftwareVersion, lhnManagementGroupVersion, lhnManagementGroupSerialNumber, lhnManagementGroup, lhnCluster, lhnSite, lhnComponentName, lhnComponentState, lhnMinFanSpeed, lhnFanSpeed, lhnWarrantyPartNumber, lhnWarrantySerialNumber, lhnWarrantyLicenseNumber }
DESCRIPTION "An event for a fan was generated.
The user chose to be notified of this condition
via SNMP. A table of messages exists which stores
all the notifications issued. This trap will
contain the OID referring to the corresponding
message stored in this table.
Added in SAN/iQ 8.5"
	::= 7


lhnNsmNotificationTemperature TRAP-TYPE
	ENTERPRISE lhnNsmDevices
	VARIABLES { lhnMessage, lhnMessageTime, lhnEventID, lhnSeverity, lhnHostname, lhnPrimaryIP, lhnMac, lhnSerialNumber, lhnModelName, lhnProductName, lhnProductID, lhnHpim, lhnSoftwareVersion, lhnManagementGroupVersion, lhnManagementGroupSerialNumber, lhnManagementGroup, lhnCluster, lhnSite, lhnComponentName, lhnComponentState, lhnHighTemperatureLimit, lhnTemperature, lhnWarrantyPartNumber, lhnWarrantySerialNumber, lhnWarrantyLicenseNumber }
DESCRIPTION "An event for a temperature sensor was generated.
The user chose to be notified of this condition
via SNMP. A table of messages exists which stores
all the notifications issued. This trap will
contain the OID referring to the corresponding
message stored in this table.
Added in SAN/iQ 8.5"
	::= 8


lhnNsmNotificationPowerSupply TRAP-TYPE
	ENTERPRISE lhnNsmDevices
	VARIABLES { lhnMessage, lhnMessageTime, lhnEventID, lhnSeverity, lhnHostname, lhnPrimaryIP, lhnMac, lhnSerialNumber, lhnModelName, lhnProductName, lhnProductID, lhnHpim, lhnSoftwareVersion, lhnManagementGroupVersion, lhnManagementGroupSerialNumber, lhnManagementGroup, lhnCluster, lhnSite, lhnComponentName, lhnComponentState, lhnWarrantyPartNumber, lhnWarrantySerialNumber, lhnWarrantyLicenseNumber }
DESCRIPTION "An event for a power supply was generated.
The user chose to be notified of this condition
via SNMP. A table of messages exists which stores
all the notifications issued. This trap will
contain the OID referring to the corresponding
message stored in this table.
Added in SAN/iQ 8.5"
	::= 9


lhnNsmNotificationVoltage TRAP-TYPE
	ENTERPRISE lhnNsmDevices
	VARIABLES { lhnMessage, lhnMessageTime, lhnEventID, lhnSeverity, lhnHostname, lhnPrimaryIP, lhnMac, lhnSerialNumber, lhnModelName, lhnProductName, lhnProductID, lhnHpim, lhnSoftwareVersion, lhnManagementGroupVersion, lhnManagementGroupSerialNumber, lhnManagementGroup, lhnCluster, lhnSite, lhnComponentName, lhnComponentState, lhnHighVoltageLimit, lhnLowVoltageLimit, lhnVoltage, lhnWarrantyPartNumber, lhnWarrantySerialNumber, lhnWarrantyLicenseNumber }
DESCRIPTION "An event for a voltage sensor was generated.
The user chose to be notified of this condition
via SNMP. A table of messages exists which stores
all the notifications issued. This trap will
contain the OID referring to the corresponding
message stored in this table.
Added in SAN/iQ 8.5"
	::= 10


lhnNsmNotificationNetwork TRAP-TYPE
	ENTERPRISE lhnNsmDevices
	VARIABLES { lhnMessage, lhnMessageTime, lhnEventID, lhnSeverity, lhnHostname, lhnPrimaryIP, lhnMac, lhnSerialNumber, lhnModelName, lhnProductName, lhnProductID, lhnHpim, lhnSoftwareVersion, lhnManagementGroupVersion, lhnManagementGroupSerialNumber, lhnManagementGroup, lhnCluster, lhnSite, lhnSystemName, lhnLogicalName, lhnLinkState, lhnWarrantyPartNumber, lhnWarrantySerialNumber, lhnWarrantyLicenseNumber }
DESCRIPTION "An event for the network was generated.
The user chose to be notified of this condition
via SNMP. A table of messages exists which stores
all the notifications issued. This trap will
contain the OID referring to the corresponding
message stored in this table.
Added in SAN/iQ 8.5"
	::= 11


lhnNsmNotificationMemory TRAP-TYPE
	ENTERPRISE lhnNsmDevices
	VARIABLES { lhnMessage, lhnMessageTime, lhnEventID, lhnSeverity, lhnHostname, lhnPrimaryIP, lhnMac, lhnSerialNumber, lhnModelName, lhnProductName, lhnProductID, lhnHpim, lhnSoftwareVersion, lhnManagementGroupVersion, lhnManagementGroupSerialNumber, lhnManagementGroup, lhnCluster, lhnSite, lhnMemoryConfig, lhnMemoryUtilization, lhnWarrantyPartNumber, lhnWarrantySerialNumber, lhnWarrantyLicenseNumber }
DESCRIPTION "An event for the system memory was generated.
The user chose to be notified of this condition
via SNMP. A table of messages exists which stores
all the notifications issued. This trap will
contain the OID referring to the corresponding
message stored in this table.
Added in SAN/iQ 8.5"
	::= 12


lhnNsmNotificationCPU TRAP-TYPE
	ENTERPRISE lhnNsmDevices
	VARIABLES { lhnMessage, lhnMessageTime, lhnEventID, lhnSeverity, lhnHostname, lhnPrimaryIP, lhnMac, lhnSerialNumber, lhnModelName, lhnProductName, lhnProductID, lhnHpim, lhnSoftwareVersion, lhnManagementGroupVersion, lhnManagementGroupSerialNumber, lhnManagementGroup, lhnCluster, lhnSite, lhnCpuConfig, lhnCpuUtilization, lhnWarrantyPartNumber, lhnWarrantySerialNumber, lhnWarrantyLicenseNumber }
DESCRIPTION "An event for the CPU was generated.
The user chose to be notified of this condition
via SNMP. A table of messages exists which stores
all the notifications issued. This trap will
contain the OID referring to the corresponding
message stored in this table.
Added in SAN/iQ 8.5"
	::= 13


lhnNsmNotificationLogging TRAP-TYPE
	ENTERPRISE lhnNsmDevices
	VARIABLES { lhnMessage, lhnMessageTime, lhnEventID, lhnSeverity, lhnHostname, lhnPrimaryIP, lhnMac, lhnSerialNumber, lhnModelName, lhnProductName, lhnProductID, lhnHpim, lhnSoftwareVersion, lhnManagementGroupVersion, lhnManagementGroupSerialNumber, lhnManagementGroup, lhnCluster, lhnSite, lhnUtilization }
DESCRIPTION "An event for the log partition was generated.
The user chose to be notified of this condition
via SNMP. A table of messages exists which stores
all the notifications issued. This trap will
contain the OID referring to the corresponding
message stored in this table.
Added in SAN/iQ 8.5"
	::= 14


lhnNsmNotificationManagementGroup TRAP-TYPE
	ENTERPRISE lhnNsmDevices
	VARIABLES { lhnMessage, lhnMessageTime, lhnEventID, lhnSeverity, lhnHostname, lhnPrimaryIP, lhnMac, lhnSerialNumber, lhnModelName, lhnProductName, lhnProductID, lhnHpim, lhnSoftwareVersion, lhnManagementGroupVersion, lhnManagementGroupSerialNumber, lhnManagementGroup, lhnCluster, lhnSite, lhnComponentName, lhnMaintenanceMode, lhnLicenseState }
DESCRIPTION "An event for the management group was generated.
The user chose to be notified of this condition
via SNMP. A table of messages exists which stores
all the notifications issued. This trap will
contain the OID referring to the corresponding
message stored in this table.
Added in SAN/iQ 8.5"
	::= 15


lhnNsmNotificationRemoteManagementGroup TRAP-TYPE
	ENTERPRISE lhnNsmDevices
	VARIABLES { lhnMessage, lhnMessageTime, lhnEventID, lhnSeverity, lhnHostname, lhnPrimaryIP, lhnMac, lhnSerialNumber, lhnModelName, lhnProductName, lhnProductID, lhnHpim, lhnSoftwareVersion, lhnManagementGroupVersion, lhnManagementGroupSerialNumber, lhnManagementGroup, lhnCluster, lhnSite, lhnComponentName, lhnComponentState }
DESCRIPTION "An event for a remote management group was generated.
The user chose to be notified of this condition
via SNMP. A table of messages exists which stores
all the notifications issued. This trap will
contain the OID referring to the corresponding
message stored in this table.
Added in SAN/iQ 8.5"
	::= 16


lhnNsmNotificationCluster TRAP-TYPE
	ENTERPRISE lhnNsmDevices
	VARIABLES { lhnMessage, lhnMessageTime, lhnEventID, lhnSeverity, lhnHostname, lhnPrimaryIP, lhnMac, lhnSerialNumber, lhnModelName, lhnProductName, lhnProductID, lhnHpim, lhnSoftwareVersion, lhnManagementGroupVersion, lhnManagementGroupSerialNumber, lhnManagementGroup, lhnCluster, lhnSite, lhnUtilization, lhnVipState, lhnUtilizationState }
DESCRIPTION "An event for the cluster was generated.
The user chose to be notified of this condition
via SNMP. A table of messages exists which stores
all the notifications issued. This trap will
contain the OID referring to the corresponding
message stored in this table.
Added in SAN/iQ 8.5"
	::= 17


lhnNsmNotificationStorageServer TRAP-TYPE
	ENTERPRISE lhnNsmDevices
	VARIABLES { lhnMessage, lhnMessageTime, lhnEventID, lhnSeverity, lhnHostname, lhnPrimaryIP, lhnMac, lhnSerialNumber, lhnModelName, lhnProductName, lhnProductID, lhnHpim, lhnSoftwareVersion, lhnManagementGroupVersion, lhnManagementGroupSerialNumber, lhnManagementGroup, lhnCluster, lhnSite, lhnComponentName, lhnComponentState, lhnLatency, lhnLatencyState, lhnServerVIPAddress, lhnServerVIPState }
DESCRIPTION "An event for the storage server was generated.
The user chose to be notified of this condition
via SNMP. A table of messages exists which stores
all the notifications issued. This trap will
contain the OID referring to the corresponding
message stored in this table.
Added in SAN/iQ 8.5"
	::= 18


lhnNsmNotificationRemoteCopy TRAP-TYPE
	ENTERPRISE lhnNsmDevices
	VARIABLES { lhnMessage, lhnMessageTime, lhnEventID, lhnSeverity, lhnHostname, lhnPrimaryIP, lhnMac, lhnSerialNumber, lhnModelName, lhnProductName, lhnProductID, lhnHpim, lhnSoftwareVersion, lhnManagementGroupVersion, lhnManagementGroupSerialNumber, lhnManagementGroup, lhnCluster, lhnSite, lhnComponentName, lhnComponentState, lhnReplicationState }
DESCRIPTION "An event for a remote copy operation was generated.
The user chose to be notified of this condition
via SNMP. A table of messages exists which stores
all the notifications issued. This trap will
contain the OID referring to the corresponding
message stored in this table.
Added in SAN/iQ 8.5"
	::= 19


lhnNsmNotificationVolume TRAP-TYPE
	ENTERPRISE lhnNsmDevices
	VARIABLES { lhnMessage, lhnMessageTime, lhnEventID, lhnSeverity, lhnHostname, lhnPrimaryIP, lhnMac, lhnSerialNumber, lhnModelName, lhnProductName, lhnProductID, lhnHpim, lhnSoftwareVersion, lhnManagementGroupVersion, lhnManagementGroupSerialNumber, lhnManagementGroup, lhnCluster, lhnSite, lhnComponentName, lhnComponentState }
DESCRIPTION "An event for a volume was generated.
The user chose to be notified of this condition
via SNMP. A table of messages exists which stores
all the notifications issued. This trap will
contain the OID referring to the corresponding
message stored in this table.
Added in SAN/iQ 8.5"
	::= 20


lhnNsmNotificationSnapshot TRAP-TYPE
	ENTERPRISE lhnNsmDevices
	VARIABLES { lhnMessage, lhnMessageTime, lhnEventID, lhnSeverity, lhnHostname, lhnPrimaryIP, lhnMac, lhnSerialNumber, lhnModelName, lhnProductName, lhnProductID, lhnHpim, lhnSoftwareVersion, lhnManagementGroupVersion, lhnManagementGroupSerialNumber, lhnManagementGroup, lhnCluster, lhnSite, lhnComponentName, lhnComponentState, lhnSnapshotState }
DESCRIPTION "An event for a snapshot was generated.
The user chose to be notified of this condition
via SNMP. A table of messages exists which stores
all the notifications issued. This trap will
contain the OID referring to the corresponding
message stored in this table.
Added in SAN/iQ 8.5"
	::= 21


lhnNsmNotificationSnapshotSchedule TRAP-TYPE
	ENTERPRISE lhnNsmDevices
	VARIABLES { lhnMessage, lhnMessageTime, lhnEventID, lhnSeverity, lhnHostname, lhnPrimaryIP, lhnMac, lhnSerialNumber, lhnModelName, lhnProductName, lhnProductID, lhnHpim, lhnSoftwareVersion, lhnManagementGroupVersion, lhnManagementGroupSerialNumber, lhnManagementGroup, lhnCluster, lhnSite, lhnComponentName, lhnComponentState, lhnSnapshotSchedState }
DESCRIPTION "An event for a snapshot schedule was generated.
The user chose to be notified of this condition
via SNMP. A table of messages exists which stores
all the notifications issued. This trap will
contain the OID referring to the corresponding
message stored in this table.
Added in SAN/iQ 9.0"
	::= 22


lhnNsmNotificationManager TRAP-TYPE
	ENTERPRISE lhnNsmDevices
	VARIABLES { lhnMessage, lhnMessageTime, lhnEventID, lhnSeverity, lhnHostname, lhnPrimaryIP, lhnMac, lhnSerialNumber, lhnModelName, lhnProductName, lhnProductID, lhnHpim, lhnSoftwareVersion, lhnManagementGroupVersion, lhnManagementGroupSerialNumber, lhnManagementGroup, lhnCluster, lhnSite, lhnComponentName, lhnComponentState }
DESCRIPTION "An event for a manager was generated.
The user chose to be notified of this condition
via SNMP. A table of messages exists which stores
all the notifications issued. This trap will
contain the OID referring to the corresponding
message stored in this table.
Added in SAN/iQ 9.0"
	::= 23


lhnNsmNotificationVirtualManager TRAP-TYPE
	ENTERPRISE lhnNsmDevices
	VARIABLES { lhnMessage, lhnMessageTime, lhnEventID, lhnSeverity, lhnHostname, lhnPrimaryIP, lhnMac, lhnSerialNumber, lhnModelName, lhnProductName, lhnProductID, lhnHpim, lhnSoftwareVersion, lhnManagementGroupVersion, lhnManagementGroupSerialNumber, lhnManagementGroup, lhnCluster, lhnSite, lhnComponentName, lhnComponentState }
DESCRIPTION "An event for a virtual manager was generated.
The user chose to be notified of this condition
via SNMP. A table of messages exists which stores
all the notifications issued. This trap will
contain the OID referring to the corresponding
message stored in this table.
Added in SAN/iQ 9.0"
	::= 24


lhnNsmNotificationFailoverManager TRAP-TYPE
	ENTERPRISE lhnNsmDevices
	VARIABLES { lhnMessage, lhnMessageTime, lhnEventID, lhnSeverity, lhnHostname, lhnPrimaryIP, lhnMac, lhnSerialNumber, lhnModelName, lhnProductName, lhnProductID, lhnHpim, lhnSoftwareVersion, lhnManagementGroupVersion, lhnManagementGroupSerialNumber, lhnManagementGroup, lhnCluster, lhnSite, lhnComponentName, lhnComponentState }
DESCRIPTION "An event for a failover manager was generated.
The user chose to be notified of this condition
via SNMP. A table of messages exists which stores
all the notifications issued. This trap will
contain the OID referring to the corresponding
message stored in this table.
Added in SAN/iQ 9.0"
	::= 25


lhnNsmNotificationConfiguration TRAP-TYPE
	ENTERPRISE lhnNsmDevices
	VARIABLES { lhnMessage, lhnMessageTime, lhnEventID, lhnSeverity, lhnHostname, lhnPrimaryIP, lhnMac, lhnSerialNumber, lhnModelName, lhnProductName, lhnProductID, lhnHpim, lhnSoftwareVersion, lhnManagementGroupVersion, lhnManagementGroupSerialNumber, lhnManagementGroup, lhnCluster, lhnSite }
DESCRIPTION "An event for system configuration was generated.
The user chose to be notified of this condition
via SNMP. A table of messages exists which stores
all the notifications issued. This trap will
contain the OID referring to the corresponding
message stored in this table.
Added in SAN/iQ 9.0"
	::= 26


lhnNsmNotificationResource TRAP-TYPE
	ENTERPRISE lhnNsmDevices
	VARIABLES { lhnMessage, lhnMessageTime, lhnEventID, lhnSeverity, lhnHostname, lhnPrimaryIP, lhnMac, lhnSerialNumber, lhnModelName, lhnProductName, lhnProductID, lhnHpim, lhnSoftwareVersion, lhnManagementGroupVersion, lhnManagementGroupSerialNumber, lhnManagementGroup, lhnCluster, lhnSite }
DESCRIPTION "An event for a system resource was generated.
The user chose to be notified of this condition
via SNMP. A table of messages exists which stores
all the notifications issued. This trap will
contain the OID referring to the corresponding
message stored in this table.
Added in SAN/iQ 9.0"
	::= 27


lhnNsmNotificationService TRAP-TYPE
	ENTERPRISE lhnNsmDevices
	VARIABLES { lhnMessage, lhnMessageTime, lhnEventID, lhnSeverity, lhnHostname, lhnPrimaryIP, lhnMac, lhnSerialNumber, lhnModelName, lhnProductName, lhnProductID, lhnHpim, lhnSoftwareVersion, lhnManagementGroupVersion, lhnManagementGroupSerialNumber, lhnManagementGroup, lhnCluster, lhnSite }
DESCRIPTION "An event for a system service was generated.
The user chose to be notified of this condition
via SNMP. A table of messages exists which stores
all the notifications issued. This trap will
contain the OID referring to the corresponding
message stored in this table.
Added in SAN/iQ 9.0"
	::= 28


lhnNsmNotificationMountPoint TRAP-TYPE
	ENTERPRISE lhnNsmDevices
	VARIABLES { lhnMessage, lhnMessageTime, lhnEventID, lhnSeverity, lhnHostname, lhnPrimaryIP, lhnMac, lhnSerialNumber, lhnModelName, lhnProductName, lhnProductID, lhnHpim, lhnSoftwareVersion, lhnManagementGroupVersion, lhnManagementGroupSerialNumber, lhnManagementGroup, lhnCluster, lhnSite }
DESCRIPTION "An event for a mount point was generated.
The user chose to be notified of this condition
via SNMP. A table of messages exists which stores
all the notifications issued. This trap will
contain the OID referring to the corresponding
message stored in this table.
Added in SAN/iQ 9.0"
	::= 29


lhnNsmNotificationPartition TRAP-TYPE
	ENTERPRISE lhnNsmDevices
	VARIABLES { lhnMessage, lhnMessageTime, lhnEventID, lhnSeverity, lhnHostname, lhnPrimaryIP, lhnMac, lhnSerialNumber, lhnModelName, lhnProductName, lhnProductID, lhnHpim, lhnSoftwareVersion, lhnManagementGroupVersion, lhnManagementGroupSerialNumber, lhnManagementGroup, lhnCluster, lhnSite }
DESCRIPTION "An event for a partition was generated.
The user chose to be notified of this condition
via SNMP. A table of messages exists which stores
all the notifications issued. This trap will
contain the OID referring to the corresponding
message stored in this table.
Added in SAN/iQ 9.0"
	::= 30


lhnUserNotification TRAP-TYPE
	ENTERPRISE lhnNsmOldEvents
	VARIABLES { lhnNotificationMessage, lhnNotificationTime }
DESCRIPTION "A system event was generated.
The user chose to be notified of this condition
via SNMP. A table of messages exists which stores
all the notifications issued. This trap will
contain the OID referring to the corresponding
message stored in this table.
Used by SAN/iQ 8.1 and earlier.
Obsolete in SAN/iQ 8.5.
Marked as current to increase compatability with some SNMP clients."
	::= 1


END

